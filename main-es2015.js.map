{"version":3,"sources":["/home/bezoar/RodmanAngled/dist/rodman-core/fesm2015/rodman-core.js","/home/bezoar/RodmanAngled/dist/rodman-orm/fesm2015/rodman-orm.js","../rodman-core/src/lib/contents/content-glossary/content-glossary.component.html","../rodman-core/src/lib/contents/content-infographics/content-infographics.component.html","../rodman-core/src/lib/contents/content-issue/content-issue.component.html","../rodman-core/src/lib/contents/content-rss-feeds/content-rss-feeds.component.html","../rodman-core/src/lib/contents/content-search/content-search.component.html","../rodman-core/src/lib/contents/contents-webinar/contents-webinar.component.html","../rodman-core/src/lib/contents/static-content/static-content.component.html","../rodman-core/src/lib/directory-section/directory-home-page/directory-home-page.component.html","../rodman-core/src/lib/sites/components/not-found/not-found.component.html","../rodman-core/src/lib/users/Components/user-profile/user-profile.component.html","./src/app/app.component.html","./src/app/content/content-view/content-view.component.html","./src/app/user/component/user-mail-verify/user-mail-verify.component.html","/home/bezoar/RodmanAngled/node_modules/tslib/tslib.es6.js","../rodman-core/src/lib/contents/content-glossary/content-glossary.component.css","../rodman-core/src/lib/contents/content-glossary/content-glossary.component.ts","../rodman-core/src/lib/contents/content-infographics/content-infographics.component.css","../rodman-core/src/lib/contents/content-infographics/content-infographics.component.ts","../rodman-core/src/lib/contents/content-issue/content-issue.component.css","../rodman-core/src/lib/contents/content-issue/content-issue.component.ts","../rodman-core/src/lib/contents/content-issue/content-issue.service.ts","../rodman-core/src/lib/contents/content-rss-feeds/content-rss-feeds.component.css","../rodman-core/src/lib/contents/content-rss-feeds/content-rss-feeds.component.ts","../rodman-core/src/lib/contents/content-rss-feeds/content-rss-feeds.service.ts","../rodman-core/src/lib/contents/content-search/content-search.component.css","../rodman-core/src/lib/contents/content-search/content-search.component.ts","../rodman-core/src/lib/contents/content-search/content-search.service.ts","../rodman-core/src/lib/contents/contents-webinar/contents-webinar.component.css","../rodman-core/src/lib/contents/contents-webinar/contents-webinar.component.ts","../rodman-core/src/lib/contents/list-content/list-content.service.ts","../rodman-core/src/lib/contents/static-content/static-content.component.css","../rodman-core/src/lib/contents/static-content/static-content.component.ts","../rodman-core/src/lib/contents/static-content/static-content.service.ts","../rodman-core/src/lib/directory-section/directory-home-page/directory-home-page.component.css","../rodman-core/src/lib/directory-section/directory-home-page/directory-home-page.component.ts","../rodman-core/src/lib/directory-section/directory-home-page/directory-home-page.service.ts","../rodman-core/src/lib/rodman-core.service.ts","../rodman-core/src/lib/sites/components/not-found/not-found.component.css","../rodman-core/src/lib/sites/components/not-found/not-found.component.ts","../rodman-core/src/lib/users/Components/user-profile/user-profile.component.css","../rodman-core/src/lib/users/Components/user-profile/user-profile.component.ts","./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/content/content-view/content-view.component.css","./src/app/content/content-view/content-view.component.ts","./src/app/user/component/user-mail-verify/user-mail-verify.component.css","./src/app/user/component/user-mail-verify/user-mail-verify.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappingssI;AACrD;AAC/C;AACuB;AAC8C;AACe;AACd;AACtC;AACf;AACJ;AACX;AACW;AACH;AACoB;AACnB;AACmC;;AAEhF;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,qBAAqB,cAAc,gEAAW,EAAE,oFAAoF;AACpI,WAAW,EAAE;AACb;AACA,YAAY,wCAAwC;AACpD,WAAW,iCAAiC;AAC5C,YAAY,+CAA+C;AAC3D,WAAW,mCAAmC;AAC9C,WAAW,oCAAoC;AAC/C,YAAY,yBAAyB;AACrC,YAAY,8BAA8B;AAC1C,YAAY,uCAAuC;AACnD,YAAY,uCAAuC;AACnD,YAAY,mDAAmD;AAC/D,YAAY,4CAA4C;AACxD;AACA,WAAW,EAAE;AACb;AACA,UAAU,0CAA0C;AACpD,UAAU,kCAAkC;AAC5C,UAAU,iDAAiD;AAC3D,UAAU,oCAAoC;AAC9C,UAAU,qCAAqC;AAC/C,UAAU,2BAA2B;AACrC,WAAW,+BAA+B;AAC1C,WAAW,wCAAwC;AACnD,WAAW,wCAAwC;AACnD,WAAW,oDAAoD;AAC/D,WAAW,6CAA6C;AACxD;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,6DAAa;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sEAAsE,mDAAmD;AACzH;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa,mBAAmB,YAAY;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAU;AACzB;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK,OAAO,sEAAY,EAAE;AAC1B,KAAK,OAAO,sDAAM;AAClB;AACA,uDAAuD,wEAAkB,EAAE,gDAAgD,8BAA8B,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,CAAC,sEAAY,GAAG,8DAAQ,CAAC,sDAAM,GAAG,EAAE,gDAAgD;AAC3Q,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,mBAAmB;AACnB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,oBAAoB,kEAAmB;AACvC,oBAAoB,0DAAW;AAC/B,oBAAoB,qEAAgB;AACpC,oBAAoB,oEAAS;AAC7B;AACA,oBAAoB,+DAAW;AAC/B,oBAAoB,4DAAc;AAClC;AACA,oBAAoB,kDAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,+CAA+C,oEAAS,EAAE,+DAAW,EAAE,4DAAc;AACrF,6BAA6B,UAAU,oEAAS,EAAE,GAAG,6BAA6B,GAAG,UAAU,gEAAa,EAAE;AAC9G,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC,0BAA0B,4DAAY;AACtC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6EAA6E,qCAAqC,oBAAoB,kEAAU;AAChJ;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iFAAiF,yBAAyB,oBAAoB,kEAAU;AACxI;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,gDAAgD,wEAAkB,EAAE,yCAAyC,uBAAuB,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,yCAAyC;AAClO,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AAC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ACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yDAAU,WAAW,yDAAU;AACxD,+BAA+B,yDAAU;AACzC,qCAAqC,yDAAU;AAC/C,qCAAqC,yDAAU;AAC/C,wCAAwC,yDAAU;AAClD,wCAAwC,yDAAU;AAClD,uCAAuC,yDAAU;AACjD,6BAA6B,yDAAU;AACvC;AACA,SAAS;AACT;AACA;AACA,yBAAyB,yDAAU,WAAW,yDAAU;AACxD,2BAA2B,yDAAU;AACrC,6BAA6B,yDAAU;AACvC,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6UAA6U,+NAA+N,0vBAA0vB,YAAY,sOAAsO,mDAAmD,0mBAA0mB,sDAAsD,yyDAAyyD,yuBAAyuB,4NAA4N,YAAY,sJAAsJ,SAAS,mJAAmJ,QAAQ,iJAAiJ,SAAS,iOAAiO,sDAAsD,4rBAA4rB,6DAA6D,szBAAszB,05BAA05B,01EAA01E;AACn/U;AACA,mCAAmC,WAAW,kBAAkB,YAAY,UAAU,kBAAkB,qBAAqB,kBAAkB,aAAa,kBAAkB,yBAAyB,gBAAgB,uCAAuC,UAAU,yBAAyB,WAAW,kBAAkB,qBAAqB,cAAc,+BAA+B,sBAAsB,kCAAkC,cAAc;AACtc,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,mEAAQ,EAAE;AACtB,KAAK,OAAO,0DAAW,EAAE;AACzB,KAAK,8BAA8B;AACnC,KAAK,OAAO,sDAAM;AAClB;AACA,WAAW,EAoDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,mBAAmB;AACnB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC,0BAA0B,4DAAY;AACtC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,c;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gB;AACA;AACA,8F;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,gCAAgC,8GAA8G;AAC9I;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,sKAAsK,YAAY,eAAe,aAAa,wTAAwT,oCAAoC,izRAAizR,YAAY,iBAAiB,aAAa,6CAA6C,mCAAmC,WAAW,0FAA0F,oCAAoC,mCAAmC;AACjoT;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAa,EAAE;AAC3B,KAAK,0BAA0B;AAC/B,KAAK,OAAO,qEAAgB;AAC5B;AACA;AACA,WAAW,OAAO,mDAAK,EAAE;AACzB,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA,WAAW,EAwCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wCAAwC;AAC5D,mBAAmB,iCAAiC;AAC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O,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,wDAAwD,wEAAkB,EAAE,iDAAiD,+BAA+B,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,iDAAiD;AAClQ,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,6DAAa;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,mbAAmb,qFAAqF,8JAA8J,SAAS,gGAAgG,cAAc,uHAAuH,mBAAmB,yMAAyM,cAAc,qSAAqS,4JAA4J,cAAc,8kBAA8kB,8CAA8C,sFAAsF,gBAAgB,GAAG,eAAe,6GAA6G,0BAA0B,okBAAokB,YAAY,qBAAqB,YAAY,sZAAsZ,qFAAqF,yFAAyF,8lBAA8lB,qFAAqF,+JAA+J,iOAAiO,4CAA4C,qDAAqD,eAAe,+CAA+C,cAAc,8CAA8C,YAAY,sDAAsD,cAAc,4CAA4C,YAAY;AACnhK,qCAAqC,gBAAgB,gBAAgB,6BAA6B,WAAW,eAAe,eAAe,yBAAyB,gBAAgB,yBAAyB,kBAAkB,mBAAmB,qBAAqB,mBAAmB,eAAe,iBAAiB,UAAU,eAAe,gBAAgB,sBAAsB,aAAa;AACtY,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK,2BAA2B;AAChC,KAAK;AACL;AACA,WAAW,EA4CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wBAAwB,iFAAiF;AACzG,mBAAmB,EAAE;AACrB;AACA;AACA,yFAAyF,6FAA6F,oBAAoB,kEAAU;AACpN;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,0DAA0D,wEAAkB,EAAE,mDAAmD,iCAAiC,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,mDAAmD;AAC1Q,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,6DAAa;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,Q;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,8qBAA8qB,4BAA4B,+lBAA+lB,YAAY,81DAA81D,4BAA4B,ujBAAujB,YAAY;AAClvH;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK,OAAO,8DAAc,EAAE;AAC5B,KAAK;AACL;AACA,WAAW,EAiCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oFAAoF,iDAAiD,oBAAoB,kEAAU;AACnK;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,wDAAwD,wEAAkB,EAAE,iDAAiD,+BAA+B,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,iDAAiD;AAClQ,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kFAAkF,iCAAiC,oBAAoB,kEAAU;AACjJ;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,2DAA2D,wEAAkB,EAAE,oDAAoD,kCAAkC,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,oDAAoD;AAC9Q,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,KAAK,oEAAoE;AACzE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uC;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,4BAA4B,oEAAS,EAAE,4EAAiB;AACxD,yCAAyC,qBAAqB,kBAAkB,MAAM,uBAAuB,MAAM,qBAAqB;AACxI,aAAa;AACb;AACA;AACA;AACA,KAAK,2BAA2B;AAChC,KAAK,OAAO,4EAAiB,EAAE;AAC/B,KAAK,8BAA8B;AACnC,KAAK,0BAA0B;AAC/B,KAAK,OAAO,sDAAM;AAClB;AACA,WAAW,EAgCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,qBAAqB,aAAa,YAAY,WAAW,gBAAgB,iBAAiB,cAAc,iBAAiB;AACzJ,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,sEAAY,EAAE;AAC1B,KAAK,0BAA0B;AAC/B,KAAK,OAAO,sDAAM;AAClB;AACA;AACA,wBAAwB,OAAO,mDAAK,EAAE;AACtC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,mgBAAmgB,0FAA0F,gDAAgD,mBAAmB,iCAAiC,qBAAqB,uJAAuJ,gDAAgD,GAAG,qDAAqD,ykCAAykC,0FAA0F,sVAAsV,gDAAgD,GAAG,qDAAqD,+rBAA+rB,yBAAyB,eAAe,6BAA6B,umCAAumC,yBAAyB,aAAa,gBAAgB,waAAwa,yBAAyB,eAAe,6BAA6B;AACp8J;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW,OAAO,mDAAK,EAAE;AACzB;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mFAAmF,yBAAyB,oBAAoB,kEAAU;AAC1I;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qFAAqF,6JAA6J,oBAAoB,kEAAU;AAChR;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yFAAyF,6JAA6J,oBAAoB,kEAAU;AACpR;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,0DAA0D,wEAAkB,EAAE,mDAAmD,iCAAiC,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,mDAAmD;AAC1Q,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,6DAAa;AAC9C;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;AACA,aAAa;AACb;AACA,iC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY;AACZ;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6+BAA6+B,YAAY,+FAA+F,YAAY,2yEAA2yE,sIAAsI,gDAAgD,ojCAAojC,oGAAoG,iBAAiB,uWAAuW,oGAAoG,gBAAgB,ihBAAihB,oGAAoG,cAAc,mDAAmD,cAAc,6WAA6W,wOAAwO,+MAA+M,cAAc,sIAAsI,cAAc,6TAA6T,eAAe,6EAA6E,iBAAiB,wDAAwD,iDAAiD,y6CAAy6C,YAAY;AAC3xR,yCAAyC,uCAAuC,YAAY,oCAAoC,mBAAmB,QAAQ,SAAS,YAAY,UAAU,YAAY,kBAAkB,uBAAuB,qBAAqB,YAAY,WAAW,oBAAoB,yBAAyB,oCAAoC,yBAAyB,WAAW,kBAAkB,oCAAoC;AACtc,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,sEAAW,EAAE;AACzB,KAAK,0BAA0B;AAC/B,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK,6BAA6B;AAClC,KAAK,OAAO,8DAAc;AAC1B;AACA,WAAW,EA2EV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wFAAwF,+CAA+C,oBAAoB,kEAAU;AACrK;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,2DAA2D,wEAAkB,EAAE,oDAAoD,kCAAkC,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,oDAAoD;AAC9Q,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,wSAAwS,SAAS,8LAA8L,eAAe;AAC9f,yCAAyC,qBAAqB,kBAAkB,oBAAoB,0HAA0H,gBAAgB,YAAY,mBAAmB,gBAAgB,eAAe,cAAc,iBAAiB,mBAAmB,gBAAgB,iBAAiB;AAC/X,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,o4BAAo4B,wBAAwB,siBAAsiB,wBAAwB,siBAAsiB,wBAAwB,2iBAA2iB,wBAAwB,kuBAAkuB,wBAAwB,oiBAAoiB,wBAAwB,uiBAAuiB,wBAAwB,oiBAAoiB,wBAAwB,kuBAAkuB,wBAAwB,uiBAAuiB,wBAAwB,yiBAAyiB,yBAAyB,yiBAAyiB,yBAAyB;AACz8O,4BAA4B,oEAAS,EAAE,4EAAiB;AACxD,8BAA8B,iBAAiB;AAC/C,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK,OAAO,4EAAiB,EAAE;AAC/B,KAAK;AACL;AACA;AACA,WAAW,OAAO,mDAAK,EAAE;AACzB;AACA,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,6DAAa;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,mYAAmY,uDAAuD,iYAAiY,kBAAkB,GAAG,iBAAiB,uQAAuQ,YAAY,qBAAqB,YAAY,gPAAgP,uDAAuD,yXAAyX,kBAAkB,GAAG,iBAAiB,wQAAwQ,YAAY,qBAAqB,YAAY;AAChpE,kCAAkC,sBAAsB,WAAW,2BAA2B,eAAe,iBAAiB,WAAW,0BAA0B,WAAW;AAC9K,aAAa;AACb;AACA;AACA;AACA,KAAK,8BAA8B;AACnC,KAAK,OAAO,sDAAM;AAClB;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA,WAAW,EA8BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC,0BAA0B,4DAAY;AACtC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G,kEAAU;AACpH;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8EAA8E,qEAAqE,oBAAoB,kEAAU;AACjL;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,6DAA6D,wEAAkB,EAAE,sDAAsD,oCAAoC,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,sDAAsD;AACtR,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B,yDAAU;AACxC,sBAAsB,yDAAU;AAChC;AACA,6BAA6B,yDAAU;AACvC,2BAA2B,yDAAU;AACrC,2BAA2B,yDAAU;AACrC,8BAA8B,yDAAU;AACxC;AACA;AACA,SAAS,GAAG,sEAAsE;AAClF;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,gDAAgD,EAAE;AAClD;AACA,yCAAyC,0DAAW;AACpD;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,4DAA4D,sBAAsB;AAClF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,kDAAkD;AAClD,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,2TAA2T,iDAAiD,ylBAAylB,m1BAAm1B,YAAY,kHAAkH,IAAI,4ZAA4Z,uDAAuD,8lBAA8lB,sDAAsD,ozBAAozB,sDAAsD,okBAAokB,yDAAyD,2tCAA2tC,+DAA+D,mBAAmB,swBAAswB,6BAA6B,8DAA8D,6BAA6B,gMAAgM,6BAA6B,mIAAmI,aAAa,KAAK,eAAe;AACphO,uCAAuC,iBAAiB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAW,EAAE;AACzB,KAAK,gCAAgC;AACrC,KAAK,OAAO,sDAAM;AAClB;AACA;AACA,sBAAsB,OAAO,uDAAS,4BAA4B,gBAAgB,IAAI;AACtF;AACA,WAAW,EAmDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,8LAA8L;AAC9L;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAc;AAC1B;AACA,WAAW,EAYV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;A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;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wFAAwF,mGAAmG,oBAAoB,kEAAU;AACzN;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,kEAAkE,wEAAkB,EAAE,2DAA2D,yCAAyC,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,2DAA2D;AAC1S,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+QAA+Q,mEAAmE,sEAAsE,UAAU,2CAA2C,UAAU,iPAAiP,8CAA8C,qXAAqX,UAAU,4BAA4B,8CAA8C;AAC/rC;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,mDAAK,EAAE;AACjC;AACA,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,6DAAa;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,qNAAqN,qFAAqF,0KAA0K,iNAAiN,8CAA8C,mMAAmM,cAAc,2HAA2H,gBAAgB,GAAG,eAAe,yoBAAyoB,YAAY,qBAAqB,YAAY;AACvvD,qCAAqC,gBAAgB,gBAAgB,6BAA6B,WAAW,eAAe,WAAW,eAAe,WAAW,wBAAwB;AACzL,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK,2BAA2B;AAChC,KAAK;AACL;AACA,WAAW,EAoCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,8NAA8N,8FAA8F,YAAY;AACxU,yCAAyC,eAAe,yBAAyB,gBAAgB,yBAAyB,kBAAkB,mBAAmB,qBAAqB,mBAAmB,iBAAiB,aAAa;AACrO,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,sDAAM;AAClB;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,0yBAA0yB,eAAe,iBAAiB,gGAAgG,gBAAgB,8FAA8F,gBAAgB,uVAAuV,cAAc,gbAAgb,YAAY;AACz0D,sCAAsC,kBAAkB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAc,EAAE;AAC5B,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK,2BAA2B;AAChC,KAAK;AACL;AACA,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4EAA4E,qCAAqC,oBAAoB,kEAAU;AAC/I;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,yDAAyD,wEAAkB,EAAE,kDAAkD,gCAAgC,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,kDAAkD;AACtQ,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,+DAAe;AAChD,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,gB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,4oBAA4oB,MAAM,2qBAA2qB,4GAA4G,mBAAmB,iIAAiI,uBAAuB,wbAAwb,8CAA8C,unCAAunC,YAAY;AAC7rG,4BAA4B,oEAAS,EAAE,4EAAiB;AACxD;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,0BAA0B;AAC/B,KAAK,OAAO,8DAAc,EAAE;AAC5B,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK;AACL;AACA,WAAW,EAqCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,ssBAAssB,2BAA2B,slBAAslB,2BAA2B,slBAAslB,2BAA2B,knBAAknB,2BAA2B,q1BAAq1B,2BAA2B,8nBAA8nB,2BAA2B,8nBAA8nB,2BAA2B,0pBAA0pB,2BAA2B,+4BAA+4B,2BAA2B,sqBAAsqB,2BAA2B,yqBAAyqB,4BAA4B,qsBAAqsB,4BAA4B,q+BAAq+B,4BAA4B,itBAAitB,4BAA4B,itBAAitB,4BAA4B,6uBAA6uB,4BAA4B;AAC5pX,4BAA4B,oEAAS,EAAE,4EAAiB;AACxD,8BAA8B,gBAAgB,qBAAqB,gBAAgB,YAAY;AAC/F,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,4EAAiB,EAAE;AAC/B,KAAK;AACL;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mFAAmF,yBAAyB,oBAAoB,kEAAU;AAC1I;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,4DAA4D,wEAAkB,EAAE,qDAAqD,mCAAmC,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,qDAAqD;AAClR,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6hCAA6hC,0DAA0D,MAAM,mEAAmE,wdAAwd,YAAY,2tDAA2tD,0DAA0D,MAAM,mEAAmE,4eAA4e,YAAY;AAC19H;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAc,EAAE;AAC5B,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK,0BAA0B;AAC/B,KAAK;AACL;AACA,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,KAAK,sEAAsE;AAC3E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,sxBAAsxB,0FAA0F,wDAAwD,mBAAmB,yCAAyC,qBAAqB,qQAAqQ,gDAAgD,iDAAiD,qDAAqD,gfAAgf,yBAAyB,cAAc,gBAAgB,0pBAA0pB,yBAAyB,y4CAAy4C,yBAAyB,aAAa,gBAAgB,kYAAkY,yBAAyB,eAAe,6BAA6B;AACp/I;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,2BAA2B;AAChC,KAAK,OAAO,4EAAiB,EAAE;AAC/B,KAAK,8BAA8B;AACnC,KAAK,0BAA0B;AAC/B,KAAK,OAAO,sDAAM;AAClB;AACA,WAAW,EAgCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,6DAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,qmCAAqmC,qFAAqF,uGAAuG,q9BAAq9B,YAAY;AAClwE,0CAA0C,6BAA6B,WAAW,WAAW,iBAAiB,UAAU,eAAe,gBAAgB;AACvJ,aAAa;AACb;AACA;AACA;AACA,KAAK,2BAA2B;AAChC,KAAK,0BAA0B;AAC/B,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK,OAAO,8DAAc;AAC1B;AACA,WAAW,EA6BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,oBAAoB,6DAAY;AAChC;AACA;AACA,oBAAoB,oEAAS;AAC7B,oBAAoB,8EAAmB;AACvC,oBAAoB,oEAAS;AAC7B,oBAAoB,4DAAc;AAClC;AACA;AACA;AACA,oBAAoB,kDAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,6BAA6B,UAAU,oEAAS,EAAE;AAClD,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC,0BAA0B,4DAAY;AACtC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yFAAyF,4FAA4F,oBAAoB,kEAAU;AACnN;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qFAAqF,wCAAwC,oBAAoB,kEAAU;AAC3J;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8FAA8F,+CAA+C,oBAAoB,kEAAU;AAC3K;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,2DAA2D,wEAAkB,EAAE,oDAAoD,kCAAkC,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,oDAAoD;AAC9Q,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,6DAAa;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,2RAA2R,qFAAqF,0HAA0H,SAAS,wFAAwF,cAAc,qIAAqI,mBAAmB,+GAA+G,mBAAmB,6JAA6J,yRAAyR,2JAA2J,cAAc,8JAA8J,oHAAoH,cAAc,uHAAuH,cAAc,khBAAkhB,8CAA8C,sFAAsF,gBAAgB,GAAG,eAAe,6jBAA6jB,YAAY,qBAAqB,YAAY;AACzpG,qCAAqC,gBAAgB,gBAAgB,6BAA6B,WAAW,gBAAgB,gBAAgB,eAAe,eAAe,0BAA0B,eAAe,iBAAiB,eAAe,eAAe,yBAAyB,gBAAgB,yBAAyB,kBAAkB,mBAAmB,qBAAqB,mBAAmB,sBAAsB,aAAa;AACrb,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK,OAAO,4DAAY,EAAE;AAC1B,KAAK,8BAA8B;AACnC,KAAK;AACL;AACA,WAAW,EAgDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,oBAAoB,6DAAY;AAChC;AACA;AACA;AACA,oBAAoB,qEAAgB,EAAE,0DAAW,EAAE,kEAAmB,EAAE,4DAAY;AACpF;AACA,mDAAmD,4DAAY;AAC/D,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA,qBAAqB;AACrB,0BAA0B,4DAAY;AACtC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gGAAgG,qCAAqC,oBAAoB,kEAAU;AACnK;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yFAAyF,qCAAqC,oBAAoB,kEAAU;AAC5J;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wFAAwF,qCAAqC,oBAAoB,kEAAU;AAC3J;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK;AACL;AACA,8DAA8D,wEAAkB,EAAE,uDAAuD,qCAAqC,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,qBAAqB,EAAE,uDAAuD;AAC1R,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6GAA6G;AAC/H,kBAAkB,mHAAmH;AACrI,kBAAkB,2GAA2G;AAC7H,kBAAkB,6FAA6F;AAC/G,kBAAkB,2GAA2G;AAC7H,kBAAkB,6GAA6G;AAC/H,mBAAmB,6GAA6G;AAChI,mBAAmB,6FAA6F;AAChH,mBAAmB,6FAA6F;AAChH,mBAAmB,oGAAoG;AACvH,mBAAmB,6FAA6F;AAChH,mBAAmB,6GAA6G;AAChI;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,6DAAa;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;A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","file":"main-es2015.js","sourcesContent":["import { Injectable, ɵɵdefineInjectable, ɵɵinject, Component, NgModule, Input, ViewChild, EventEmitter, Output } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NavigationEnd, Router, RouterModule, ActivatedRoute, NavigationStart } from '@angular/router';\nimport { NgbModule, NgbCarouselConfig, NgbModal, NgbCalendar, NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule, FormsModule, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { ModalModule, BsModalService } from 'ngx-bootstrap/modal';\nimport { CookieService } from 'ngx-cookie-service';\nimport { CarouselModule } from 'ngx-bootstrap';\nimport { DfpModule } from 'ngx-dfp';\nimport { CommonModule } from '@angular/common';\nimport { catchError } from 'rxjs/operators';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { RodmanORMModule } from 'rodman-orm';\nimport { Ng2DeviceService, Ng2DeviceDetectorModule } from 'ng2-device-detector';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/rodman-core.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n'use strict';\n/** @type {?} */\nconst apiURL = 'http://3.85.159.45:8042/';\n/** @type {?} */\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46YWRtaW5AMTIz' }) };\n/** @type {?} */\nconst magazineNameDetails = {\n    'NUT': { id: '1', name: 'Nutraceuticals world' },\n    'CW': { id: '5', name: 'Coating World' },\n    'MPO': { id: '6', name: 'Medical Product Outsourcing' },\n    'CP': { id: '7', name: 'Contract Pharma' },\n    'BP': { id: '8', name: 'Beauty Packaging' },\n    'HAP': { id: '9', name: 'Happi' },\n    'INK': { id: '10', name: 'Ink World' },\n    'LNW': { id: '11', name: 'Label & Narrow Web' },\n    'NON': { id: '13', name: 'Nonwovens Industry' },\n    'ODT': { id: '14', name: 'Orthopedic Design & Technology' },\n    'PEN': { id: '15', name: 'Printed Electronics Now' },\n};\n/** @type {?} */\nconst magazineIds = {\n    '1': { id: 'NUT', name: 'Nutraceuticals world' },\n    '5': { id: 'CW', name: 'Coating World' },\n    '6': { id: 'MPO', name: 'Medical Product Outsourcing' },\n    '7': { id: 'CP', name: 'Contract Pharma' },\n    '8': { id: 'BP', name: 'Beauty Packaging' },\n    '9': { id: 'HAP', name: 'Happi' },\n    '10': { id: 'INK', name: 'Ink World' },\n    '11': { id: 'LNW', name: 'Label & Narrow Web' },\n    '13': { id: 'NON', name: 'Nonwovens Industry' },\n    '14': { id: 'ODT', name: 'Orthopedic Design & Technology' },\n    '15': { id: 'PEN', name: 'Printed Electronics Now' },\n};\n/** @type {?} */\nconst IMAGE_DOMAIN = \"http://dev.rodpub.com/images/\";\n/** @type {?} */\nconst DEFAULT_IMAGE = \"http://kaverisias.com/wp-content/uploads/2018/01/catalog-default-img.gif\";\nclass RodmanCoreService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} sanitizer\n     * @param {?} Router\n     */\n    constructor(HttpClient, sanitizer, Router) {\n        this.HttpClient = HttpClient;\n        this.sanitizer = sanitizer;\n        this.Router = Router;\n        this.collectoionAds = [];\n        this.finalArray = [];\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationEnd) {\n                this.currentURL = event.url;\n            }\n        }));\n    }\n    /**\n     * @param {?} imageId\n     * @return {?}\n     */\n    displayImageUrl(imageId) {\n        imageId = imageId.toString();\n        /** @type {?} */\n        let folderName = imageId.substring(0, 3);\n        /** @type {?} */\n        let imageName = imageId.substring(3);\n        return (imageId != '0') ? IMAGE_DOMAIN + folderName + \"/\" + imageName + '_main.jpg' : DEFAULT_IMAGE;\n    }\n    /**\n     * @param {?} imageId\n     * @return {?}\n     */\n    displayImageThumbURL(imageId) {\n        imageId = imageId.toString();\n        /** @type {?} */\n        let folderName = imageId.substring(0, 3);\n        /** @type {?} */\n        let imageName = imageId.substring(3);\n        return (imageId != '0') ? IMAGE_DOMAIN + folderName + \"/\" + imageName + '_thumb.jpg' : DEFAULT_IMAGE;\n    }\n    /**\n     * @return {?}\n     */\n    returnUrl() {\n        return this.currentURL;\n    }\n    /**\n     * @param {?} magazineId\n     * @return {?}\n     */\n    getAllAdst(magazineId) {\n        return this.HttpClient.post(apiURL + 'adsController/getAds', { magazineId: magazineId, pageUrl: this.currentURL }, httpOptions);\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    getAdcode(str) {\n        str = str.replace(/\\'/g, '');\n        str = str.replace(/\\\\/g, '');\n        /** @type {?} */\n        var firstIndex = str.indexOf(\"script\") + 10;\n        /** @type {?} */\n        var lastIndex = str.indexOf(\"/script>\");\n        str = str.substring(firstIndex, lastIndex);\n        if (str.indexOf('defineSlot') < 0)\n            return false;\n        /** @type {?} */\n        var slot = str.substring(str.indexOf(\"defineSlot(\") + 11, str.indexOf(\").addService\"));\n        /** @type {?} */\n        var slotvalue = slot.split(',')[0];\n        /** @type {?} */\n        var code = {\n            slot: slotvalue,\n            sizes: str.substring(str.lastIndexOf(\"[[\") + 1, str.lastIndexOf(\"]]\") + 1),\n            key: str.substring(str.lastIndexOf('setTargeting(\"') + 14, str.lastIndexOf('\",')),\n            value: str.substring(str.lastIndexOf('\",[') + 4, str.lastIndexOf('])'))\n        };\n        return code;\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        return this.sanitizer.bypassSecurityTrustHtml(data);\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    handleError(error) {\n        if (error.error instanceof ErrorEvent) {\n            // A client-side or network error occurred. Handle it accordingly.\n            console.error('An error occurred:', error.error.message);\n        }\n        else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n        }\n        // return an observable with a user-facing error message\n        this.errorData = {\n            errorTitle: 'Oops! Request for document failed',\n            errorDesc: 'Something bad happened. Please try again later.'\n        };\n        return throwError(this.errorData);\n    }\n}\nRodmanCoreService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nRodmanCoreService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: DomSanitizer },\n    { type: Router }\n];\n/** @nocollapse */ RodmanCoreService.ngInjectableDef = ɵɵdefineInjectable({ factory: function RodmanCoreService_Factory() { return new RodmanCoreService(ɵɵinject(HttpClient), ɵɵinject(DomSanitizer), ɵɵinject(Router)); }, token: RodmanCoreService, providedIn: \"root\" });\nif (false) {\n    /** @type {?} */\n    RodmanCoreService.prototype.errorData;\n    /** @type {?} */\n    RodmanCoreService.prototype.currentURL;\n    /** @type {?} */\n    RodmanCoreService.prototype.getAllAdsData;\n    /** @type {?} */\n    RodmanCoreService.prototype.collectoionAds;\n    /** @type {?} */\n    RodmanCoreService.prototype.finalArray;\n    /** @type {?} */\n    RodmanCoreService.prototype.HttpClient;\n    /** @type {?} */\n    RodmanCoreService.prototype.sanitizer;\n    /** @type {?} */\n    RodmanCoreService.prototype.Router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/rodman-core.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass RodmanCoreComponent {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nRodmanCoreComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-RodmanCore',\n                template: `\n    <p>\n      rodman-core works!\n    </p>\n  `\n            }] }\n];\n/** @nocollapse */\nRodmanCoreComponent.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/rodman-core.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass RodmanCoreModule {\n}\nRodmanCoreModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [RodmanCoreComponent],\n                imports: [\n                    ReactiveFormsModule,\n                    FormsModule,\n                    HttpClientModule,\n                    NgbModule,\n                    // AngularFontAwesomeModule,\n                    ModalModule.forRoot(),\n                    CarouselModule.forRoot(),\n                    // Ng2DeviceDetectorModule.forRoot(),\n                    DfpModule.forRoot({\n                        idleLoad: true,\n                        enableVideoAds: true,\n                        personalizedAds: true,\n                        // Request personalized ads by default\n                        singleRequestMode: true,\n                        // Only applies to initial refresh\n                        onSameNavigation: 'refresh',\n                        globalTargeting: {\n                        // food: ['NUT', 'HOME']\n                        }\n                    })\n                ],\n                exports: [RodmanCoreComponent, NgbModule, ModalModule, CarouselModule],\n                providers: [{ provide: NgbModule }, { provide: RodmanCoreService }, { provide: CookieService }],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sites/sites-routing.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst routes = [];\nclass SitesRoutingModule {\n}\nSitesRoutingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [RouterModule.forChild(routes)],\n                exports: [RouterModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sites/components/nav/nav.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NavService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} menuId\n     * @return {?}\n     */\n    getHeaderMenu(magazineId, menuId) {\n        return this.HttpClient.post(apiURL + 'menuscontroller/displayMenu', { magazineId: magazineId, id: menuId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n    /**\n     * @param {?} magazineId\n     * @return {?}\n     */\n    currentIssue(magazineId) {\n        return this.HttpClient.post(apiURL + 'issuescontroller/latestIssueURL', { magazineId: magazineId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nNavService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nNavService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ NavService.ngInjectableDef = ɵɵdefineInjectable({ factory: function NavService_Factory() { return new NavService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: NavService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NavService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    NavService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sites/components/nav/nav.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NavComponent {\n    /**\n     * @param {?} NavService\n     */\n    constructor(NavService) {\n        this.NavService = NavService;\n        this.hoverIndex = -1;\n    }\n    /**\n     * @param {?} i\n     * @return {?}\n     */\n    onHover(i) {\n        this.hoverIndex = i;\n    }\n    /**\n     * @param {?} i\n     * @return {?}\n     */\n    onHoverOut(i) {\n        this.hoverIndex = -1;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Header Main And Submenu api Call \n        this.NavService.getHeaderMenu(this.magazineId, this.menuId).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.articles = data['data'];\n        }));\n        // this.currentIssue();\n    }\n    /**\n     * @return {?}\n     */\n    currentIssue() {\n        this.NavService.currentIssue(this.magazineId).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.issueUrl = data.issueUrl;\n        }));\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    validateUrl(str) {\n        /** @type {?} */\n        var tarea = str;\n        if (tarea.indexOf(\"http://\") == 0 || tarea.indexOf(\"https://\") == 0) {\n            return true;\n        }\n        return false;\n    }\n}\nNavComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-nav',\n                inputs: ['magazineId', 'menuId'],\n                template: \"<div class =\\\"primary_menu\\\">\\n  <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" *ngFor=\\\"let navItem of articles; let i = index\\\">\\n        <span id=\\\"{{i}}\\\" (mouseenter) =\\\"onHover(i)\\\" (click)=\\\"onHoverOut(i)\\\">\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"(!validateUrl(navItem.url))\\\"   [routerLink]=\\\"[navItem.url.replace('?nav=top_nav', '')]\\\">{{navItem.title}}</a>\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"(validateUrl(navItem.url))\\\"   href=\\\"{{navItem.url}}\\\" target=\\\"_blank\\\">{{navItem.title}}</a>\\n        </span>\\n        <div class=\\\"submenu\\\">\\n          <div *ngIf = \\\"i == hoverIndex\\\" (mouseleave) =\\\"onHoverOut(i)\\\"  >\\n            <div *ngFor=\\\"let childNavItem of navItem.child; let j = index\\\" class=\\\"col-md-3 col-sm-3 list_item\\\" [routerLinkActive]=\\\"['active']\\\" >                 \\n                <a class=\\\"nav-link text-color\\\" *ngIf=\\\"(!validateUrl(childNavItem.url)) && (navItem.title != childNavItem.title ) \\\"  [routerLink]=\\\"[childNavItem.url]\\\" (click)=\\\"onHoverOut(i)\\\" >{{childNavItem.title}}</a>                \\n                <a class=\\\"nav-link text-color\\\" *ngIf=\\\"(validateUrl(childNavItem.url)) && (navItem.title != childNavItem.title )\\\" href=\\\"{{childNavItem.url}}\\\" target=\\\"_blank\\\" (click)=\\\"onHoverOut(i)\\\" >{{childNavItem.title}}</a>\\n            </div>\\n          </div>  \\n        </div> \\n      </li>   \\n  </ul>\\n</div>\\n\",\n                styles: [\".submenu{position:absolute;background:#f1f1f1;z-index:9999;color:#222;width:100%;top:50px;right:0}.list_item a{vertical-align:middle!important;z-index:-99999}.list_item{float:left;line-height:2rem;position:relative;font-size:14px}.primary_menu{position:relative}.text-color{color:#000!important}\"]\n            }] }\n];\n/** @nocollapse */\nNavComponent.ctorParameters = () => [\n    { type: NavService }\n];\nif (false) {\n    /** @type {?} */\n    NavComponent.prototype.error;\n    /** @type {?} */\n    NavComponent.prototype.articles;\n    /** @type {?} */\n    NavComponent.prototype.magazineId;\n    /** @type {?} */\n    NavComponent.prototype.menuId;\n    /** @type {?} */\n    NavComponent.prototype.hoverIndex;\n    /** @type {?} */\n    NavComponent.prototype.issueUrl;\n    /**\n     * @type {?}\n     * @private\n     */\n    NavComponent.prototype.NavService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sites/components/header/header.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass HeaderComponent {\n    /**\n     * @param {?} CookieService\n     * @param {?} Router\n     * @param {?} RodmanCoreService\n     */\n    constructor(CookieService, Router, RodmanCoreService) {\n        this.CookieService = CookieService;\n        this.Router = Router;\n        this.RodmanCoreService = RodmanCoreService;\n        this.isCollapsed = true;\n        this.overlayCookie = false;\n        this.Url = apiURL;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // this.isOverlayCookie = this.CookieService.get('overlay_'+this.magazineId);\n        // if(this.isOverlayCookie===''){\n        //   const dateNow = new Date();\n        //   dateNow.setMinutes(dateNow.getMinutes() + 30);\n        //   this.CookieService.set('overlay_'+this.magazineId, 'Overlay' ,dateNow,'/',\"\");\n        //   this.overlayCookie = true;   \n        // }else{\n        //   // console.log('Cookie Set_'+this.magazineId)\n        // }\n    }\n    /**\n     * @return {?}\n     */\n    search() {\n        if (this.searchContent) {\n            this.Router.navigateByUrl('/contents/searchcontent/all/' + this.searchContent);\n        }\n    }\n}\nHeaderComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-header',\n                inputs: ['magazineId', 'magazineName', 'menuId', 'groupId', 'fieldId', 'formId'],\n                template: \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary header-fixed\\\" >\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n    <img class=\\\"header-logo\\\" src=\\\"{{Url}}{{magazineName+'_logo.png'}}\\\">\\n  </a>\\n    <button type=\\\"button\\\" class=\\\"navbar-toggler btn btn-primary \\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\n          [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseExample\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  <div class=\\\"navbar-collapse collapse\\\" id=\\\"collapseExample\\\" [ngbCollapse]=\\\"isCollapsed\\\" > \\n    <div class=\\\"col-sm-9 col-md-9\\\" >\\n        <CoreLib-nav  magazineId={{magazineId}}  menuId={{menuId}}></CoreLib-nav>\\n    </div>\\n    <div class=\\\"col-sm-3 col-md-3\\\" style=\\\"float: right!important\\\">\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" id=\\\"searchContent\\\" (input)=\\\"searchContent=$event.target.value\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n        <button class=\\\"btn btn-primary my-2 my-sm-0\\\" (click)=search() type=\\\"submit\\\">Search</button>\\n      </form>  \\n    </div>\\n  </div>\\n</nav>\\n\\n\\n\\n\\n\\n\\n\\n\\n\",\n                styles: [\".header-logo{max-height:40px}\"]\n            }] }\n];\n/** @nocollapse */\nHeaderComponent.ctorParameters = () => [\n    { type: CookieService },\n    { type: Router },\n    { type: RodmanCoreService }\n];\nif (false) {\n    /** @type {?} */\n    HeaderComponent.prototype.isCollapsed;\n    /** @type {?} */\n    HeaderComponent.prototype.magazineId;\n    /** @type {?} */\n    HeaderComponent.prototype.magazineName;\n    /** @type {?} */\n    HeaderComponent.prototype.menuId;\n    /** @type {?} */\n    HeaderComponent.prototype.groupId;\n    /** @type {?} */\n    HeaderComponent.prototype.fieldId;\n    /** @type {?} */\n    HeaderComponent.prototype.formId;\n    /** @type {?} */\n    HeaderComponent.prototype.isOverlayCookie;\n    /** @type {?} */\n    HeaderComponent.prototype.overlayCookie;\n    /** @type {?} */\n    HeaderComponent.prototype.Url;\n    /** @type {?} */\n    HeaderComponent.prototype.searchContent;\n    /** @type {?} */\n    HeaderComponent.prototype.CookieService;\n    /** @type {?} */\n    HeaderComponent.prototype.Router;\n    /** @type {?} */\n    HeaderComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sites/components/footer/footer.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FooterComponent {\n    /**\n     * @param {?} Router\n     * @param {?} httpService\n     * @param {?} RodmanCoreService\n     */\n    constructor(Router, httpService, RodmanCoreService) {\n        this.Router = Router;\n        this.httpService = httpService;\n        this.RodmanCoreService = RodmanCoreService;\n        this.footerSocialLink = [\n            { '15': {\n                    'facebook': 'https://www.facebook.com/pages/Printed-Electronics-Now/135384279809061',\n                    'linkedin': 'http://www.linkedin.com/groups/Printed-Electronics-Now-2079630/about',\n                    'rss': '/rssfeeds/',\n                }\n            },\n            { '14': { 'facebook': 'http://www.facebook.com/pages/Orthopedic-Design-Technology/132780940069550',\n                    'linkedin': 'http://www.linkedin.com/groups?about=&amp;gid=2079574&amp;trk=anet_ug_grppro',\n                    'twitter': 'https://twitter.com/odtmagazine',\n                }\n            },\n            { '13': { 'facebook': 'http://www.facebook.com/pages/Nonwovens-Industry-Magazine/129247883774669',\n                    'linkedin': 'http://www.linkedin.com/groups?about=&amp;gid=1775410&amp;trk=anet_ug_grppro',\n                    'twitter': 'http://twitter.com/NonwovensMag',\n                    'rss': '/rssfeeds/'\n                },\n            },\n            { '11': { 'facebook': 'http://www.facebook.com/pages/Label-And-Narrow-Web/124971914208037',\n                    'linkedin': 'http://www.linkedin.com/groups?gid=2079407&amp;about=',\n                    'twitter': 'http://www.twitter.com/labelandnarrow',\n                    'pinterest': 'https://www.pinterest.com/lnwmagazine/',\n                    'rss': '/rssfeeds/'\n                }\n            },\n            { '10': { 'facebook': 'https://www.facebook.com/pages/Ink-World/101479703238099',\n                    'linkedin': 'http://www.linkedin.com/groups?gid=2079359',\n                    'twitter': 'http://twitter.com/inkworldmag',\n                    'rss': '/rssfeeds/',\n                    'google': 'https://plus.google.com/+Inkworldmagazine1/posts',\n                    'instagram': 'https://www.instagram.com/inkworldmag/'\n                }\n            },\n            { '9': { 'facebook': 'https://www.facebook.com/HappiMagazine/',\n                    'linkedin': 'https://www.linkedin.com/groups/2079173/profile',\n                    'twitter': 'https://twitter.com/happimagazine',\n                    'instagram': 'https://www.instagram.com/happimagazine/',\n                    'pinterest': 'https://www.pinterest.com/happimagazine/',\n                    'rss': '/rssfeeds/'\n                }\n            },\n            { '8': { 'facebook': 'https://www.facebook.com/pages/Beauty-Packaging/124945340875475',\n                    'linkedin': 'https://www.linkedin.com/groups?about=&amp;gid=1775357',\n                    'twitter': 'https://twitter.com/beautypackaging',\n                    'pinterest': 'https://www.pinterest.com/beautypackaging/',\n                    'rss': '/rssfeeds/'\n                }\n            },\n            { '7': { 'facebook': 'http://www.facebook.com/contractpharma',\n                    'linkedin': 'http://www.linkedin.com/groups?about=&amp;gid=1775433&amp;trk=anet_ug_grppro',\n                    'twitter': 'http://twitter.com/contractpharma',\n                    'rss': '/rssfeeds/'\n                }\n            },\n            { '6': { 'facebook': 'https://www.facebook.com/pages/Medical-Product-Outsourcing/105425076171700',\n                    'linkedin': 'http://www.linkedin.com/groups?gid=2079433&amp;trk=myg_ugrp_ovr',\n                    'twitter': 'https://twitter.com/mpomagazine',\n                    'rss': '/rssfeeds/'\n                }\n            },\n            { '5': { 'facebook': 'http://www.facebook.com/pages/Coatings-World/111797362200467',\n                    'linkedin': 'http://www.linkedin.com/groups?gid=2079298&amp;about=e',\n                    'twitter': 'http://www.twitter.com/coatingsworld',\n                    'rss': '/rssfeeds/'\n                }\n            },\n            { '1': { 'facebook': 'https://www.facebook.com/pages/Nutraceuticals-World/135318976481526',\n                    'linkedin': 'https://www.linkedin.com/groups/Nutraceuticals-World-2079225/about',\n                    'twitter': 'https://twitter.com/nutworld',\n                    'instagram': 'https://instagram.com/nutraceuticalsworld/',\n                    'pinterest': 'https://www.pinterest.com/nutraworld/',\n                    'rss': '/rssfeeds/'\n                }\n            },\n        ];\n        this.Url = apiURL;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.currentYear = new Date().getFullYear();\n    }\n}\nFooterComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-footer',\n                inputs: ['magazineId'],\n                template: \"<div class=\\\"container-fluid inner_cont\\\">\\n  <div class=\\\"container\\\">\\n    <div id=\\\"footer-show-content\\\" class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n      <div class='row'>\\n        <div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4\\\">\\n              <!-- <p><a target=\\\"_blank\\\" [routerLink]=\\\"['/about-us']\\\"><h4>ABOUT US</h4></a></p>         \\n              <p><a target=\\\"_blank\\\" [routerLink]=\\\"['/privacy-policy']\\\"><h4>PRIVACY POLICY</h4></a></p>         \\n              <p><a target=\\\"_blank\\\" [routerLink]=\\\"['/terms-and-conditions']\\\"><h4>TERMS AND CONDTIONS</h4></a></p>         \\n              <p><a target=\\\"_blank\\\" [routerLink]=\\\"['/contact-us']\\\"><h4>CONTACT US</h4></a></p>          -->\\n              <p><a  [routerLink]=\\\"['/about-us']\\\"><h4>ABOUT US</h4></a></p>         \\n              <p><a  [routerLink]=\\\"['/privacy-policy']\\\"><h4>PRIVACY POLICY</h4></a></p>         \\n              <p><a  [routerLink]=\\\"['/terms-and-conditions']\\\"><h4>TERMS AND CONDTIONS</h4></a></p>         \\n              <p><a [routerLink]=\\\"['/contact-us']\\\"><h4>CONTACT US</h4></a></p> \\n\\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-2 col-md-3 col-lg-3\\\">\\n              <h4 style=\\\"color: white;\\\">FOLLOW US</h4>\\n              <span *ngFor=\\\"let social of footerSocialLink\\\">\\n                <p *ngIf=\\\"social.hasOwnProperty(magazineId)\\\">\\n                   <a target=\\\"_blank\\\" class=\\\"social\\\" *ngIf=\\\"social[magazineId].facebook\\\" href=\\\"{{social[magazineId].facebook}}\\\">\\n                     <img src=\\\"{{Url+'facebook.png'}}\\\"></a> \\n                   <a target=\\\"_blank\\\" class=\\\"social\\\" *ngIf=\\\"social[magazineId].google\\\" href=\\\"{{social[magazineId].google}}\\\">\\n                     <img src=\\\"{{Url+'google.png'}}\\\"></a>\\n                   <a target=\\\"_blank\\\" class=\\\"social\\\" *ngIf=\\\"social[magazineId].linkedin\\\" href=\\\"{{social[magazineId].linkedin}}\\\">\\n                     <img src=\\\"{{Url+'linkedin.png'}}\\\"></a>\\n\\n                   <a [routerLink]=\\\"['/rssfeeds']\\\" class=\\\"social\\\" *ngIf=\\\"social[magazineId].rss\\\" [routerLink]=\\\"[social[magazineId].rss]\\\">\\n                     <img src=\\\"{{Url+'rss.png'}}\\\"></a>\\n\\n                   <a target=\\\"_blank\\\" class=\\\"social\\\" *ngIf=\\\"social[magazineId].twitter\\\" href=\\\"{{social[magazineId].twitter}}\\\">\\n                     <img src=\\\"{{Url+'twitter.png'}}\\\"></a>\\n                   <a target=\\\"_blank\\\" class=\\\"social\\\" *ngIf=\\\"social[magazineId].instagram\\\" href=\\\"{{social[magazineId].instagram}}\\\">\\n                     <img src=\\\"{{Url+'Instagram.png'}}\\\"></a>\\n                   <a target=\\\"_blank\\\" class=\\\"social\\\" *ngIf=\\\"social[magazineId].pinterest\\\" href=\\\"{{social[magazineId].pinterest}}\\\">\\n                     <img src=\\\"{{Url+'pinrest.png'}}\\\"></a>\\n                </p>\\n             </span>  \\n                     \\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-5 col-md-5 col-lg-5\\\">                                            \\n            <CoreLib-footerslider></CoreLib-footerslider>  \\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"container-fluid\\\">\\n\\n      <div class='row'>\\n        <div id=\\\"bottom-footer\\\" class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n            <p class=\\\"text-center\\\">Copyright \\u00A9 {{currentYear}} Rodman Media. All rights reserved. Use of this constitutes acceptance of our privacy policy \\n                        The material on this site may not be reproduced, distributed, transmitted, or otherwise used, except with the prior written permission of Rodman Media.</p>       \\n        </div>\\n      </div> \\n  \\n</div>\",\n                styles: [\"#bottom-footer{background-color:#000;color:#fff}.inner_cont{background:#464646}#footer-show-content{padding:20px!important}.text-center{max-width:80%;margin:0 auto}h4 a,p a{color:#fff!important}.font-colors{margin:2px}.social{width:20px;margin:5px}\"]\n            }] }\n];\n/** @nocollapse */\nFooterComponent.ctorParameters = () => [\n    { type: Router },\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\nif (false) {\n    /** @type {?} */\n    FooterComponent.prototype.currentYear;\n    /** @type {?} */\n    FooterComponent.prototype.magazineId;\n    /** @type {?} */\n    FooterComponent.prototype.footerData;\n    /** @type {?} */\n    FooterComponent.prototype.arrBirds;\n    /** @type {?} */\n    FooterComponent.prototype.footerSocialLink;\n    /** @type {?} */\n    FooterComponent.prototype.Url;\n    /** @type {?} */\n    FooterComponent.prototype.Router;\n    /**\n     * @type {?}\n     * @private\n     */\n    FooterComponent.prototype.httpService;\n    /** @type {?} */\n    FooterComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sites/components/footerslider/footerslider.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FootersliderService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @return {?}\n     */\n    getFooterData(magazineId) {\n        return this.HttpClient.post(apiURL + 'SitesController/footerSlider', { magazineId: magazineId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nFootersliderService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nFootersliderService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ FootersliderService.ngInjectableDef = ɵɵdefineInjectable({ factory: function FootersliderService_Factory() { return new FootersliderService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: FootersliderService, providedIn: \"root\" });\nif (false) {\n    /** @type {?} */\n    FootersliderService.prototype.errorData;\n    /**\n     * @type {?}\n     * @private\n     */\n    FootersliderService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    FootersliderService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sites/components/footerslider/footerslider.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FootersliderComponent {\n    /**\n     * @param {?} FootersliderService\n     * @param {?} config\n     */\n    constructor(FootersliderService, config) {\n        this.FootersliderService = FootersliderService;\n        this.showNavigationArrows = false;\n        this.showNavigationIndicators = false;\n        config.interval = 2000;\n        config.showNavigationArrows = false;\n        config.showNavigationIndicators = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Footer Slider Api Call \n        this.FootersliderService.getFooterData(this.magazineId).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.sliderData = data['data'];\n        }));\n    }\n}\nFootersliderComponent.decorators = [\n    { type: Component, args: [{\n                inputs: ['magazineId'],\n                selector: 'CoreLib-footerslider',\n                template: \"<ngb-carousel>\\n    <ng-template ngbSlide *ngFor=\\\"let sliderData of sliderData; let i =index\\\">\\n    <div class=\\\"sliderdata\\\">\\n      <div class=\\\"picsum-img-wrapper\\\">\\n        <img [src]=\\\"sliderData.image\\\" class=\\\"img-responsive\\\" alt=\\\"{{sliderData.name}}\\\">\\n      </div>\\n      <!--   <a class=\\\"nav-link\\\"  [routerLink]=\\\"[navItem.url.replace('?nav=top_nav', '')]\\\">{{navItem.title}}</a> -->\\n      <div class=\\\"carousel_text\\\">\\n        <h5>Latest Breaking News From {{sliderData.name}}</h5>\\n        <p *ngFor=\\\"let textData of sliderData.child; let j = index\\\"><a target=\\\"_blank\\\" [routerLink]=\\\"[textData.viewUrl]\\\">{{textData.title}}</a></p>\\n      </div>\\n    </div>\\n    </ng-template>\\n</ngb-carousel>\",\n                providers: [NgbModule, NgbCarouselConfig],\n                styles: [\".picsum-img-wrapper img{margin:5px;height:60px!important;min-height:50px!important;max-width:250px!important;background:0 0!important}.carousel_text{position:none!important;text-align:left!important;right:15%;bottom:20px;left:15%;z-index:10;padding-top:5px;padding-bottom:20px;color:#fff}.carousel_text p{margin:0;font-size:14px!important}.sliderdata{padding:0 35px!important;background:#8f8d8e!important}.carousel,.slide{padding:0 10px}\"]\n            }] }\n];\n/** @nocollapse */\nFootersliderComponent.ctorParameters = () => [\n    { type: FootersliderService },\n    { type: NgbCarouselConfig }\n];\nif (false) {\n    /** @type {?} */\n    FootersliderComponent.prototype.magazineId;\n    /** @type {?} */\n    FootersliderComponent.prototype.sliderData;\n    /** @type {?} */\n    FootersliderComponent.prototype.showNavigationArrows;\n    /** @type {?} */\n    FootersliderComponent.prototype.showNavigationIndicators;\n    /**\n     * @type {?}\n     * @private\n     */\n    FootersliderComponent.prototype.FootersliderService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/users/authentication/authentication.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AuthenticationService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    userSignUp(data) {\n        //  Change Url For Register\n        return this.HttpClient.post(apiURL + 'usersController/signUpNewsletter', data, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    userLogin(data) {\n        //  Change Url For Login\n        return this.HttpClient.post(apiURL + 'usersController/userLogin', data, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nAuthenticationService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nAuthenticationService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ AuthenticationService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AuthenticationService_Factory() { return new AuthenticationService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: AuthenticationService, providedIn: \"root\" });\nif (false) {\n    /** @type {?} */\n    AuthenticationService.prototype.errorData;\n    /**\n     * @type {?}\n     * @private\n     */\n    AuthenticationService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    AuthenticationService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/users/authentication/authentication.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AuthenticationComponent {\n    /**\n     * @param {?} modalService\n     * @param {?} formBuilder\n     * @param {?} AuthenticationService\n     * @param {?} Router\n     */\n    constructor(modalService, formBuilder, AuthenticationService, Router) {\n        this.modalService = modalService;\n        this.formBuilder = formBuilder;\n        this.AuthenticationService = AuthenticationService;\n        this.Router = Router;\n        this.privacyPolicy = \"/privacy-policy\";\n        this.termsConditions = \"/terms-and-conditions/\";\n        this.profile = \"/profile\";\n        this.modalOpen = true;\n        this.showMsgRegistration = false;\n        this.showMsgRegistrationFail = false;\n        this.showMsgLoginSucess = false;\n        this.showMsgLoginFail = false;\n        this.loginMenuChange = false;\n    }\n    /**\n     * @param {?} login\n     * @return {?}\n     */\n    openLogin(login) {\n        this.modalService.open(login, { centered: true });\n    }\n    /**\n     * @param {?} register\n     * @return {?}\n     */\n    openRegister(register) {\n        this.modalService.open(register, { centered: true });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        //Check Login User\n        if (localStorage.getItem('authDetails' + this.magazineId)) {\n            /** @type {?} */\n            const data = JSON.parse(localStorage.getItem('authDetails' + this.magazineId));\n            this.loginMenuChange = true;\n        }\n        else {\n        }\n        //Registor Form\n        this.registerForm = this.formBuilder.group({\n            email: ['', [Validators.required, Validators.email]],\n            company_name: ['', Validators.required],\n            weekly_enewsletter: ['', Validators.required],\n            special_promotions: ['', Validators.required],\n            group_id_company_name: ['', Validators.required],\n            field_id_company_name: ['', Validators.required],\n            form_id_company_name: ['', Validators.required],\n            magazineId: ['', Validators.required],\n            url: location.origin + '/user/verifyUser/',\n        });\n        // Login Form\n        this.loginForm = this.formBuilder.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', Validators.required],\n            magazineId: ['', Validators.required]\n        });\n    }\n    //User Login  Function\n    /**\n     * @return {?}\n     */\n    onSubmit() {\n        this.submitted = true;\n        if (this.loginForm.invalid) {\n            return;\n        }\n        this.AuthenticationService.userLogin(this.loginForm.value).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            if (data.status == \"success\" && data.message == \"login successfully\") {\n                localStorage.setItem('authDetails' + this.magazineId, JSON.stringify(data.data));\n                // console.log(localStorage.getItem('authDetails'+this.magazineId));\n                this.showMsgLoginSucess = true;\n                this.loginMenuChange = true;\n                this.modalService.dismissAll(this.loginForm.value);\n                this.Router.navigateByUrl(this.profile);\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.showMsgLoginSucess = false;\n                }), 5000);\n            }\n            else {\n                this.showMsgLoginFail = true;\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.showMsgLoginFail = false;\n                }), 5000);\n            }\n        }));\n    }\n    // Validation Check Both Form\n    /**\n     * @return {?}\n     */\n    get registerVal() {\n        return this.registerForm.controls;\n    }\n    /**\n     * @return {?}\n     */\n    get loginVal() {\n        return this.loginForm.controls;\n    }\n    // Registration User \n    /**\n     * @return {?}\n     */\n    signup() {\n        this.submitted = true;\n        if (this.registerForm.invalid) {\n            return;\n        }\n        this.AuthenticationService.userSignUp(this.registerForm.value).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            if (data.status == \"success\" && data.message == \"You are almost registered\" && data.registerStatus == \"success\") {\n                this.showMsgRegistration = true;\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.showMsgRegistration = false;\n                    this.modalService.dismissAll(this.registerForm.value);\n                }), 5000);\n            }\n        }));\n    }\n    // Logout Session\n    /**\n     * @return {?}\n     */\n    logOut() {\n        localStorage.clear();\n        this.loginMenuChange = false;\n        this.Router.navigateByUrl('');\n    }\n}\nAuthenticationComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-authentication',\n                template: \"<!-- Login PopUp -->\\n<ng-template #login let-modal>\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Sign In</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n            <div class=\\\"modal-body\\\">\\n                <div id=\\\"loginBoxDiv\\\" class=\\\"well\\\" style=\\\"\\\">\\n                    <div class=\\\"row\\\"  *ngIf=\\\"showMsgLoginSucess; else errorMsg\\\">\\n                        <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\n                            <p class=\\\"alert alert-success text-center\\\">  <strong>Thank you for logged in</strong> </p>\\n                        </div>\\n                    </div>\\n    \\n                    <ng-template #errorMsg >\\n                        <div *ngIf=\\\"showMsgLoginFail\\\" class=\\\"alert alert-danger text-center\\\"> <h2>Wrong Login Details</h2></div>\\n                    </ng-template>                     \\n    \\n                        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                <h2>Already a member ?</h2>\\n                                <input type=\\\"hidden\\\" formControlName=\\\"magazineId\\\" value=\\\"{{magazineId}}\\\" [ngModel]=\\\"magazineId\\\" > \\n    \\n                                <input type=\\\"text\\\" formControlName=\\\"email\\\" id=\\\"webUserName_loginform\\\" placeholder=\\\"Enter Your Email\\\" class=\\\"form-control required email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginVal.email.errors }\\\">\\n                                <div *ngIf=\\\"submitted && loginVal.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"loginVal.email.errors.required\\\">Email is required</div>\\n                                        <div *ngIf=\\\"loginVal.email.errors.email\\\">Enter a valid email address</div>\\n                                    </div>\\n                                <br>\\n                                <input type=\\\"password\\\" formControlName=\\\"password\\\" id=\\\"webPassword_loginform\\\" placeholder=\\\"Enter Password\\\" class=\\\"form-control required\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginVal.password.errors }\\\">\\n                                <div *ngIf=\\\"submitted && loginVal.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"loginVal.password.errors.required\\\">Password is required</div>\\n                                </div>\\n    \\n    \\n                                <div class=\\\"clearfix\\\"></div><br>\\n                                <a href=\\\"#\\\" class=\\\"pull-right\\\" >Forgot Password?</a>\\n                                    <br>\\n                                <button class=\\\"btn btn-primary form-control\\\" type=\\\"submit\\\">SIGN IN</button>\\n                        </form> \\n                        <div class=\\\"clearfix\\\"></div><br>\\n                        <div class=\\\"clearfix\\\"></div><br>\\n                        <hr>\\n                        <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 popup-btn pull-right\\\">\\n                            <h5>Don't have an account? \\n                                <button class=\\\"btn btn-primary\\\" (click)=\\\"[openRegister(register),modal.dismiss('Cross click')]\\\"> Sign Up FREE</button> \\n                                OR  \\n                                <button class=\\\"btn btn-default\\\" type=\\\"button\\\">Connect with linkedin</button>\\n                            </h5>                \\n                        </div>\\n                    <div class=\\\"spacer5\\\"></div>\\n                </div> \\n            </div>\\n    </ng-template>\\n    <!-- Login PopUp  End -->\\n    \\n    \\n    <!-- Register PopUp -->\\n        <ng-template #register let-modal>\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Join New </h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                    <div name=\\\"SignUpNewsLetter_form_result\\\" id=\\\"SignUpNewsLetter_form_result\\\" class=\\\"well\\\">\\n                        <div class=\\\"clearfix\\\"></div><br>\\n                        <div class=\\\"row\\\"  *ngIf=\\\"showMsgRegistration\\\">\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\n                                    <p class=\\\"alert alert-success text-center\\\">  <strong>You Are Almost Register!</strong> Please verfy Your Email !.</p>\\n                                </div>\\n                        </div>\\n    \\n                            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"signup();\\\">\\n                                    <div class=\\\"formbox\\\">\\n                                            \\n                                            <input type=\\\"hidden\\\" formControlName=\\\"magazineId\\\" value=\\\"{{magazineId}}\\\" [ngModel]=\\\"magazineId\\\" >\\n                                            <input type=\\\"hidden\\\" formControlName=\\\"group_id_company_name\\\" value=\\\"{{groupId}}\\\" [ngModel]=\\\"groupId\\\" >\\n                                            <input type=\\\"hidden\\\" formControlName=\\\"form_id_company_name\\\"  value=\\\"{{formId}}\\\" [ngModel]=\\\"formId\\\">\\n                                            <input type=\\\"hidden\\\" formControlName=\\\"field_id_company_name\\\" value=\\\"{{fieldId}}\\\" [ngModel]=\\\"fieldId\\\">\\n    \\n                                        \\n                                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registerVal.email.errors }\\\" />\\n                                            <div *ngIf=\\\"submitted && registerVal.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"registerVal.email.errors.required\\\">Email is required</div>\\n                                                <div *ngIf=\\\"registerVal.email.errors.email\\\">Enter a valid email address</div>\\n                                            </div>\\n                                            <br>  \\n    \\n                                        \\n                                            <input type=\\\"email\\\" formControlName=\\\"company_name\\\" class=\\\"form-control\\\" placeholder=\\\"Company Name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registerVal.company_name.errors }\\\" />\\n                                            <div *ngIf=\\\"submitted && registerVal.company_name.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"registerVal.company_name.errors.required\\\">Company Name is required</div>\\n                                            </div>\\n                                            <br>\\n    \\n                                            <div class=\\\"clearfix\\\"></div><br>\\n                                            <div style=\\\"text-align:left\\\">                                           \\n                                                <input type=\\\"checkbox\\\" formControlName=\\\"weekly_enewsletter\\\"  >                                        \\n                                                <span style=\\\"vertical-align: top;\\\">Yes, Please subscribe me to your weekly eNewsletters and Alerts</span>\\n                                                <!-- <div *ngIf=\\\"submitted && registerVal.company_name.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                        <div *ngIf=\\\"registerVal.company_name.errors.required\\\">Option is required</div>\\n                                                    </div> -->\\n                                            </div>\\n                \\n                                            <div class=\\\"clearfix\\\"></div>\\n                                            <div style=\\\"text-align:left\\\">                                         \\n                                                <input type=\\\"checkbox\\\" formControlName=\\\"special_promotions\\\" >                                          \\n                                                <span style=\\\"vertical-align: top;\\\">Yes, I wish to receive special promotions and offers from your affiliates.</span>\\n                                                <!-- <div *ngIf=\\\"registerVal.special_promotions.errors.required\\\"  class=\\\"invalid-feedback\\\"> \\n                                                        Please Check Option\\n                                                    </div>\\t -->\\n                                            </div>\\n                \\n                                            <div class=\\\"clearfix\\\"></div>\\n                                            <div style=\\\"text-align:left\\\" [routerLinkActive]=\\\"['active']\\\">\\n                                                <p>By creating an account, I agree to the \\n                                                    <a [routerLink]=\\\"[termsConditions]\\\" class=\\\"mag-color\\\">Terms of Use</a> and acknowledge that I have read the <a [routerLink]=\\\"[privacyPolicy]\\\" class=\\\"mag-color\\\">Privacy Policy.</a>\\n                                                </p>\\n                                            </div>\\n                \\n                                            <div class=\\\"clearfix\\\"></div>\\n                                        <div class=\\\"clearfix\\\"></div>\\n    \\n                                        <button class=\\\"btn btn-primary form-control\\\"  id=\\\"\\\" type=\\\"submit\\\">Sign Up</button>\\n                                      </div>\\n                                  </form>\\n                            <hr>\\n                            <h5>Already a member?\\n                                <button class=\\\"btn btn-primary\\\" (click)=\\\"[openLogin(login),modal.dismiss('Cross click')] \\\"> Sign In</button> \\n                                OR \\n                                <button class=\\\"btn btn-default\\\" type=\\\"button\\\"  >Connect with linkedin</button>\\n                            </h5> \\n                            <div class=\\\"clearfix\\\"></div>                          \\n                    </div>\\n            </div>\\n        </ng-template>\\n    <!-- Register PopUp -->\\n    \\n    \\n    <!--  User signIn ANd Join POpup -->\\n    <div class=\\\"navbar\\\" id=\\\"userDiv\\\" >\\n        <div class=\\\"row\\\"> \\n            <div class=\\\"dropdown\\\">\\n                <p class=\\\"dropbtn ml-2 mr-3\\\">User</p>\\n                <div class=\\\"dropdown-content\\\">  \\n                    <div *ngIf=\\\"loginMenuChange; else showLoginRequestMessage\\\">\\n                            <button class=\\\"btn mb-2 mr-2 col-md-12 col-sm-12\\\" [routerLink]=\\\"[profile]\\\">Profile</button>\\n                            <button class=\\\"btn mb-2 mr-2 col-md-12 col-sm-12\\\" (click)=logOut()>Logout</button>                  \\n                    </div> \\n                     <ng-template #showLoginRequestMessage>\\n                            <button class=\\\"btn mb-2 mr-2 col-md-12 col-sm-12\\\" (click)=\\\"openLogin(login)\\\">Login</button>\\n                            <button class=\\\"btn mb-2 mr-2 col-md-12 col-sm-12\\\" (click)=\\\"openRegister(register)\\\">Join</button>\\n                    </ng-template>\\n                </div>\\n            </div>\\n         </div>\\n    </div>\\n    \\n    \\n    \",\n                inputs: ['magazineId', 'groupId', 'fieldId', 'formId'],\n                styles: [\".dropbtn{color:#fff;margin-right:10px;border:none}.dropdown{position:relative;display:inline-block}.dropdown-content{display:none;position:absolute;background-color:#f1f1f1;min-width:160px;box-shadow:0 8px 16px 0 rgba(0,0,0,.2);z-index:1}.dropdown-content button{color:#000;padding:12px 16px;text-decoration:none;display:block}.dropdown-content button:hover{background-color:#ddd}.dropdown:hover .dropdown-content{display:block}\"]\n            }] }\n];\n/** @nocollapse */\nAuthenticationComponent.ctorParameters = () => [\n    { type: NgbModal },\n    { type: FormBuilder },\n    { type: AuthenticationService },\n    { type: Router }\n];\nif (false) {\n    /** @type {?} */\n    AuthenticationComponent.prototype.privacyPolicy;\n    /** @type {?} */\n    AuthenticationComponent.prototype.termsConditions;\n    /** @type {?} */\n    AuthenticationComponent.prototype.profile;\n    /** @type {?} */\n    AuthenticationComponent.prototype.magazineId;\n    /** @type {?} */\n    AuthenticationComponent.prototype.groupId;\n    /** @type {?} */\n    AuthenticationComponent.prototype.fieldId;\n    /** @type {?} */\n    AuthenticationComponent.prototype.formId;\n    /** @type {?} */\n    AuthenticationComponent.prototype.modalOpen;\n    /** @type {?} */\n    AuthenticationComponent.prototype.showMsgRegistration;\n    /** @type {?} */\n    AuthenticationComponent.prototype.showMsgRegistrationFail;\n    /** @type {?} */\n    AuthenticationComponent.prototype.showMsgLoginSucess;\n    /** @type {?} */\n    AuthenticationComponent.prototype.showMsgLoginFail;\n    /** @type {?} */\n    AuthenticationComponent.prototype.loginMenuChange;\n    /** @type {?} */\n    AuthenticationComponent.prototype.submitted;\n    /** @type {?} */\n    AuthenticationComponent.prototype.loginForm;\n    /** @type {?} */\n    AuthenticationComponent.prototype.registerForm;\n    /** @type {?} */\n    AuthenticationComponent.prototype.closeResult;\n    /**\n     * @type {?}\n     * @private\n     */\n    AuthenticationComponent.prototype.modalService;\n    /**\n     * @type {?}\n     * @private\n     */\n    AuthenticationComponent.prototype.formBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    AuthenticationComponent.prototype.AuthenticationService;\n    /** @type {?} */\n    AuthenticationComponent.prototype.Router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sites/components/not-found/not-found.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NotFoundComponent {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nNotFoundComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-not-found',\n                template: \"<!-- <p> Core not-found works!</p> -->\\n\\n\\n<div class=\\\"text-center\\\">\\n    <h3> Under Development... </h3>\\n\\n   <p> Oops! <br>\\n    This is awkward <br>\\n    You are looking for something that doesn't actually exist\\n   </p>\\n</div>\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nNotFoundComponent.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ads/ads-routing.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst routes$1 = [];\nclass AdsRoutingModule {\n}\nAdsRoutingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [RouterModule.forChild(routes$1)],\n                exports: [RouterModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ads/ads-display/ads-display.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AdsDisplayComponent {\n    /**\n     * @param {?} CookieService\n     * @param {?} RodmanCoreService\n     * @param {?} deviceService\n     */\n    constructor(CookieService, RodmanCoreService, deviceService) {\n        this.CookieService = CookieService;\n        this.RodmanCoreService = RodmanCoreService;\n        this.deviceService = deviceService;\n        this.location = 'HOME';\n        this.deviceInfo = null;\n        // @Input() magazineId: any;\n        this.collectoionAds = [];\n        this.overlayShow = true;\n        this.showFooterAds = false;\n        this.screenDetect();\n        // this.Url =  RodmanCoreService.returnUrl();\n        //   if (window.performance) {\n        //     // console.info(\"window.performance works fine on this browser\");\n        //   }\n        //   if (performance.navigation.type == 1) {\n        //     console.info( \"This page is reloaded\" );\n        //     this.CookieService.delete(this.Url );\n        //   } \n        // this.footerCookieCheck = this.CookieService.get(this.Url);\n        // if(!(this.footerCookieCheck)){\n        //   this.showFooterAds = true;\n        //   this.CookieService.set(this.Url, 'footer');\n        // }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.dataArray = this.getAdsFilter(this.ads);\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    getAdsFilter(data) {\n        for (let filterData of data['data']) {\n            // if(filterData.type == 'doubleclick'){ \n            this.isOverlayCookie = this.CookieService.get('overlay_' + filterData.id);\n            if (this.isOverlayCookie) {\n                this.overlayShow = false;\n            }\n            else if ((!(this.isOverlayCookie)) && (filterData.type == 'overlay')) {\n                /** @type {?} */\n                const dateNow = new Date();\n                dateNow.setMinutes(dateNow.getMinutes() + 30);\n                this.CookieService.set('overlay_' + filterData.id, 'Overlay', dateNow, '/', \"\");\n            }\n            this.collectoionAds[filterData.location.replace('-', \"_\").replace('-', \"_\")] =\n                {\n                    id: filterData.id,\n                    code: this.getAdcode(filterData.code),\n                    type: filterData.type,\n                    ad_type: filterData.location.replace('-', \"_\").replace('-', \"_\").replace('-', \"_\")\n                };\n            if (filterData.type == 'overlay') {\n                this.overlayAdsData = {\n                    id: filterData.id,\n                    code: this.getAdcode(filterData.code),\n                    type: filterData.type,\n                    ad_type: filterData.location.replace('-', \"_\").replace('-', \"_\").replace('-', \"_\")\n                };\n            }\n            if ((filterData.type == 'doubleclick') && ('footer_1' == filterData.location.replace('-', \"_\").replace('-', \"_\").replace('-', \"_\"))) {\n                this.footerAds = {\n                    id: filterData.id,\n                    code: this.getAdcode(filterData.code),\n                    type: filterData.type,\n                    ad_type: filterData.location.replace('-', \"_\").replace('-', \"_\").replace('-', \"_\")\n                };\n            }\n            // }        \n        }\n        // this.finalSlots =  this.arrayConvet(this.collectoionAds[this.location].code.sizes);   \n        // this.arrayCheck=1;\n        // this.collectoionAds[this.location].code.value = ((this.collectoionAds[this.location].code.value=='') && (this.collectoionAds[this.location].code.value=='ome')) ? 'HOME' : this.collectoionAds[this.location].code.value ;\n        return this.collectoionAds[this.location];\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    arrayConvet(data) {\n        /** @type {?} */\n        var sizes = data.split(']');\n        /** @type {?} */\n        var finalsize = [];\n        for (let size in sizes) {\n            if (sizes[size].indexOf('[') >= 0) {\n                /** @type {?} */\n                var singleSize = sizes[size].substring(sizes[size].indexOf('[') + 1).split(',');\n                finalsize.push({ width: (singleSize[0].replace(/\\s/g, \"\")).toString(), height: (singleSize[1].replace(/\\s/g, \"\")).toString() });\n            }\n        }\n        return finalsize;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    getAdcode(str) {\n        str = str.replace(/\\'/g, '');\n        str = str.replace(/\\\\/g, '');\n        /** @type {?} */\n        var firstIndex = str.indexOf(\"script\") + 10;\n        /** @type {?} */\n        var lastIndex = str.indexOf(\"/script>\");\n        str = str.substring(firstIndex, lastIndex);\n        if (str.indexOf('defineSlot') < 0)\n            return false;\n        /** @type {?} */\n        var slot = str.substring(str.indexOf(\"defineSlot(\") + 11, str.indexOf(\").addService\"));\n        /** @type {?} */\n        var slotvalue = slot.split(',')[0];\n        /** @type {?} */\n        var code = {\n            slot: slotvalue,\n            // sizes: str.substring( str.lastIndexOf(\"[[\")+1,  str.lastIndexOf(\"]]\")+1 ),\n            key: str.substring(str.lastIndexOf('setTargeting(\"') + 14, str.lastIndexOf('\",')),\n            value: str.substring(str.lastIndexOf('\",[') + 4, str.lastIndexOf('])'))\n        };\n        return code;\n    }\n    /**\n     * @return {?}\n     */\n    screenDetect() {\n        // console.log('hello `Home` component');\n        this.deviceInfo = this.deviceService.getDeviceInfo();\n        // console.log(this.deviceInfo);\n    }\n}\nAdsDisplayComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-ads-display',\n                template: \"<!-- <ng-template></ng-template> -->\\n           <!-- <ng-template *ngFor=\\\"let size of finalSlots\\\">\\n                <dfp-size width=\\\"{{size.width}}\\\"  height=\\\"{{size.height}}\\\"></dfp-size>\\n            </ng-template> -->\\n<!-- <div class=\\\"col-md-12 col-sm-12\\\" *ngIf=\\\"(collectoionAds[location].type != 'overlay') && (collectoionAds[location].ad_type != 'footer_1')\\\" > -->\\n<div class=\\\"\\\" id=\\\"ads\\\" *ngIf=\\\"(collectoionAds[location].type != 'overlay')\\\" >    \\n    <dfp-ad adUnit={{collectoionAds[location].code.slot}} responsive>\\n    <div [ngSwitch]=\\\"location\\\">\\n        <div *ngSwitchCase=\\\"'header_1'\\\">\\n            <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n            <dfp-size [width]=\\\"468\\\" [height]=\\\"60\\\"></dfp-size>\\n            <dfp-size [width]=\\\"623\\\" [height]=\\\"108\\\"></dfp-size>\\n            <dfp-size [width]=\\\"620\\\" [height]=\\\"100\\\"></dfp-size>\\n            <dfp-size [width]=\\\"742\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"720\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"728\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"728\\\" [height]=\\\"100\\\"></dfp-size>\\n            <dfp-size [width]=\\\"780\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"798\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"900\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"960\\\" [height]=\\\"79\\\"></dfp-size>\\n            <dfp-size [width]=\\\"960\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"960\\\" [height]=\\\"150\\\"></dfp-size>\\n            <dfp-size [width]=\\\"960\\\" [height]=\\\"119\\\"></dfp-size>\\n            <dfp-size [width]=\\\"970\\\" [height]=\\\"250\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1000\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1100\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1100\\\" [height]=\\\"103\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1100\\\" [height]=\\\"136\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1080\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1080\\\" [height]=\\\"102\\\"></dfp-size>\\n            <dfp-size [width]=\\\"700\\\" [height]=\\\"90\\\"></dfp-size>\\n        </div>\\n\\n        <div *ngSwitchCase=\\\"'content_right_1'\\\">\\n            <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n            <dfp-size [width]=\\\"266\\\" [height]=\\\"195\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"100\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"248\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"250\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"300\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"320\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"320\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"400\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"500\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"600\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"700\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"800\\\"></dfp-size>\\n        </div>         \\n\\n        <div *ngSwitchCase=\\\"'content_right_2'\\\">\\n            <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n            <dfp-size [width]=\\\"266\\\" [height]=\\\"195\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"100\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"248\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"250\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"300\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"320\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"320\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"400\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"500\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"600\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"700\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"800\\\"></dfp-size>\\n        </div>          \\n\\n        <div *ngSwitchCase=\\\"'content_right_3'\\\">\\n            <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n            <dfp-size [width]=\\\"266\\\" [height]=\\\"195\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"100\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"248\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"250\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"300\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"320\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"320\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"400\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"500\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"600\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"700\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"800\\\"></dfp-size>\\n        </div>  \\n\\n\\n        <div *ngSwitchCase=\\\"'right_site_ad'\\\">\\n            <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"910\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"903\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"800\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"900\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"980\\\"></dfp-size>\\n            <dfp-size [width]=\\\"160\\\" [height]=\\\"800\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1000\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1075\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1080\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1090\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1020\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1105\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1100\\\"></dfp-size>\\n        </div>\\n\\n       <!-- [1, 1], [400, 980], [400, 1000], [400, 1080] -->\\n        <div *ngSwitchCase=\\\"'left_site_ad'\\\">\\n            <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"910\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"903\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"800\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"900\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"980\\\"></dfp-size>\\n            <dfp-size [width]=\\\"160\\\" [height]=\\\"800\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1000\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1075\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1080\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1090\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1020\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1105\\\"></dfp-size>\\n            <dfp-size [width]=\\\"400\\\" [height]=\\\"1100\\\"></dfp-size>\\n        </div>\\n\\n        <div *ngSwitchCase=\\\"'footer_1'\\\">\\n            <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n            <dfp-size [width]=\\\"728\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"960\\\" [height]=\\\"60\\\"></dfp-size>\\n            <dfp-size [width]=\\\"960\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1080\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1080\\\" [height]=\\\"102\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1100\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1000\\\" [height]=\\\"90\\\"></dfp-size>\\n        </div>  \\n\\n        <div *ngSwitchDefault >\\n            <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\"  [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\"  [height]=\\\"45\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\"  [height]=\\\"25\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"37\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"28\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\"  [height]=\\\"50\\\"></dfp-size>\\n            <dfp-size [width]=\\\"250\\\"  [height]=\\\"250\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"100\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\"  [height]=\\\"250\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\"  [height]=\\\"300\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\"  [height]=\\\"400\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"500\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\"  [height]=\\\"600\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"700\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"800\\\"></dfp-size>\\n            <dfp-size [width]=\\\"300\\\" [height]=\\\"24\\\"></dfp-size>\\n            <dfp-size [width]=\\\"728\\\"  [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"960\\\"  [height]=\\\"60\\\"></dfp-size>\\n            <dfp-size [width]=\\\"960\\\"  [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1080\\\" [height]=\\\"90\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1080\\\" [height]=\\\"102\\\"></dfp-size>\\n            <dfp-size [width]=\\\"728\\\"  [height]=\\\"100\\\"></dfp-size>\\n            <dfp-size [width]=\\\"1100\\\" [height]=\\\"90\\\"></dfp-size>\\n        </div>\\n    </div>\\n         \\n    <!-- <dfp-size *ngFor=\\\"let size of finalSlots\\\"  width=\\\"{{size.width}}\\\"    height=\\\"{{size.height}}\\\"></dfp-size> -->\\n    <dfp-targeting key={{collectoionAds[location].code.key}} value=\\\"{{collectoionAds[location].code.value !='' ? collectoionAds[location].code.value : 'HOME' }}\\\" >\\n    <!-- <dfp-targeting key={{collectoionAds[location].code.key}} value=\\\"valueReplace(collectoionAds[location].code.value)\\\" > -->\\n    </dfp-targeting>\\n    </dfp-ad>\\n</div>\\n\\n\\n<div id=\\\"overlayAds\\\" *ngIf=\\\"((overlayShow) && (overlayAdsData) )\\\">\\n   <CoreLib-ads-overlay [ads]=\\\"overlayAdsData\\\" [magazineName]=\\\"collectoionAds['footer_1'].code.key\\\" [location]=\\\"'footer_1'\\\"></CoreLib-ads-overlay>\\n</div>\\n\\n\\n<div id=\\\"footerAds\\\" *ngIf=\\\"(footerAds) && (footerAds.ad_type == 'footer_1') && (footerAds.type == 'doubleclick') && (footerData)\\\">    \\n    <CoreLib-ads-footer [ads]=\\\"footerAds\\\" [magazineName]=\\\"collectoionAds['footer_1'].code.key\\\"></CoreLib-ads-footer>\\n</div>\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nAdsDisplayComponent.ctorParameters = () => [\n    { type: CookieService },\n    { type: RodmanCoreService },\n    { type: Ng2DeviceService }\n];\nAdsDisplayComponent.propDecorators = {\n    ads: [{ type: Input }],\n    location: [{ type: Input }],\n    footerData: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    AdsDisplayComponent.prototype.ads;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.location;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.footerData;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.deviceInfo;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.collectoionAds;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.dataArray;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.sizeVariable;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.isOverlayCookie;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.overlayShow;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.overlayAdsData;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.footerAds;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.Url;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.footerCookieCheck;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.showFooterAds;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.finalSlots;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.CookieService;\n    /** @type {?} */\n    AdsDisplayComponent.prototype.RodmanCoreService;\n    /**\n     * @type {?}\n     * @private\n     */\n    AdsDisplayComponent.prototype.deviceService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ads/ads-overlay/ads-overlay.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// declare var jQuery:any;\n// import * as $ from 'jquery';\nclass AdsOverlayComponent {\n    /**\n     * @param {?} BsModalService\n     * @param {?} sanitizer\n     * @param {?} CookieService\n     */\n    constructor(BsModalService, sanitizer, CookieService) {\n        this.BsModalService = BsModalService;\n        this.sanitizer = sanitizer;\n        this.CookieService = CookieService;\n        this.isModalShown = false;\n        this.magazine = {\n            'NUT': { id: '1', name: 'Nutraceuticals world' },\n            'CW': { id: '5', name: 'Coating World' },\n            'MPO': { id: '6', name: 'Medical Product Outsourcing' },\n            'CP': { id: '7', name: 'Contract Pharma' },\n            'BP': { id: '8', name: 'Beauty Packaging' },\n            'HAP': { id: '9', name: 'Happi' },\n            'INK': { id: '10', name: 'Ink World' },\n            'LNW': { id: '11', name: 'Label & Narrow Web' },\n            'NON': { id: '13', name: 'Nonwovens Industry' },\n            'ODT': { id: '14', name: 'Orthopedic Design & Technology' },\n            'PEN': { id: '15', name: 'Printed Electronics Now' },\n        };\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.isModalShown = true;\n        setTimeout((/**\n         * @return {?}\n         */\n        function () {\n            // alert('sdfgdsgfggf')\n            // this.autoShownModal.close();\n            // this.autoShownModal.hide();\n        }), 15000);\n    }\n    /**\n     * @return {?}\n     */\n    showModal() {\n        this.isModalShown = true;\n    }\n    /**\n     * @return {?}\n     */\n    hideModal() {\n        this.autoShownModal.hide();\n    }\n    /**\n     * @return {?}\n     */\n    onHidden() {\n        this.isModalShown = false;\n    }\n}\nAdsOverlayComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-ads-overlay',\n                template: \"        <!-- <div *ngIf=\\\"isModalShown && userData\\\"  [config]=\\\"{backdrop: 'static',  keyboard: false,show: true }\\\"  (onHidden)=\\\"onHidden()\\\" bsModal #autoShownModal=\\\"bs-modal\\\"  class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-auto-name\\\"> -->\\n\\n\\n<!-- <div id=\\\"overlayAds\\\"> -->\\n    <div (onHidden)=\\\"onHidden()\\\"   [config]=\\\"{backdrop: 'static',  keyboard: false,show: true }\\\" bsModal #autoShownModal=\\\"bs-modal\\\"  class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-auto-name\\\"  *ngIf=\\\"ads && isModalShown\\\">\\n        <div class=\\\"modal-dialog modal-md\\\">\\n            <div class=\\\"modal-content popup_alert\\\">\\n                <div class=\\\"popup-btn-box\\\">\\n                    <button type=\\\"button\\\" class=\\\"close popup_close_btn\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div> \\n\\n                <div class=\\\"\\\">\\n                    <button type=\\\"button\\\" class=\\\"popup_contain close\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n                        Continue To {{this.magazine[this.magazineName].name}}\\n                    </button>\\n                </div> \\n                <div class=\\\"modal-body col-sm-12 col-md-12\\\" >\\n                    <dfp-ad adUnit={{ads.code.slot}} responsive>\\n                        <dfp-size [width]=\\\"600\\\" [height]=\\\"315\\\"></dfp-size>\\n                        <dfp-size [width]=\\\"600\\\" [height]=\\\"400\\\"></dfp-size>\\n                        <dfp-size [width]=\\\"640\\\" [height]=\\\"480\\\"></dfp-size>\\n                        <dfp-targeting key={{ads.code.key}} value=\\\"{{ads.code.value != '' ? ads.code.value: 'HOME' }}\\\"> </dfp-targeting>\\n                    </dfp-ad>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n<!-- </div>             -->\\n\",\n                styles: [\".modal-dialog{max-width:630px!important}.close{font-size:1 rem!important}.popup_contain{padding:15px!important;margin-right:15px}.popup_alert{position:relative!important}.popup_close_btn{border:2px solid #060606!important;border-radius:50%;position:absolute;right:-21px;top:-15px;background-color:#fcf6f6!important}.popup_close_btn span{padding:5px}\"]\n            }] }\n];\n/** @nocollapse */\nAdsOverlayComponent.ctorParameters = () => [\n    { type: BsModalService },\n    { type: DomSanitizer },\n    { type: CookieService }\n];\nAdsOverlayComponent.propDecorators = {\n    ads: [{ type: Input }],\n    location: [{ type: Input }],\n    magazineName: [{ type: Input }],\n    autoShownModal: [{ type: ViewChild, args: ['autoShownModal', { static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    AdsOverlayComponent.prototype.bsModal;\n    /** @type {?} */\n    AdsOverlayComponent.prototype.isModalShown;\n    /** @type {?} */\n    AdsOverlayComponent.prototype.ads;\n    /** @type {?} */\n    AdsOverlayComponent.prototype.location;\n    /** @type {?} */\n    AdsOverlayComponent.prototype.magazineName;\n    /** @type {?} */\n    AdsOverlayComponent.prototype.magazine;\n    /** @type {?} */\n    AdsOverlayComponent.prototype.autoShownModal;\n    /** @type {?} */\n    AdsOverlayComponent.prototype.BsModalService;\n    /** @type {?} */\n    AdsOverlayComponent.prototype.sanitizer;\n    /** @type {?} */\n    AdsOverlayComponent.prototype.CookieService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ads/ads-footer/ads-footer.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AdsFooterComponent {\n    /**\n     * @param {?} RodmanCoreService\n     * @param {?} Router\n     * @param {?} CookieService\n     */\n    constructor(RodmanCoreService, Router, CookieService) {\n        this.RodmanCoreService = RodmanCoreService;\n        this.Router = Router;\n        this.CookieService = CookieService;\n        this.showAds = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nAdsFooterComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-ads-footer',\n                template: \"<!-- <div class=\\\"container\\\" *ngIf=\\\"showAds\\\"> -->\\n<div class=\\\"container\\\" *ngIf=\\\"ads\\\">    \\n    <div class=\\\"text-center middle\\\">\\n        <div class=\\\"col-md-12 col-sm-12\\\"  >\\n            <dfp-ad adUnit={{ads.code.slot}} responsive>\\n                <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n                <dfp-size [width]=\\\"728\\\" [height]=\\\"90\\\"></dfp-size>\\n                <dfp-size [width]=\\\"960\\\" [height]=\\\"60\\\"></dfp-size>\\n                <dfp-size [width]=\\\"960\\\" [height]=\\\"90\\\"></dfp-size>\\n\\n                <dfp-size [width]=\\\"1080\\\" [height]=\\\"90\\\"></dfp-size>\\n                <dfp-size [width]=\\\"1080\\\" [height]=\\\"102\\\"></dfp-size>\\n                <dfp-size [width]=\\\"1100\\\" [height]=\\\"90\\\"></dfp-size>\\n                <dfp-size [width]=\\\"1000\\\" [height]=\\\"90\\\"></dfp-size>\\n\\n                <dfp-targeting key={{ads.code.key}} value=\\\"{{ads.code.value != '' ? (ads.code.value=='ome' ? 'HOME' : ads.code.value ) : 'HOME' }}\\\"> </dfp-targeting>\\n            </dfp-ad>\\n        </div>\\n    </div>    \\n </div>\\n \",\n                styles: [\".middle{Width:50%;Height:50px;position:fixed;Bottom:45px;z-index:10000}\"]\n            }] }\n];\n/** @nocollapse */\nAdsFooterComponent.ctorParameters = () => [\n    { type: RodmanCoreService },\n    { type: Router },\n    { type: CookieService }\n];\nAdsFooterComponent.propDecorators = {\n    ads: [{ type: Input }],\n    magazineName: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    AdsFooterComponent.prototype.ads;\n    /** @type {?} */\n    AdsFooterComponent.prototype.magazineName;\n    /** @type {?} */\n    AdsFooterComponent.prototype.Url;\n    /** @type {?} */\n    AdsFooterComponent.prototype.footerCookieCheck;\n    /** @type {?} */\n    AdsFooterComponent.prototype.showAds;\n    /** @type {?} */\n    AdsFooterComponent.prototype.RodmanCoreService;\n    /** @type {?} */\n    AdsFooterComponent.prototype.Router;\n    /** @type {?} */\n    AdsFooterComponent.prototype.CookieService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ads/ads-double-click/ads-double-click.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AdsDoubleClickComponent {\n    /**\n     * @param {?} RodmanCoreService\n     * @param {?} Router\n     */\n    constructor(RodmanCoreService, Router) {\n        this.RodmanCoreService = RodmanCoreService;\n        this.Router = Router;\n        // Optinal \n        this.device = 'website';\n        this.loading = false;\n        // target;\n        this.target = 'HOME';\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationEnd) {\n                this.currentURL = event.url;\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.name = magazineIds[this.magazineId].id;\n        // this.target = this.currentURL.toString().split('/').join(',');\n        if (this.currentURL != '') {\n            this.target = this.location.toString().split('/').join(',');\n        }\n        this.loading = true;\n    }\n}\nAdsDoubleClickComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-ads-double-click',\n                template: \"<div class=\\\"\\\" id=\\\"doubleClick-{{no}}\\\" *ngIf=\\\"loading\\\" >    \\n    <dfp-ad adUnit=\\\"/56119504/{{name}}_main-content-{{no}}\\\" responsive>\\n        <div [ngSwitch]=\\\"device\\\">\\n            <div *ngSwitchCase=\\\"device=='mobile'\\\">\\n                <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"90\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"45\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"37\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"58\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"64\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"38\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"25\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"27\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"24\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"47\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"28\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"50\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"250\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"90\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"45\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"37\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"58\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"64\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"38\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"25\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"27\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"24\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"47\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"28\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"50\\\"></dfp-size>\\n                <dfp-size [width]=\\\"350\\\" [height]=\\\"250\\\"></dfp-size>\\n            </div>\\n\\n            <div *ngSwitchDefault >\\n                <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n                <dfp-size [width]=\\\"740\\\" [height]=\\\"150\\\"></dfp-size>\\n                <dfp-size [width]=\\\"740\\\" [height]=\\\"200\\\"></dfp-size>\\n                <dfp-size [width]=\\\"468\\\" [height]=\\\"60\\\"></dfp-size>\\n                <dfp-size [width]=\\\"468\\\" [height]=\\\"90\\\"></dfp-size>\\n                <dfp-size [width]=\\\"468\\\" [height]=\\\"100\\\"></dfp-size>\\n                <dfp-size [width]=\\\"468\\\" [height]=\\\"120\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"250\\\"></dfp-size>\\n                <dfp-size [width]=\\\"468\\\" [height]=\\\"60\\\"></dfp-size>            \\n            </div> \\n        </div>      \\n            \\n        <dfp-targeting key={{name}} value={{target}} >  </dfp-targeting>\\n    </dfp-ad>\\n</div>\\n\\n\\n<div class=\\\"col-md-12 col-sm-12\\\" id=\\\"relatedcontentbox1\\\" *ngIf=\\\"(location == 'relatedcontentbox1') && (loading)\\\" >    \\n    <dfp-ad adUnit=\\\"/56119504/{{name}}_related-content-box-1\\\" responsive>\\n        <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n        <dfp-size [width]=\\\"225\\\" [height]=\\\"150\\\"></dfp-size>\\n        <dfp-size [width]=\\\"225\\\" [height]=\\\"80\\\"></dfp-size>                   \\n        <dfp-targeting key={{name}} value={{target}} >  </dfp-targeting>\\n    </dfp-ad>\\n</div>\\n\\n<div class=\\\"col-md-12 col-sm-12\\\" id=\\\"insidecontentbox1\\\" *ngIf=\\\"(location == 'insidecontentbox1') && (loading)\\\" >    \\n    <dfp-ad adUnit=\\\"/56119504/{{name}}_inside-content-box-1\\\" responsive>\\n        <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n        <dfp-size [width]=\\\"265\\\" [height]=\\\"221\\\"></dfp-size>\\n        <dfp-size [width]=\\\"225\\\" [height]=\\\"80\\\"></dfp-size>     \\n        <dfp-size [width]=\\\"225\\\" [height]=\\\"150\\\"></dfp-size>  \\n        <dfp-size [width]=\\\"250\\\" [height]=\\\"150\\\"></dfp-size>                \\n        <dfp-targeting key={{name}} value={{target}} >  </dfp-targeting>\\n    </dfp-ad>\\n</div>\\n\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nAdsDoubleClickComponent.ctorParameters = () => [\n    { type: RodmanCoreService },\n    { type: Router }\n];\nAdsDoubleClickComponent.propDecorators = {\n    magazineId: [{ type: Input }],\n    location: [{ type: Input }],\n    no: [{ type: Input }],\n    screenSize: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    AdsDoubleClickComponent.prototype.magazineId;\n    /** @type {?} */\n    AdsDoubleClickComponent.prototype.location;\n    /** @type {?} */\n    AdsDoubleClickComponent.prototype.no;\n    /** @type {?} */\n    AdsDoubleClickComponent.prototype.screenSize;\n    /** @type {?} */\n    AdsDoubleClickComponent.prototype.device;\n    /** @type {?} */\n    AdsDoubleClickComponent.prototype.currentURL;\n    /** @type {?} */\n    AdsDoubleClickComponent.prototype.loading;\n    /** @type {?} */\n    AdsDoubleClickComponent.prototype.target;\n    /** @type {?} */\n    AdsDoubleClickComponent.prototype.name;\n    /** @type {?} */\n    AdsDoubleClickComponent.prototype.RodmanCoreService;\n    /** @type {?} */\n    AdsDoubleClickComponent.prototype.Router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ads/ads-home-widget/ads-home-widget.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AdsHomeWidgetComponent {\n    /**\n     * @param {?} RodmanCoreService\n     * @param {?} Router\n     */\n    constructor(RodmanCoreService, Router) {\n        this.RodmanCoreService = RodmanCoreService;\n        this.Router = Router;\n        this.device = 'website';\n        this.loading = false;\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationEnd) {\n                this.currentURL = event.url;\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.name = magazineIds[this.magazineId].id;\n        // this.target = this.currentURL.toString().split('/').join(',');\n        if (this.currentURL != '') {\n            // this.target = this.location.toString().split('/').join(',');\n        }\n        this.loading = true;\n    }\n}\nAdsHomeWidgetComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-ads-home-widget',\n                template: \"<!-- var adSize = [[1, 1], [740, 150], [740, 200], [468, 60], [468, 90], [468, 100], [468, 120], [300, 250], [468, 60]];\\nif (mobileMode) {\\n    var adSize = [[1, 1], [300, 90], [300, 45], [300, 37], [300, 58], [300,64], [300, 38], [300, 25], [300, 27], [300, 24], [300, 47], [300, 28], [300, 50], [300, 250],[350, 90], [350, 45], [350, 37], [350, 58], [350,64], [350, 38], [350, 25], [350, 27], [350, 24], [350, 47], [350, 28], [350, 50], [350, 250]];\\n} -->\\n\\n<div  id=\\\"doubleClick-{{no}}\\\" *ngIf=\\\"loading\\\" >    \\n    <dfp-ad adUnit=\\\"/56119504/{{name}}_main-content-{{no}}\\\" responsive>\\n        <div [ngSwitch]=\\\"device\\\">\\n            <div *ngSwitchCase=\\\"'mobile'\\\">\\n                <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"90\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"45\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"37\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"58\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"64\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"38\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"25\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"27\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"24\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"47\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"28\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"50\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"250\\\"></dfp-size>\\n            </div>\\n\\n            <div *ngSwitchDefault >\\n                <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n                <dfp-size [width]=\\\"740\\\" [height]=\\\"150\\\"></dfp-size>\\n                <dfp-size [width]=\\\"740\\\" [height]=\\\"200\\\"></dfp-size>\\n                <dfp-size [width]=\\\"468\\\" [height]=\\\"60\\\"></dfp-size>\\n                <dfp-size [width]=\\\"468\\\" [height]=\\\"90\\\"></dfp-size>\\n                <dfp-size [width]=\\\"468\\\" [height]=\\\"100\\\"></dfp-size>\\n                <dfp-size [width]=\\\"468\\\" [height]=\\\"120\\\"></dfp-size>\\n                <dfp-size [width]=\\\"300\\\" [height]=\\\"250\\\"></dfp-size>\\n                <dfp-size [width]=\\\"468\\\" [height]=\\\"60\\\"></dfp-size>            \\n            </div> \\n        </div>      \\n            \\n        <dfp-targeting key={{name}} value={{target}} >  </dfp-targeting>\\n    </dfp-ad>\\n</div>\\n\\n\\n<div class=\\\"col-md-12 col-sm-12\\\" id=\\\"relatedcontentbox1\\\" *ngIf=\\\"(location == 'relatedcontentbox1') && (loading)\\\" >    \\n    <dfp-ad adUnit=\\\"/56119504/{{name}}_related-content-box-1\\\" responsive>\\n        <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n        <dfp-size [width]=\\\"225\\\" [height]=\\\"150\\\"></dfp-size>\\n        <dfp-size [width]=\\\"225\\\" [height]=\\\"80\\\"></dfp-size>                   \\n        <dfp-targeting key={{name}} value={{target}} >  </dfp-targeting>\\n    </dfp-ad>\\n</div>\\n\\n<div class=\\\"col-md-12 col-sm-12\\\" id=\\\"insidecontentbox1\\\" *ngIf=\\\"(location == 'insidecontentbox1') && (loading)\\\" >    \\n    <dfp-ad adUnit=\\\"/56119504/{{name}}_inside-content-box-1\\\" responsive>\\n        <dfp-size [width]=\\\"1\\\" [height]=\\\"1\\\"></dfp-size>\\n        <dfp-size [width]=\\\"265\\\" [height]=\\\"221\\\"></dfp-size>\\n        <dfp-size [width]=\\\"225\\\" [height]=\\\"80\\\"></dfp-size>     \\n        <dfp-size [width]=\\\"225\\\" [height]=\\\"150\\\"></dfp-size>  \\n        <dfp-size [width]=\\\"250\\\" [height]=\\\"150\\\"></dfp-size>                \\n        <dfp-targeting key={{name}} value={{target}} >  </dfp-targeting>\\n    </dfp-ad>\\n</div>\\n\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nAdsHomeWidgetComponent.ctorParameters = () => [\n    { type: RodmanCoreService },\n    { type: Router }\n];\nAdsHomeWidgetComponent.propDecorators = {\n    magazineId: [{ type: Input }],\n    location: [{ type: Input }],\n    no: [{ type: Input }],\n    target: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    AdsHomeWidgetComponent.prototype.magazineId;\n    /** @type {?} */\n    AdsHomeWidgetComponent.prototype.location;\n    /** @type {?} */\n    AdsHomeWidgetComponent.prototype.no;\n    /** @type {?} */\n    AdsHomeWidgetComponent.prototype.device;\n    /** @type {?} */\n    AdsHomeWidgetComponent.prototype.target;\n    /** @type {?} */\n    AdsHomeWidgetComponent.prototype.currentURL;\n    /** @type {?} */\n    AdsHomeWidgetComponent.prototype.loading;\n    /** @type {?} */\n    AdsHomeWidgetComponent.prototype.name;\n    /** @type {?} */\n    AdsHomeWidgetComponent.prototype.RodmanCoreService;\n    /** @type {?} */\n    AdsHomeWidgetComponent.prototype.Router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ads/ads.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AdsModule {\n}\nAdsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [AdsDisplayComponent, AdsOverlayComponent, AdsFooterComponent, AdsDoubleClickComponent, AdsHomeWidgetComponent],\n                imports: [\n                    CommonModule,\n                    ModalModule,\n                    RodmanORMModule,\n                    AdsRoutingModule,\n                    Ng2DeviceDetectorModule.forRoot(),\n                    DfpModule.forRoot({\n                        idleLoad: true,\n                        enableVideoAds: true,\n                        personalizedAds: true,\n                        // Request personalized ads by default\n                        singleRequestMode: true,\n                        // Only applies to initial refresh\n                        onSameNavigation: 'refresh',\n                        globalTargeting: {\n                        // food: ['NUT', 'HOME']\n                        }\n                    }),\n                ],\n                providers: [CookieService],\n                exports: [AdsDisplayComponent, AdsOverlayComponent, AdsFooterComponent, AdsDoubleClickComponent, AdsHomeWidgetComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sites/components/slider/slider.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SliderComponent {\n    /**\n     * @param {?} config\n     * @param {?} RodmanCoreService\n     */\n    constructor(config, RodmanCoreService) {\n        this.RodmanCoreService = RodmanCoreService;\n        this.showNavigationArrows = false;\n        this.showNavigationIndicators = false;\n        config.interval = 2000;\n        config.showNavigationArrows = true;\n        config.showNavigationIndicators = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // console.log('fsfdf')\n        // console.log(this.data)\n        // console.log(this.data[0])\n    }\n    /**\n     * @param {?} imageId\n     * @return {?}\n     */\n    getImage(imageId) {\n        return this.RodmanCoreService.displayImageUrl(imageId);\n    }\n}\nSliderComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-slider',\n                template: \"<div class=\\\"border\\\">\\n    <ngb-carousel>\\n    <ng-template ngbSlide *ngFor=\\\"let sliderData of data[0] | slice:0:5; let i =index\\\">\\n        <div class=\\\"picsum-img-wrapper\\\">\\n            <a [routerLink]=\\\"[sliderData.viewUrl]\\\" >\\n                <img class=\\\"slider-img\\\" [src]=\\\"getImage(sliderData.primary_image)\\\" alt=\\\"No Image\\\"></a>\\n        </div>\\n        <div class=\\\"carousel-caption\\\">\\n            <h3>{{sliderData.title}}</h3>\\n        </div>\\n    </ng-template>\\n    </ngb-carousel>\\n</div>\\n\",\n                providers: [NgbModule, NgbCarouselConfig],\n                styles: [\".slider-img{width:100%}\"]\n            }] }\n];\n/** @nocollapse */\nSliderComponent.ctorParameters = () => [\n    { type: NgbCarouselConfig },\n    { type: RodmanCoreService }\n];\nSliderComponent.propDecorators = {\n    data: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    SliderComponent.prototype.data;\n    /** @type {?} */\n    SliderComponent.prototype.showNavigationArrows;\n    /** @type {?} */\n    SliderComponent.prototype.showNavigationIndicators;\n    /** @type {?} */\n    SliderComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sites/sites.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SitesModule {\n}\nSitesModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NavComponent, AuthenticationComponent, HeaderComponent, FooterComponent, FootersliderComponent, NotFoundComponent, SliderComponent],\n                imports: [\n                    FormsModule,\n                    ReactiveFormsModule,\n                    CommonModule,\n                    HttpClientModule,\n                    // HttpClient,    \n                    SitesRoutingModule,\n                    NgbModule,\n                    AngularFontAwesomeModule,\n                    RodmanORMModule,\n                    ModalModule.forRoot(),\n                    AdsModule\n                ],\n                providers: [CookieService],\n                exports: [NavComponent, HeaderComponent, FooterComponent, NotFoundComponent, AuthenticationComponent, SliderComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/home/home-routing.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst routes$2 = [];\nclass HomeRoutingModule {\n}\nHomeRoutingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [RouterModule.forChild(routes$2)],\n                exports: [RouterModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/home/components/featured-content/feature-content.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FeatureContentService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} id\n     * @return {?}\n     */\n    getfetureData(magazineId, id) {\n        return this.HttpClient.post(apiURL + 'contentscontroller/getBoxContent', { magazineId: magazineId, id: id }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nFeatureContentService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nFeatureContentService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ FeatureContentService.ngInjectableDef = ɵɵdefineInjectable({ factory: function FeatureContentService_Factory() { return new FeatureContentService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: FeatureContentService, providedIn: \"root\" });\nif (false) {\n    /** @type {?} */\n    FeatureContentService.prototype.errorData;\n    /**\n     * @type {?}\n     * @private\n     */\n    FeatureContentService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    FeatureContentService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/home/components/featured-content/featured-content.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FeaturedContentComponent {\n    /**\n     * @param {?} FeatureContentService\n     * @param {?} RodmanCoreService\n     */\n    constructor(FeatureContentService, RodmanCoreService) {\n        this.FeatureContentService = FeatureContentService;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.FeatureContentService.getfetureData(this.magazineId, this.featured_content_section).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.featuredContentData = data['data'];\n            this.featuredContentHeading = data['contentType'];\n            this.viewAdRender = 1;\n            // console.log(this.getAllAd);\n        }));\n    }\n    /**\n     * @param {?} imageId\n     * @return {?}\n     */\n    getImage(imageId) {\n        return this.RodmanCoreService.displayImageUrl(imageId);\n    }\n}\nFeaturedContentComponent.decorators = [\n    { type: Component, args: [{\n                inputs: ['magazineId', 'featured_content_section'],\n                selector: 'CoreLib-featured-content',\n                template: \"<div class=\\\"d-flex justify-content-center loader-height mt-5 mb-5\\\" *ngIf= \\\"featuredContentHeading == null || featuredContentHeading.length === 0\\\">\\n    <div class=\\\"spinner-border abc\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"container container_box my-5\\\" *ngIf=\\\"featuredContentHeading && featuredContentHeading[0]\\\">\\n\\n    <div class=\\\"row content\\\">    \\n        <div class=\\\"col-sm-12 heading-border\\\"> \\n             <h3 *ngIf=\\\"featuredContentHeading && featuredContentHeading[0].slug\\\">{{featuredContentHeading[0].slug.replace('-', ' ')  | uppercase }}</h3>            \\n        </div>\\n    </div>            \\n           \\n    <br>\\n\\n    <div class=\\\"row content vdivide\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <figure>\\n                <div class=\\\"img-hover-zoom img-hover-zoom--slowmo\\\">\\n                    <img  *ngIf=\\\"featuredContentData && featuredContentData[0]\\\" [src]=\\\"getImage(featuredContentData[0].primary_image)\\\" alt=\\\"No Image\\\" width=\\\"100%\\\" height=\\\"auto\\\"> \\n                </div>\\n                <br>\\n                <h4 class=\\\"text-center pt-2\\\" *ngIf=\\\"featuredContentData && featuredContentData[0]\\\"><a [routerLink]=\\\"[featuredContentData[0].viewUrl]\\\">{{featuredContentData[0].title}}</a></h4>\\n                <p class=\\\"text-center\\\"><small *ngIf=\\\"featuredContentData && featuredContentData[0].firstName\\\">By <b>{{featuredContentData[0].firstName}} {{featuredContentData[0].lastName}}</b></small></p>\\n            </figure>\\n        </div>\\n        \\n        <div class=\\\"col-sm-4\\\">      \\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <figure>\\n                        <img class=\\\"img-responsive\\\" *ngIf=\\\"featuredContentData && featuredContentData[1]\\\" [src]=\\\"getImage(featuredContentData[1].primary_image)\\\" alt=\\\"No Image\\\" width=\\\"100%\\\" height=\\\"auto\\\"> \\n                        <div class=\\\"ml-3 pt-1\\\">\\n                            <h4 *ngIf=\\\"featuredContentData && featuredContentData[1]\\\"><a [routerLink]=\\\"[featuredContentData[1].viewUrl]\\\">{{featuredContentData[1].title}}</a></h4>\\n                            <small *ngIf=\\\"featuredContentData && featuredContentData[1].firstName\\\">By <b>{{featuredContentData[1].firstName}} {{featuredContentData[1].lastName}}</b></small>\\n                        </div>\\n                    </figure>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <figure>\\n                        <img class=\\\"img-responsive\\\" *ngIf=\\\"featuredContentData && featuredContentData[2]\\\" [src]=\\\"getImage(featuredContentData[2].primary_image)\\\" alt=\\\"No Image\\\" width=\\\"100%\\\" height=\\\"auto\\\">  \\n                         \\n                        <div class=\\\"ml-3 pt-1\\\"> \\n                            <h4 *ngIf=\\\"featuredContentData && featuredContentData[2]\\\" ><a [routerLink]=\\\"[featuredContentData[2].viewUrl]\\\">{{featuredContentData[2].title}}</a></h4>\\n                            <small  *ngIf=\\\"featuredContentData && featuredContentData[2].firstName\\\">By <b>{{featuredContentData[2].firstName}} {{featuredContentData[2].lastName}}</b></small>\\n                        </div>\\n                    </figure>\\n                </div>        \\n            </div>      \\n        </div>\\n    </div>  \\n\\n    <br><hr>\\n    <div class=\\\"row\\\"> \\n        <div class=\\\"col-sm-8 col-md-8\\\" >\\n            <div class=\\\"row content\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-3 col-md-3 col-xs-3 image-container\\\">\\n                            <img class=\\\"img-res\\\" *ngIf=\\\"featuredContentData && featuredContentData[3]\\\" [src]=\\\"getImage(featuredContentData[3].primary_image)\\\" alt=\\\"No Image\\\" width=\\\"100%\\\" height=\\\"auto\\\"> \\n                        </div>\\n                        <div class=\\\"col-sm-9 col-md-9 col-xs-9\\\">     \\n                            <h6 *ngIf=\\\"featuredContentData && featuredContentData[3]\\\" ><a [routerLink]=\\\"[featuredContentData[3].viewUrl]\\\">{{featuredContentData[3].title}}</a></h6>\\n                            <p class=\\\"feature-summary\\\" *ngIf=\\\"featuredContentData && featuredContentData[3]\\\" >{{featuredContentData[3].summary}}</p>\\n                            <small *ngIf=\\\"featuredContentData && featuredContentData[3].firstName\\\">By <b>{{featuredContentData[3].firstName}} {{featuredContentData[3].lastName}}</b></small>\\n                        </div>\\n                    </div>\\n                </div>            \\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-4 col-md-4 col-xs-4 image-container\\\">\\n                            <img class=\\\"img-res\\\" *ngIf=\\\"featuredContentData && featuredContentData[4]\\\" [src]=\\\"getImage(featuredContentData[4].primary_image)\\\" alt=\\\"No Image\\\" width=\\\"100%\\\" height=\\\"auto\\\"> \\n                        </div>\\n                        <div class=\\\"col-sm-8 col-md-8 col-xs-8 \\\"> \\n                            <h6 *ngIf=\\\"featuredContentData && featuredContentData[4]\\\"><a [routerLink]=\\\"[featuredContentData[4].viewUrl]\\\">{{featuredContentData[4].title}}</a></h6>\\n                            <p *ngIf=\\\"featuredContentData && featuredContentData[4]\\\" class=\\\"feature-summary\\\">{{featuredContentData[4].summary}}</p>\\n                            <small  *ngIf=\\\"featuredContentData && featuredContentData[4].firstName\\\">By <b>{{featuredContentData[4].firstName}} {{featuredContentData[4].lastName}}</b></small>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>  \\n\\n            <br>\\n\\n            <div class=\\\"row content\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-3 col-md-3 col-xs-3 image-container\\\">\\n                            <img class=\\\"img-res\\\" *ngIf=\\\"featuredContentData && featuredContentData[5]\\\" [src]=\\\"getImage(featuredContentData[5].primary_image)\\\" alt=\\\"No Image\\\" width=\\\"100%\\\" height=\\\"auto\\\"> \\n                        </div>\\n                        <div class=\\\"col-sm-9 col-md-9 col-xs-9\\\">     \\n                            <h6 *ngIf=\\\"featuredContentData && featuredContentData[5]\\\"><a [routerLink]=\\\"[featuredContentData[5].viewUrl]\\\">{{featuredContentData[5].title}}</a></h6>\\n                            <p *ngIf=\\\"featuredContentData && featuredContentData[5]\\\" class=\\\"feature-summary\\\">{{featuredContentData[5].summary}}</p>\\n                            <small *ngIf=\\\"featuredContentData && featuredContentData[5].firstName\\\">By <b>{{featuredContentData[5].firstName}} {{featuredContentData[5].lastName}}</b></small>\\n                        </div>\\n                    </div>\\n                </div>                   \\n            \\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-4 col-md-4 col-xs-4 image-container\\\">\\n                            <img class=\\\"img-res\\\" *ngIf=\\\"featuredContentData && featuredContentData[6]\\\" [src]=\\\"getImage(featuredContentData[6].primary_image)\\\" alt=\\\"No Image\\\" width=\\\"100%\\\" height=\\\"auto\\\"> \\n                        </div>\\n                        <div class=\\\"col-sm-8 col-md-8 col-xs-8 \\\"> \\n                            <h6 *ngIf=\\\"featuredContentData && featuredContentData[6]\\\"><a [routerLink]=\\\"[featuredContentData[6].viewUrl]\\\">{{featuredContentData[6].title}}</a></h6>\\n                            <p *ngIf=\\\"featuredContentData && featuredContentData[6]\\\" class=\\\"feature-summary\\\">{{featuredContentData[6].summary}}</p>\\n                            <small  *ngIf=\\\"featuredContentData && featuredContentData[6].firstName\\\">By <b>{{featuredContentData[6].firstName}} {{featuredContentData[6].lastName}}</b></small>\\n                        </div>\\n                    </div>\\n                </div>     \\n            </div>   \\n\\n        </div>   \\n        <div class=\\\"col-sm-4 col-md-4\\\" >\\n                <div class=\\\"col-md-12 col-sm-12 text-center\\\"  *ngIf=\\\"(viewAdRender == 1) && (getAllAd)\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location=\\\"{{location}}\\\"></CoreLib-ads-display>\\n                    <!-- {{location}} -->\\n                </div>\\n        </div> \\n    </div>\\n\\n\\n</div>\\n<!-- end show Data -->\\n\",\n                styles: [\".loader-height{min-height:450px}.container_box{width:100%!important;max-width:90%!important}.heading-border{border-bottom:1px solid;border-top:4px solid}.heading-border h3{padding:10px!important}.row.vdivide [class*=col-]:not(:last-child):after{background:#e0e0e0;width:1px;content:\\\"\\\";display:block;position:absolute;top:0;bottom:0;right:0;min-height:70px}.img-hover-zoom{height:100%;width:100%;overflow:hidden}.img-hover-zoom--slowmo img{-webkit-transform-origin:50% 65%;transform-origin:50% 65%;-webkit-transition:-webkit-transform 5s,-webkit-filter 3s ease-in-out;transition:transform 5s,filter 3s ease-in-out,-webkit-transform 5s,-webkit-filter 3s ease-in-out}.img-hover-zoom--slowmo:hover img{-webkit-filter:brightness(100%);filter:brightness(100%);-webkit-transform:scale(2);transform:scale(2)}.feature-summary{font-size:10px;color:#03225c}\"]\n            }] }\n];\n/** @nocollapse */\nFeaturedContentComponent.ctorParameters = () => [\n    { type: FeatureContentService },\n    { type: RodmanCoreService }\n];\nFeaturedContentComponent.propDecorators = {\n    getAllAd: [{ type: Input }],\n    location: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    FeaturedContentComponent.prototype.getAllAd;\n    /** @type {?} */\n    FeaturedContentComponent.prototype.location;\n    /** @type {?} */\n    FeaturedContentComponent.prototype.viewAdRender;\n    /** @type {?} */\n    FeaturedContentComponent.prototype.featuredContentData;\n    /** @type {?} */\n    FeaturedContentComponent.prototype.featuredContentHeading;\n    /** @type {?} */\n    FeaturedContentComponent.prototype.magazineId;\n    /** @type {?} */\n    FeaturedContentComponent.prototype.featured_content_section;\n    /**\n     * @type {?}\n     * @private\n     */\n    FeaturedContentComponent.prototype.FeatureContentService;\n    /** @type {?} */\n    FeaturedContentComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/home/components/home-slider/home-slider.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass HomeSliderService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} id\n     * @return {?}\n     */\n    getHomeSlider(magazineId, id) {\n        return this.HttpClient.post(apiURL + 'contentsController/getHomeSliderContent', { magazineId: magazineId, id: id }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nHomeSliderService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nHomeSliderService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ HomeSliderService.ngInjectableDef = ɵɵdefineInjectable({ factory: function HomeSliderService_Factory() { return new HomeSliderService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: HomeSliderService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HomeSliderService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    HomeSliderService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/home/components/home-slider/home-slider.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass HomeSliderComponent {\n    /**\n     * @param {?} HomeSliderService\n     * @param {?} config\n     * @param {?} RodmanCoreService\n     */\n    constructor(HomeSliderService, config, RodmanCoreService) {\n        this.HomeSliderService = HomeSliderService;\n        this.RodmanCoreService = RodmanCoreService;\n        this.loading = true;\n        config.interval = 3000;\n        // config.showNavigationArrows = false;\n        // config.showNavigationIndicators = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.HomeSliderService.getHomeSlider(this.magazineId, this.homeBoxId).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.homeSliderData = data['data'];\n            this.loading = false;\n        }));\n    }\n    /**\n     * @param {?} imageId\n     * @return {?}\n     */\n    getImage(imageId) {\n        return this.RodmanCoreService.displayImageUrl(imageId);\n    }\n}\nHomeSliderComponent.decorators = [\n    { type: Component, args: [{\n                inputs: ['magazineId', 'homeBoxId'],\n                selector: 'CoreLib-home-slider',\n                template: \"\\n\\n<div class=\\\"d-flex justify-content-center mt-5 mb-5 loader-height\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"border\\\">\\n    <ngb-carousel>\\n        <ng-template ngbSlide *ngFor=\\\"let sliderData of homeSliderData; let i =index\\\">\\n            <div class=\\\"picsum-img-wrapper\\\">\\n                <a [routerLink]=\\\"[sliderData.viewUrl]\\\" >\\n                    <!-- <img [src]=\\\"sliderData.primary_image_main\\\" alt=\\\"No Image\\\"> -->\\n                    <img  [src]=\\\"getImage(sliderData.primary_image)\\\" alt=\\\"No Image\\\">\\n                </a>\\n            </div>\\n            <div class=\\\"carousel-caption\\\">\\n                <h3>{{sliderData.title}}</h3>\\n            </div>\\n        </ng-template>\\n    </ngb-carousel>\\n</div>     \\n\\n\\n       \\n\",\n                providers: [NgbModule, NgbCarouselConfig],\n                styles: [\".picsum-img-wrapper img{width:100%!important}.carousel-caption h3{color:#000}.carousel-control-next-icon,.carousel-control-prev-icon{color:#000!important}.carousel-control-next-icon:after{content:'>';font-size:55px;color:#000!important}.carousel-control-prev-icon:after{content:'<';font-size:55px;color:#000!important}.loader-height{min-height:100px}\"]\n            }] }\n];\n/** @nocollapse */\nHomeSliderComponent.ctorParameters = () => [\n    { type: HomeSliderService },\n    { type: NgbCarouselConfig },\n    { type: RodmanCoreService }\n];\nif (false) {\n    /** @type {?} */\n    HomeSliderComponent.prototype.magazineId;\n    /** @type {?} */\n    HomeSliderComponent.prototype.homeBoxId;\n    /** @type {?} */\n    HomeSliderComponent.prototype.sliderData;\n    /** @type {?} */\n    HomeSliderComponent.prototype.homeSliderData;\n    /** @type {?} */\n    HomeSliderComponent.prototype.loading;\n    /**\n     * @type {?}\n     * @private\n     */\n    HomeSliderComponent.prototype.HomeSliderService;\n    /** @type {?} */\n    HomeSliderComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/home/home.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass HomeModule {\n}\nHomeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [FeaturedContentComponent, HomeSliderComponent],\n                imports: [\n                    NgbModule,\n                    AdsModule,\n                    CommonModule,\n                    AngularFontAwesomeModule,\n                    HomeRoutingModule,\n                    HttpClientModule\n                ],\n                exports: [FeaturedContentComponent, HomeSliderComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/contents-routing.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst routes$3 = [];\nclass ContentsRoutingModule {\n}\nContentsRoutingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [RouterModule.forChild(routes$3)],\n                exports: [RouterModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/list-content/list-content.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ListContentService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} slug\n     * @param {?} magazineId\n     * @param {?} limit\n     * @param {?} page\n     * @param {?} contentType\n     * @return {?}\n     */\n    getContent(slug, magazineId, limit, page, contentType) {\n        return this.HttpClient.post(apiURL + 'taxonomysController/getContentTypeContent', { pageUrl: slug, magazineId: magazineId, limit: limit, page: page, contentType: contentType }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n    /**\n     * @param {?} slug\n     * @param {?} magazineId\n     * @return {?}\n     */\n    getContentTopTaxonomy(slug, magazineId) {\n        return this.HttpClient.post(apiURL + 'taxonomysController/getContentTypeTopTaxonomy', { pageUrl: slug, magazineId: magazineId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nListContentService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nListContentService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ ListContentService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ListContentService_Factory() { return new ListContentService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: ListContentService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ListContentService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListContentService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/list-content/list-content.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ListContentComponent {\n    /**\n     * @param {?} Router\n     * @param {?} ListContentService\n     * @param {?} RodmanCoreService\n     */\n    constructor(Router, ListContentService, RodmanCoreService) {\n        this.Router = Router;\n        this.ListContentService = ListContentService;\n        this.RodmanCoreService = RodmanCoreService;\n        this.listContentData = [];\n        this.limit = 10;\n        this.page = 0;\n        this.contentType = '';\n        this.loading = true;\n        this.staticUrl = '/';\n        this.sliderData = [];\n        this.counterAd = 1;\n        this.all = [];\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationEnd) {\n                this.currentURL = event.url;\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // this.getContentData();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        if (this.magazineId == 1) {\n            this.staticUrl = '/knowledge-center/';\n        }\n        this.loading = true;\n        this.page = 0;\n        this.slugHeading;\n        this.all = [];\n        this.sliderData = [];\n        this.listContentData = [];\n        this.contentTaxonomy = [];\n        this.getContentData();\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        return data.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    }\n    /**\n     * @param {?} imageId\n     * @return {?}\n     */\n    getImage(imageId) {\n        return this.RodmanCoreService.displayImageUrl(imageId);\n    }\n    /**\n     * @return {?}\n     */\n    getContentData() {\n        this.taxonomyUrl = this.routeUrl.split('/');\n        this.taxonomyUrl = (this.taxonomyUrl[this.taxonomyUrl.length - 1]);\n        /** @type {?} */\n        let url = this.taxonomyUrl.split('_');\n        this.taxonomyUrlTo = url[1];\n        if (this.page == 0) {\n            this.ListContentService.getContentTopTaxonomy(this.routeUrl, this.magazineId).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            (data) => {\n                // this.slugHeading = data['contentTypeName'];\n                this.contentTaxonomy = data['CONTENT_TAXONOMYS'];\n                this.all = data['all'];\n            }));\n        }\n        this.ListContentService.getContent(this.routeUrl, this.magazineId, this.limit, this.page, this.contentType).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.contentData = data['data'];\n            if (this.page == 0) {\n                this.slugHeading = data['contentTypeName'];\n                // this.contentTaxonomy = data['CONTENT_TAXONOMYS'];\n                this.sliderData.push(this.contentData);\n            }\n            this.page = data['page'] + 1;\n            for (let content of this.contentData) {\n                this.listContentData.push(content);\n            }\n            this.loading = false;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    loadMoreData() {\n        this.loading = true;\n        this.getContentData();\n    }\n    /**\n     * @return {?}\n     */\n    removeContentType() {\n        this.contentType = '';\n    }\n}\nListContentComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-lists-contents',\n                inputs: ['routeUrl', 'magazineId', 'contentType'],\n                template: \"<div class=\\\"container mt-5\\\" *ngIf=\\\"slugHeading  && (contentType!='2542') && (routeUrl != '/contents/list_industry-events')  && (routeUrl != '/contents/list_ebook')\\\">\\n    <div class=\\\"row\\\" >\\n        <div class=\\\"col-md-12 col-sm-12\\\" >\\n            <CoreLib-slider [data]=\\\"sliderData\\\"></CoreLib-slider>\\n        </div>\\n    </div>\\n    <!-- Page Heading -->\\n    <div class=\\\"mb-2\\\" id=\\\"url\\\"><h2>{{ slugHeading.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h2></div>\\n     <!--Top Taxonomy  -->\\n        <span *ngIf=\\\"all.length\\\">\\n            <span class=\\\"taxonomy-text\\\" ><a  [routerLink]=\\\"['/'+all.url]\\\">{{all.tag}}</a></span> \\n        </span>    \\n        <span  *ngFor=\\\"let taxonomyTitle of contentTaxonomy;let k = index;\\\" class=\\\"taxonomy-text\\\" >\\n            <a  [routerLink]=\\\"[staticUrl+taxonomyTitle.slug+'/view_'+taxonomyUrlTo]\\\">{{taxonomyTitle.tag}}</a>      \\n        </span>    \\n    <div class=\\\"heading-border\\\"></div>\\n    <!-- List Data -->\\n    <div *ngIf=\\\"listContentData?.length > 0\\\"  >\\n        <div  *ngFor=\\\"let Data of listContentData; let i =index; let k = index\\\" >        \\n            <div class=\\\"col-md-12 col-sm-12\\\">\\n                <div class=\\\"row\\\">         \\n                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                        <span *ngFor=\\\"let taxonomy of Data.taggedTaxonomy.KNOWLEDGE_CENTER_TAXONOMY | slice:0:5; let j =index\\\">\\n                            <span *ngIf=\\\"j\\\"> | </span> \\n                            <a  [routerLink]=\\\"[staticUrl+taxonomy.url]\\\"  > {{taxonomy.tag}}</a>         \\n                        </span>        \\n                    </div> \\n                    \\n                    <div class=\\\"col-md-9 col-sm-9\\\">\\n                       \\n                        <h4 class=\\\"mt-2\\\"><a [routerLink]=\\\"[Data.viewUrl]\\\">\\n                            <b><div [innerHTML]=\\\"safeHtml(Data.title)\\\"> </div></b>\\n                        </a></h4> \\n                        <h6 class=\\\"mt-3\\\" [innerHTML]=\\\"safeHtml(Data.summary)\\\"></h6>\\n                        <div class=\\\"mt-2\\\"> \\n                            <small *ngIf=\\\"Data.publish_date\\\">{{ Data.publish_date| date : \\\"MMM dd , yyyy\\\"}}</small>\\n                            <span *ngIf=\\\"Data.firstName\\\"> . <small> <b> {{Data.firstName}} {{Data.lastName}}</b> </small></span> \\n                            <span *ngIf=\\\"Data.companyDetail.title\\\"> . <small> <b> {{Data.companyDetail.title}}</b> </small></span> \\n                        </div>    \\n                    </div>\\n                    <div class=\\\"col-md-3 col-sm-3\\\" *ngIf=\\\"Data.primary_image\\\">\\n                             <img class=\\\"img-scale\\\" [src]=\\\"getImage(Data.primary_image)\\\" alt=\\\"\\\"> \\n                    </div>\\n                </div>\\n            </div>  \\n\\n            <div id=\\\"ads\\\" *ngIf=\\\"(k % 3 == 0) && (k > 2)\\\" ><hr>\\n                <div class=\\\"col-md-12 col-sm-12\\\">\\n                    <div class=\\\"row\\\" > \\n                        <CoreLib-ads-double-click magazineId={{magazineId}} no=\\\"1\\\" location={{currentURL}}></CoreLib-ads-double-click>\\n                    </div>\\n                </div>\\n            </div><hr>         \\n        </div>   \\n    </div>         \\n</div>\\n    \\n    <!-- Webinars , ebook -->\\n<div class=\\\"container mt-5\\\" *ngIf=\\\"(!loading)  && ((contentType=='2542' && (routeUrl == '')) || (routeUrl == '/contents/list_ebook') )\\\">   \\n    <div class=\\\"heading-border mb-2\\\" id=\\\"webinars\\\"><h2>{{ slugHeading.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h2></div>\\n    \\n    <div class=\\\"border-bottom\\\" *ngFor=\\\"let Data of listContentData; let i =index\\\" >\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-2 col-md-2\\\"><img class=\\\"img-responsive Webinars\\\"  [src]=\\\"getImage(Data.primary_image)\\\" alt=\\\"No Image\\\"> </div>\\n            <div class=\\\"col-sm-10 col-md-10\\\">\\n                <h1><div [innerHTML]=\\\"safeHtml(Data.title)\\\"> </div></h1>\\n                <div [innerHTML]=\\\"Data.body\\\"></div>\\n            </div>\\n        </div>   \\n    </div>\\n</div> \\n\\n    <!-- Industry events -->\\n<div class=\\\"container mt-5\\\"*ngIf=\\\"(!loading)  && (routeUrl == '/contents/list_industry-events')\\\">   \\n    <div class=\\\"mb-2\\\"><h2>{{ slugHeading.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h2></div>   \\n    <div class=\\\"heading-border\\\"></div>\\n    <div *ngIf=\\\"listContentData?.length > 0\\\" >\\n        <div  *ngFor=\\\"let Data of listContentData; let i =index\\\" >\\n            <div class=\\\"col-md-12 col-sm-12\\\">                \\n                <div><h4 class=\\\"mt-2\\\"><b><div [innerHTML]=\\\"safeHtml(Data.title)\\\"> </div></b></h4> <br></div>\\n                <div><h5>{{ Data.start_date| date : \\\"MMM dd , yyyy\\\"}}</h5></div>\\n                <div><b>Location: </b>{{Data.location}}</div>\\n                <div><b>Contact:</b> {{Data.contact}}</div>\\n                <div><b>Phone: </b> {{Data.phone}}</div>       \\n                <div><b>Website:</b> {{Data.website}}</div>\\n                <div><b>Email:</b>{{Data.email}}</div>\\n            </div>   \\n            <hr> \\n        </div>   \\n    </div> \\n</div> \\n\\n<div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"container mt-5 mb-3\\\" *ngIf=\\\"listContentData?.length > 0  && contentType!='2542' && (routeUrl != '/contents/list_industry-events') && (routeUrl != '/contents/list_ebook')\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"listContentData?.length > 9 \\\"> \\n        <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n            <div class=\\\"col-md-4 col-sm-4\\\">    <button class=\\\"text-center button\\\"  (click)=\\\"loadMoreData()\\\">Load More</button></div>\\n        <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n    </div>   \\n</div>\",\n                styles: [\".img-scale{max-width:150px}.heading-border{border-bottom:1px solid #000;color:#000}.taxonomy-text{font-size:15px;background-color:#f2f2f2;font-weight:501;text-transform:uppercase;margin-right:15px;margin-bottom:10px;display:inline-block;letter-spacing:1px}.loader-height{min-height:800px}.Webinars{max-width:100%;min-width:100px}#ads,.taxonomy-text a{padding:10px}\"]\n            }] }\n];\n/** @nocollapse */\nListContentComponent.ctorParameters = () => [\n    { type: Router },\n    { type: ListContentService },\n    { type: RodmanCoreService }\n];\nif (false) {\n    /** @type {?} */\n    ListContentComponent.prototype.routeUrl;\n    /** @type {?} */\n    ListContentComponent.prototype.magazineId;\n    /** @type {?} */\n    ListContentComponent.prototype.listContentData;\n    /** @type {?} */\n    ListContentComponent.prototype.contentData;\n    /** @type {?} */\n    ListContentComponent.prototype.slugHeading;\n    /** @type {?} */\n    ListContentComponent.prototype.limit;\n    /** @type {?} */\n    ListContentComponent.prototype.page;\n    /** @type {?} */\n    ListContentComponent.prototype.contentType;\n    /** @type {?} */\n    ListContentComponent.prototype.contentTaxonomy;\n    /** @type {?} */\n    ListContentComponent.prototype.taxonomyUrl;\n    /** @type {?} */\n    ListContentComponent.prototype.taxonomyUrlTo;\n    /** @type {?} */\n    ListContentComponent.prototype.loading;\n    /** @type {?} */\n    ListContentComponent.prototype.staticUrl;\n    /** @type {?} */\n    ListContentComponent.prototype.sliderData;\n    /** @type {?} */\n    ListContentComponent.prototype.counterAd;\n    /** @type {?} */\n    ListContentComponent.prototype.currentURL;\n    /** @type {?} */\n    ListContentComponent.prototype.all;\n    /** @type {?} */\n    ListContentComponent.prototype.Router;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListContentComponent.prototype.ListContentService;\n    /** @type {?} */\n    ListContentComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/static-content/static-content.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StaticContentService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} slug\n     * @param {?} magazineId\n     * @param {?} limit\n     * @param {?} page\n     * @param {?} contentType\n     * @return {?}\n     */\n    getStaticContent(slug, magazineId, limit, page, contentType) {\n        // console.log({pageUrl:slug,magazineId:magazineId,limit:limit,page:page,contentType:contentType})\n        /** @type {?} */\n        let slugs = slug.replace('/', '');\n        // console.log(slugs)\n        return this.HttpClient.post(apiURL + 'taxonomysController/getContentTaxonomys', { pageUrl: slugs, magazineId: magazineId, limit: limit, page: page, contentType: contentType }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nStaticContentService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nStaticContentService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ StaticContentService.ngInjectableDef = ɵɵdefineInjectable({ factory: function StaticContentService_Factory() { return new StaticContentService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: StaticContentService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StaticContentService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    StaticContentService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/static-content/static-content.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StaticContentComponent {\n    /**\n     * @param {?} StaticContentService\n     * @param {?} Router\n     * @param {?} ActivatedRoute\n     * @param {?} RodmanCoreService\n     */\n    constructor(StaticContentService, Router, ActivatedRoute, RodmanCoreService) {\n        this.StaticContentService = StaticContentService;\n        this.Router = Router;\n        this.ActivatedRoute = ActivatedRoute;\n        this.RodmanCoreService = RodmanCoreService;\n        this.limit = 30;\n        this.page = 0;\n        this.contentType = '';\n        this.getAllAd = [];\n        this.loading = true;\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationEnd) {\n                this.routeUrl = event.url;\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ActivatedRoute.data.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.magazineId = data.magazineId;\n        }));\n        this.RodmanCoreService.getAllAdst(this.magazineId).subscribe(((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.getAllAd = data;\n            this.viewAdRender = 1;\n        })));\n        this.getStatic();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        // this.getStatic();\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        return this.RodmanCoreService.safeHtml(data);\n    }\n    // safeHtml(data){\n    //   return data.replace(/[^a-zA-Z0-9 ]/g, \"\")\n    // }  \n    /**\n     * @return {?}\n     */\n    getStatic() {\n        this.StaticContentService.getStaticContent(this.routeUrl, this.magazineId, this.limit, this.page, this.contentType).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.staticContentData = data['data'];\n            this.loading = false;\n        }));\n    }\n}\nStaticContentComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-static-content',\n                template: \"<!-- <div class=\\\"col-md-12 col-sm-12 text-center\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1'></CoreLib-ads-display>\\n</div>\\n    <div class=\\\"row mb-4 mt-4\\\" *ngIf=\\\"staticContentData\\\" >\\n        <div class=\\\"col-md-2 col-sm-2\\\">\\n            <div class=\\\"col-md-12 col-sm-12\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-8 col-sm-8\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8 col-sm-8\\\">\\n                    <h1>{{staticContentData[0].title}}</h1>\\n                    <hr>    \\n                    <div [innerHTML]=\\\"safeHtml(staticContentData[0].body)\\\"> </div>\\n                </div>\\n                <div class=\\\"col-md-4 col-sm-4\\\">\\n                            <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                            </div>\\n        \\n                            <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                                <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                            </div>\\n                                \\n        \\n                            <div class=\\\"col-md-12 col-sm-12 mb-2\\\"*ngIf=\\\"viewAdRender == 1\\\" >\\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>\\n                            </div>\\n                            <div class=\\\"col-md-12 col-sm-12 mb-2\\\"*ngIf=\\\"viewAdRender == 1\\\" >\\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>\\n                            </div>                        </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-2 col-sm-2\\\">\\n                <div class=\\\"col-md-12 col-sm-12\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display>\\n                </div>\\n        </div>\\n    </div> -->\\n\\n    \\n\\n\\n<div class=\\\"text-center\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\"  *ngIf=\\\"staticContentData\\\">\\n                    <h1 *ngIf=\\\"staticContentData[0]\\\">{{staticContentData[0].title}}</h1>\\n                    <hr>    \\n                    <div *ngIf=\\\"staticContentData[0]\\\" [innerHTML]=\\\"safeHtml(staticContentData[0].body)\\\"> </div>                             \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n        \\n            \",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nStaticContentComponent.ctorParameters = () => [\n    { type: StaticContentService },\n    { type: Router },\n    { type: ActivatedRoute },\n    { type: RodmanCoreService }\n];\nif (false) {\n    /** @type {?} */\n    StaticContentComponent.prototype.limit;\n    /** @type {?} */\n    StaticContentComponent.prototype.page;\n    /** @type {?} */\n    StaticContentComponent.prototype.contentType;\n    /** @type {?} */\n    StaticContentComponent.prototype.magazineId;\n    /** @type {?} */\n    StaticContentComponent.prototype.routeUrl;\n    /** @type {?} */\n    StaticContentComponent.prototype.staticContentData;\n    /** @type {?} */\n    StaticContentComponent.prototype.getAllAd;\n    /** @type {?} */\n    StaticContentComponent.prototype.viewAdRender;\n    /** @type {?} */\n    StaticContentComponent.prototype.loading;\n    /**\n     * @type {?}\n     * @private\n     */\n    StaticContentComponent.prototype.StaticContentService;\n    /**\n     * @type {?}\n     * @private\n     */\n    StaticContentComponent.prototype.Router;\n    /** @type {?} */\n    StaticContentComponent.prototype.ActivatedRoute;\n    /** @type {?} */\n    StaticContentComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-view/content-view.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentViewService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} contentUrl\n     * @return {?}\n     */\n    getContentDetails(magazineId, contentUrl) {\n        // contentUrl ='/issues/2019-03-01/view_features/the-conductive-ink-and-materials-market-42752';\n        return this.HttpClient.post(apiURL + 'taxonomysController/getViewContent', { magazineId: magazineId, contentUrl: contentUrl }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nContentViewService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nContentViewService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ ContentViewService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentViewService_Factory() { return new ContentViewService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: ContentViewService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentViewService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentViewService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-box-tabs/content-box-tabs.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentBoxTabsService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} id\n     * @return {?}\n     */\n    getTopRightWidget(magazineId, id) {\n        return this.HttpClient.post(apiURL + 'contentscontroller/getBoxContent', { magazineId: magazineId, id: id }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nContentBoxTabsService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nContentBoxTabsService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ ContentBoxTabsService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentBoxTabsService_Factory() { return new ContentBoxTabsService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: ContentBoxTabsService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentBoxTabsService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentBoxTabsService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-view/content-view.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nconst ɵ0 = [];\n/** @type {?} */\nconst contentDataView = [\n    { status: 'Fail', data: ɵ0, message: '', video: [], magazine_id: '' },\n];\nclass ContentViewComponent {\n    /**\n     * @param {?} ViewContentService\n     * @param {?} config\n     * @param {?} ContentBoxTabService\n     * @param {?} RodmanCoreService\n     * @param {?} Router\n     */\n    constructor(ViewContentService, config, ContentBoxTabService, RodmanCoreService, Router) {\n        this.ViewContentService = ViewContentService;\n        this.ContentBoxTabService = ContentBoxTabService;\n        this.RodmanCoreService = RodmanCoreService;\n        this.Router = Router;\n        this.getAllAd = [];\n        this.dataFetch = false;\n        this.displayDefault = 0;\n        this.contentDataView = contentDataView;\n        this.selectedContentView = contentDataView[0];\n        this.loading = true;\n        this.dataFetch = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.viewData();\n    }\n    /**\n     * @param {?} contentDataView\n     * @return {?}\n     */\n    selectView(contentDataView) {\n        this.selectedContentView = contentDataView;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.getads();\n        this.viewData();\n    }\n    /**\n     * @return {?}\n     */\n    viewData() {\n        // if((this.dataFetch)==false){ \n        this.ViewContentService.getContentDetails(this.magazineId, this.contentPageUrl).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.dataFetch = true;\n            this.contentData = data['data'];\n            this.contentDataView[0] = data['data'];\n            this.page = data['data'].slug;\n            this.displayDefault = 1;\n            this.loading = false;\n        }));\n        // }\n    }\n    /**\n     * @return {?}\n     */\n    check() {\n        this.dataFetch = false;\n    }\n    /**\n     * @return {?}\n     */\n    getads() {\n        this.RodmanCoreService.getAllAdst(this.magazineId).subscribe(((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.getAllAd = data;\n        })));\n    }\n}\nContentViewComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-view',\n                inputs: ['magazineId', 'contentPageUrl'],\n                template: \"            <div [ngSwitch]=\\\"page\\\">\\n                <div *ngSwitchCase=\\\"'jobs'\\\">\\n                        <CoreLib-content-jobs [ads]=\\\"getAllAd\\\"\\n                        [ContentInterface]=\\\"contentDataView\\\" \\n                        (select)=\\\"selectView($event)\\\"></CoreLib-content-jobs> \\n                </div>\\n                <div *ngSwitchCase=\\\"'features'\\\">\\n                        <CoreLib-content-feature [ads]=\\\"getAllAd\\\"\\n                        [ContentInterface]=\\\"contentDataView\\\" \\n                        (select)=\\\"selectView($event)\\\"></CoreLib-content-feature>\\n                </div>\\n                <div *ngSwitchCase=\\\"'videos'\\\">\\n                        <CoreLib-content-video [ads]=\\\"getAllAd\\\"\\n                        [ContentInterface]=\\\"contentDataView\\\" \\n                        (select)=\\\"selectView($event)\\\"></CoreLib-content-video>\\n                </div>      \\n                <div *ngSwitchCase=\\\"'webinars'\\\">\\n                        <CoreLib-content-webinars  [ads]=\\\"getAllAd\\\"          \\n                        [ContentInterface]=\\\"contentDataView\\\" \\n                        (select)=\\\"selectView($event)\\\"></CoreLib-content-webinars>\\n                </div> \\n                <div *ngSwitchCase=\\\"'formulary'\\\">\\n                        <CoreLib-content-formulary [ads]=\\\"getAllAd\\\"\\n                        [ContentInterface]=\\\"contentDataView\\\" \\n                        (select)=\\\"selectView($event)\\\"></CoreLib-content-formulary>\\n                </div>     \\n                <div *ngSwitchCase=\\\"'infographics'\\\">\\n                        <CoreLib-content-infographics [ads]=\\\"getAllAd\\\"\\n                        [ContentInterface]=\\\"contentDataView\\\" \\n                        (select)=\\\"selectView($event)\\\"></CoreLib-content-infographics>\\n                </div> \\n                <div *ngSwitchCase=\\\"'buyers-guide-companies'\\\">\\n                        <CoreLib-content-buyer-guide-basic  [ads]=\\\"getAllAd\\\"\\n                        [ContentInterface]=\\\"contentDataView\\\" \\n                        (select)=\\\"selectView($event)\\\"></CoreLib-content-buyer-guide-basic> \\n                </div> \\n                <div *ngSwitchCase=\\\"'slideshows'\\\">\\n                        <CoreLib-content-slide-show [ads]=\\\"getAllAd\\\"\\n                        [ContentInterface]=\\\"contentDataView\\\" \\n                        (select)=\\\"selectView($event)\\\"></CoreLib-content-slide-show>\\n                </div> \\n                <div *ngSwitchCase=\\\"'static-content'\\\">\\n                        <CoreLib-content-static-content [ads]=\\\"getAllAd\\\"\\n                        [ContentInterface]=\\\"contentDataView\\\" \\n                        (select)=\\\"selectView($event)\\\"></CoreLib-content-static-content>\\n                </div> \\n                <div *ngSwitchCase=\\\"'white-papers-tech-papers'\\\">\\n                        <CoreLib-content-white-paper  \\n                        [ContentInterface]=\\\"contentDataView\\\" \\n                        (select)=\\\"selectView($event)\\\"></CoreLib-content-white-paper>\\n                </div> \\n                <div *ngSwitchCase=\\\"'news-releases'\\\">\\n                        <CoreLib-content-news-release \\n                        [ContentInterface]=\\\"contentDataView\\\" \\n                        (select)=\\\"selectView($event)\\\"></CoreLib-content-news-release>\\n                </div> \\n         \\n                <div *ngSwitchDefault>\\n                    <div *ngIf=\\\"displayDefault\\\">\\n                            <CoreLib-content-default [ads]=\\\"getAllAd\\\"\\n                            [ContentInterface]=\\\"contentDataView\\\" \\n                            (select)=\\\"selectView($event)\\\">></CoreLib-content-default>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"check()\\\"></div>\\n\\n\\n<div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n            \\n<!-- \\n          <ng-template #Default>\\n                <ng-container> \\n                    <div>\\n                         hello\\n                    </div>\\n                </ng-container> \\n           </ng-template>\\n\\n    -->\\n   \",\n                providers: [NgbModule, NgbCarouselConfig],\n                styles: [\".content-color{color:#fff!important;text-align:center}.hide{display:none!important}.line{border-top:1px solid}\"]\n            }] }\n];\n/** @nocollapse */\nContentViewComponent.ctorParameters = () => [\n    { type: ContentViewService },\n    { type: NgbCarouselConfig },\n    { type: ContentBoxTabsService },\n    { type: RodmanCoreService },\n    { type: Router }\n];\nif (false) {\n    /** @type {?} */\n    ContentViewComponent.prototype.contentPageUrl;\n    /** @type {?} */\n    ContentViewComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentViewComponent.prototype.contentData;\n    /** @type {?} */\n    ContentViewComponent.prototype.page;\n    /** @type {?} */\n    ContentViewComponent.prototype.getAllAd;\n    /** @type {?} */\n    ContentViewComponent.prototype.dataFetch;\n    /** @type {?} */\n    ContentViewComponent.prototype.displayDefault;\n    /** @type {?} */\n    ContentViewComponent.prototype.contentDataView;\n    /** @type {?} */\n    ContentViewComponent.prototype.selectedContentView;\n    /** @type {?} */\n    ContentViewComponent.prototype.loading;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentViewComponent.prototype.ViewContentService;\n    /** @type {?} */\n    ContentViewComponent.prototype.ContentBoxTabService;\n    /** @type {?} */\n    ContentViewComponent.prototype.RodmanCoreService;\n    /** @type {?} */\n    ContentViewComponent.prototype.Router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-dynamic-view.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentDynamicViewComponent {\n    /**\n     * @param {?} sanitizer\n     * @param {?} RodmanCoreService\n     * @param {?} Router\n     */\n    constructor(sanitizer, RodmanCoreService, Router) {\n        this.sanitizer = sanitizer;\n        this.RodmanCoreService = RodmanCoreService;\n        this.Router = Router;\n        this.ContentInterface = [];\n        this.select = new EventEmitter();\n        this.getAllAd = [];\n        // super(sanitizer,RodmanCoreService,Router);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n    /**\n     * @param {?} ContentInterface\n     * @param {?} ContentAdsInterface\n     * @return {?}\n     */\n    selectView(ContentInterface, ContentAdsInterface) {\n        this.select.emit(ContentInterface);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    extractNameFromJson(obj) {\n        obj = JSON.parse(obj);\n        return obj.name + ' ' + obj.title;\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    videoURL(url) {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        // return data.replace(/[^a-zA-Z0-9 ]/g, \"\")\n        return this.RodmanCoreService.safeHtml(data);\n    }\n}\nContentDynamicViewComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-dynamic-view',\n                template: ``,\n                styles: [\".line{border-top:1px solid}.releted_nws{float:right;width:100%;max-width:275px;padding-top:10px}.releted_post{padding-top:15px}\"]\n            }] }\n];\n/** @nocollapse */\nContentDynamicViewComponent.ctorParameters = () => [\n    { type: DomSanitizer },\n    { type: RodmanCoreService },\n    { type: Router }\n];\nContentDynamicViewComponent.propDecorators = {\n    ContentInterface: [{ type: Input }],\n    ContentAdsInterface: [{ type: Input }],\n    select: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    ContentDynamicViewComponent.prototype.ContentInterface;\n    /** @type {?} */\n    ContentDynamicViewComponent.prototype.ContentAdsInterface;\n    /** @type {?} */\n    ContentDynamicViewComponent.prototype.select;\n    /** @type {?} */\n    ContentDynamicViewComponent.prototype.getAllAd;\n    /** @type {?} */\n    ContentDynamicViewComponent.prototype.viewAdRender;\n    /** @type {?} */\n    ContentDynamicViewComponent.prototype.sanitizer;\n    /** @type {?} */\n    ContentDynamicViewComponent.prototype.RodmanCoreService;\n    /** @type {?} */\n    ContentDynamicViewComponent.prototype.Router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-infographics.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentInfographicsComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentInfographicsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-infographics',\n                template: \"<div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n    <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n    \\n    <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n        <div class=\\\"col-md-8 col-sm-8\\\">\\n    \\n            <div *ngIf=\\\"ContentInterface\\\">\\n                <div class=\\\"container mb-3 mt-4\\\" id=\\\"infographics\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                    <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                    <h1 id=\\\"default\\\">{{contentData.title}}</h1>\\n                    <h5>{{contentData.summary}}</h5>\\n                    <div class=\\\" col-sm-12 col-md-12 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1\\\">\\n                        <b>{{ extractNameFromJson(contentData.author_name) }} {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                    </div>\\n\\n                    <div class=\\\"col-sm-12 col-md-12\\\" [innerHtml]=\\\"contentData.body\\\"></div>\\n                    <div class=\\\"col-sm-12 col-md-12\\\" >\\n                        <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale mb-2\\\">\\n                    </div>\\n\\n                </div>                   \\n            </div>  \\n    \\n        </div>\\n        <div class=\\\"col-md-2 col-sm-2 mt-4\\\">\\n          \\n        </div>     \\n    </div>   -->\\n    \\n\\n\\n    <div class=\\\"container-fluid\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div >\\n                       <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n                    </div>\\n                </div>\\n                <div class=\\\"col-8 mt-5 \\\">\\n                    <div *ngIf=\\\"ContentInterface\\\">\\n                        <div class=\\\"container mb-3 mt-4\\\" id=\\\"infographics\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                            <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                            <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                            <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n                            <div class=\\\" col-sm-12 col-md-12 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1\\\">\\n                                <b>{{ extractNameFromJson(contentData.author_name) }} {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                            </div>\\n        \\n                            <div class=\\\"col-sm-12 col-md-12\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>\\n                            <div class=\\\"col-sm-12 col-md-12\\\" >\\n                                <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale mb-2\\\">\\n                            </div>\\n                            <div class=\\\"col-sm-12 col-md-12\\\" >\\n                                <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>\\n                                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n                            </div>\\n        \\n                        </div>                   \\n                    </div> \\n                </div>\\n        \\n                <div class=\\\"col\\\">\\n                    <div >\\n                        <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n                    </div>\\n                </div>\\n            </div>   \\n        </div>\\n\\n\\n\\n    <!-- <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n        <div class=\\\"col-md-6 col-sm-offset-6\\\" >\\n            <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>\\n        </div>\\n        <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n    </div> -->\\n    \\n    \\n    \\n    <!-- <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n        <div class=\\\"col-md-1 col-sm-1\\\"></div>\\n        <div class=\\\"col-md-10 col-sm-offset-10\\\" >\\n            <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n        </div>\\n        <div class=\\\"col-md-1 col-sm-1\\\"></div> \\n    </div>    -->\\n        \\n        <!-- Related Content -->\\n    <!-- <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\" >\\n        <div class=\\\"col-sm-2 col-md-2\\\" ></div>\\n        <div class=\\\"col-sm-6 col-md-6\\\" >\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n        </div>\\n        <div class=\\\"col-sm-4 col-md-4\\\" ></div>    \\n    </div>   -->\",\n                styles: [`\n    .line{\n      border-top: 1px solid;\n    }\n  `]\n            }] }\n];\nContentInfographicsComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentInfographicsComponent.prototype.ads;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-search/content-search.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentSearchService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @return {?}\n     */\n    refineContentList(magazineId) {\n        return this.HttpClient.post(apiURL + 'contentsController/getContentType', { magazineId: magazineId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n    /**\n     * @param {?} search\n     * @param {?} page\n     * @param {?} limit\n     * @param {?} magazineId\n     * @param {?} searchDateFrom\n     * @param {?} searchDateTo\n     * @param {?} contentTypeId\n     * @return {?}\n     */\n    SearchContent(search, page, limit, magazineId, searchDateFrom, searchDateTo, contentTypeId) {\n        return this.HttpClient.post(apiURL + 'contentsController/getSearchContent', { search: search, page: page, limit: limit, magazineId: magazineId, searchDateFrom: searchDateFrom, searchDateTo: searchDateTo, contentTypeId: contentTypeId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n    /**\n     * @param {?} search\n     * @param {?} page\n     * @param {?} limit\n     * @param {?} magazineId\n     * @param {?} searchDateFrom\n     * @param {?} searchDateTo\n     * @param {?} contentTypeId\n     * @return {?}\n     */\n    SearchCompany(search, page, limit, magazineId, searchDateFrom, searchDateTo, contentTypeId) {\n        return this.HttpClient.post(apiURL + 'contentsController/getSearchBgCompanies', { search: search, page: page, limit: limit, magazineId: magazineId, searchDateFrom: searchDateFrom, searchDateTo: searchDateTo, contentTypeId: contentTypeId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nContentSearchService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nContentSearchService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ ContentSearchService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentSearchService_Factory() { return new ContentSearchService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: ContentSearchService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentSearchService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentSearchService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-search/content-search.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentSearchComponent {\n    /**\n     * @param {?} calendar\n     * @param {?} RodmanCoreService\n     * @param {?} Router\n     * @param {?} ContentSearchService\n     * @param {?} ActivatedRoute\n     */\n    constructor(calendar, RodmanCoreService, Router, ContentSearchService, ActivatedRoute) {\n        this.calendar = calendar;\n        this.RodmanCoreService = RodmanCoreService;\n        this.Router = Router;\n        this.ContentSearchService = ContentSearchService;\n        this.ActivatedRoute = ActivatedRoute;\n        this.page = 0;\n        this.limit = 10;\n        this.anySlug = '';\n        this.slugCheck = false;\n        this.contentList = [];\n        this.getAllAd = [];\n        this.loading1 = true;\n        this.loading2 = true;\n        this.loadMoreCheck = true;\n        this.searchFiled = 'all';\n        this.selectedProduct = 'all';\n        this.fromDate = calendar.getToday();\n        this.toDate = calendar.getNext(calendar.getToday(), 'd', 10);\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationEnd) {\n                this.routeUrl = event.url;\n                this.contentList = [];\n                this.ActivatedRoute.params.subscribe((/**\n                 * @param {?} params\n                 * @return {?}\n                 */\n                params => {\n                    this.page = 0;\n                    this.anySlug = params['any'];\n                    this.searchSlug = params['slug'];\n                }));\n                this.getSearchData();\n            }\n        }));\n        this.ActivatedRoute.data.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.magazineId = data.magazineId;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.magazineId == 1) {\n            this.staticUrl = 'knowledge-center/';\n        }\n        this.getRefineData();\n        this.getPageAds();\n        //   this.ActivatedRoute.params.subscribe(params => {\n        //     this.page=0;\n        //     this.anySlug = params['any'];\n        //     this.searchSlug = params['slug'];   \n        //  });\n        //  this.getSearchData();\n        //  this.getRefineData();  \n    }\n    /**\n     * @return {?}\n     */\n    selectData() {\n        if (this.refineContentList) {\n            this.getRefineData();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getRefineData() {\n        this.ContentSearchService.refineContentList(this.magazineId).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.refineContentList = data['country'];\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    searchSelectFilter() {\n        // this.searchFiled=(this.searchSlug!='') ? this.searchSlug : 'all' ;\n        // if(this.searchFiled==='undefined' || this.searchFiled==''){\n        //   this.searchFiled=this.searchSlug;\n        // }\n        this.page = 0;\n        if ((this.selectedProduct === 'undefined' || this.selectedProduct == '')) {\n            this.selectedProduct = \"all\";\n        }\n        this.Router.navigateByUrl('/contents/searchcontent/' + this.selectedProduct + '/' + this.searchFiled);\n        // this.getSearchData();\n    }\n    /**\n     * @return {?}\n     */\n    searchDateFilter() {\n        this.page = 0;\n        this.getSearchData();\n    }\n    /**\n     * @return {?}\n     */\n    searchTextFilter() {\n        this.page = 0;\n        if (this.searchFiled === 'undefined' || this.searchFiled == '') {\n            this.searchFiled = this.searchSlug;\n            this.anySlug = 'all';\n        }\n        this.Router.navigateByUrl('/contents/searchcontent/' + this.anySlug + '/' + this.searchFiled);\n    }\n    /**\n     * @return {?}\n     */\n    getSearchData() {\n        if (this.loadMoreCheck) {\n            this.ContentSearchService.SearchCompany(this.searchSlug, this.page, this.limit, this.magazineId, this.dateFrom, this.dateTo, this.selectedProduct).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            (data) => {\n                this.companyDataList = data['bgTopCompanies'];\n                this.comapnyCategory = data['bgCategories'];\n                this.micrositeCompany = this.companyDataList.filter((/**\n                 * @param {?} map\n                 * @return {?}\n                 */\n                function (map) {\n                    return map.has_featured_mircosite_listing == 1;\n                }));\n                this.featuredComapny = this.companyDataList.filter((/**\n                 * @param {?} map\n                 * @return {?}\n                 */\n                function (map) {\n                    return map.has_featured_mircosite_listing == 0;\n                }));\n            }));\n            this.loading2 = false;\n        }\n        this.selectedProduct = (this.selectedProduct == 'all') ? \"\" : this.selectedProduct;\n        this.ContentSearchService.SearchContent(this.searchSlug, this.page, this.limit, this.magazineId, this.dateFrom, this.dateTo, this.selectedProduct).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.putContentList = data['data'];\n            for (let content of this.putContentList) {\n                this.contentList.push(content);\n            }\n            this.page = data['page'] + 1;\n        }));\n        // setTimeout(function(){\n        //   this.loading1 = false;\n        // },6000);\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.loading1 = false;\n        }), 10000);\n    }\n    /**\n     * @return {?}\n     */\n    spinnerHide() {\n    }\n    /**\n     * @return {?}\n     */\n    loadMoreData() {\n        this.loading1 = true;\n        this.loadMoreCheck = false;\n        this.getSearchData();\n    }\n    /**\n     * @return {?}\n     */\n    getPageAds() {\n        this.RodmanCoreService.getAllAdst(this.magazineId).subscribe(((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.getAllAd = data;\n            this.viewAdRender = 1;\n        })));\n    }\n    // Date Option\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    onDateSelection(date) {\n        if (!this.fromDate && !this.toDate) {\n            this.fromDate = date;\n        }\n        else if (this.fromDate && !this.toDate && date.after(this.fromDate)) {\n            this.toDate = date;\n        }\n        else {\n            this.toDate = null;\n            this.fromDate = date;\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isHovered(date) {\n        return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isInside(date) {\n        return date.after(this.fromDate) && date.before(this.toDate);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isRange(date) {\n        return date.equals(this.fromDate) || date.equals(this.toDate) || this.isInside(date) || this.isHovered(date);\n    }\n}\nContentSearchComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-search',\n                template: \"<div class=\\\"col-md-12 col-sm-12 text-center\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8 mt-5\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-4 col-sm-4 \\\"> <h6><b>Search For:</b></h6> </div>\\n                                <div class=\\\"col-md-6 col-sm-6 text-left \\\"> \\n                                    <input class=\\\"form-cotrol\\\" id=\\\"searchFiled\\\" (input)=\\\"searchFiled=$event.target.value\\\" type=\\\"text\\\" value=\\\"{{searchSlug}}\\\" >\\n                                    <!-- <input #searchTextFiled type=\\\"text\\\" value=\\\"{{searchSlug}}\\\" /> -->\\n                                </div>\\n                                <div class=\\\"col-md-2 col-sm-2 \\\"> \\n                                    <button (click)=searchTextFilter()>Search</button>\\n                                    <!-- <button (click)=\\\"searchTextFiled(searchTextFiled.value)\\\" >Search</button> -->\\n                \\n                                    </div>\\n                            </div><br>  \\n                \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-4 col-sm-4 \\\"> <h6><b>Refine by Dates:</b></h6> </div>\\n                                <div class=\\\"col-md-6 col-sm-6 text-left\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-sm-6 col-md-6\\\">\\n                                            From : <br> \\n                                            <input type=\\\"date\\\" class=\\\"form-control\\\"  id=\\\"dateFrom\\\" (input)=\\\"dateFrom=$event.target.value\\\">\\n                                        </div>\\n                                        <div class=\\\"col-sm-6 col-md-6\\\">\\n                                            To : <br> \\n                                            <input type=\\\"date\\\" class=\\\"form-control\\\"  id=\\\"dateTo\\\" (input)=\\\"dateTo=$event.target.value\\\">\\n                                        </div>\\n                                    </div>     \\n                                </div>\\n                                <div class=\\\"col-md-2 col-sm-2 \\\"> \\n                                    <button (click)=searchDateFilter()>Search</button> \\n                                </div>\\n                            </div><br>\\n                \\n                            <div class=\\\"row mb-2 border-bottom\\\">\\n                                <div class=\\\"col-md-4 col-sm-4 \\\"> <h6><b>Refine By Content:</b></h6> </div>\\n                                <div class=\\\"col-md-8 col-sm-8 text-left \\\"> \\n                                    <select class=\\\"form-cotrol\\\"  (input)=\\\"selectedProduct=$event.target.value\\\" (click)=\\\"selectData()\\\" (change)=searchSelectFilter()>\\n                                            <option [value]=\\\"\\\">All</option>\\n                                            <option *ngFor=\\\"let SelectOption of refineContentList;let i=index\\\" [value]=\\\"SelectOption.id\\\" [selected]=\\\"SelectOption.id==anySlug\\\">\\n                                                {{SelectOption.tag.replace('_', ' ') | titlecase}}</option>\\n                \\n                                    </select>\\n                                </div><br>\\n                            </div><br>\\n                \\n                \\n                            <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading2\\\">\\n                                <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                                    <span class=\\\"sr-only\\\">Loading...</span>\\n                                </div>\\n                            </div>\\n                                        <!-- Buyer Guide -->\\n                            <div class=\\\" mb-3 mt-4 border-bottom\\\" *ngIf=\\\"micrositeCompany?.length > 0 \\\" >\\n                                <div class=\\\"mb-3\\\"><h2>Buyers Guide Companies</h2></div>                \\n                                <div *ngIf=\\\"micrositeCompany?.length > 0\\\">\\n                                    <div class=\\\"\\\"><h3>Microsite Companies</h3></div> \\n                                    <div *ngFor=\\\"let microsite of micrositeCompany|slice:0:5;let i = index\\\">\\n                                        <a [routerLink]=\\\"[microsite.viewUrl]\\\">{{microsite.title}}</a>\\n                                    </div>\\n                                </div>            \\n                                <div *ngIf=\\\"featuredComapny?.length > 0\\\">\\n                                    <div class=\\\"\\\"><h3>Featured Companies</h3></div> \\n                                    <div *ngFor=\\\"let featured of featuredComapny|slice:0:5; let i = index\\\">\\n                                        <a [routerLink]=\\\"[featured.viewUrl]\\\">{{featured.title}}</a>\\n                                    </div>\\n                                </div>        \\n                            </div>\\n                    \\n                            <!-- Buyer Guide Categories -->\\n                            <div class=\\\"container mb-3 mt-4 border-bottom\\\"  *ngIf=\\\"comapnyCategory?.length > 0\\\">                    \\n                                <div><h3>Buyers Guide Categories</h3></div> \\n                \\n                                <div *ngFor=\\\"let category of comapnyCategory;let i = index\\\">\\n                                    <!-- <a [routerLink]=\\\"[category.viewUrl]\\\">{{category.tag}}</a> -->\\n                                    <p>{{category.tag}}</p>\\n                                </div>\\n                            </div>\\n                \\n                \\n                            <!-- Content List-->\\n                            <div class=\\\"container mb-3 mt-4\\\"  *ngIf=\\\"contentList?.length > 0\\\">\\n                                <div class=\\\"border-bottom\\\" *ngFor=\\\"let content of contentList;let i = index\\\">                \\n                                    <div class=\\\"col-md-12 col-sm-12 mt-1\\\">\\n                                        <span *ngFor=\\\"let taxonomy of content.taggedTaxonomy.KNOWLEDGE_CENTER_TAXONOMY; let j =index\\\" >\\n                                            <span *ngIf=\\\"j\\\"> | </span>\\n                                            <a *ngIf=\\\"magazineId != 1\\\" [routerLink]=\\\"['/'+taxonomy.url]\\\"  > {{taxonomy.tag}}   </a> \\n                                            <a *ngIf=\\\"magazineId == 1\\\" [routerLink]=\\\"['/'+staticUrl+taxonomy.url]\\\"  > {{taxonomy.tag}}</a>\\n                                        </span>\\n                                    </div> \\n                                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                                       \\n                                        <h4 class=\\\"mt-2\\\"><a  [routerLink]=\\\"[content.viewUrl]\\\"><b>{{content.title}}</b></a></h4> \\n                                        <h6 class=\\\"mt-3\\\">{{content.summary}}</h6>\\n                                        <small>{{ content.publish_date| date : \\\"MMM dd , yyyy\\\"}}</small>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                \\n                            <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading1\\\">\\n                                <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                                    <span class=\\\"sr-only\\\">Loading...</span>\\n                                </div>\\n                            </div>\\n                \\n                            <div class=\\\"container mt-5 mb-3\\\"  *ngIf=\\\"contentList?.length > 0\\\">\\n                                <div class=\\\"row\\\"> \\n                                    <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n                                        <div class=\\\"col-md-4 col-sm-4\\\">    <button class=\\\"text-center button\\\"  (click)=\\\"loadMoreData()\\\">Load More</button></div>\\n                                    <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n                                </div>   \\n                            </div>\\n                </div>\\n                <div class=\\\"col-md-4 mt-5\\\">\\n                    <div class=\\\"mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\",\n                styles: [\".border-bottom{border-bottom:1px solid #000!important}.border-top{border-top:1px solid #000!important}.form-group.hidden{width:0;margin:0;border:none;padding:0}.custom-day{text-align:center;padding:.185rem .25rem;display:inline-block;height:2rem;width:2rem}.custom-day.focused{background-color:#e6e6e6}.custom-day.range,.custom-day:hover{background-color:#0275d8;color:#fff}.custom-day.faded{background-color:rgba(2,117,216,.5)}\"]\n            }] }\n];\n/** @nocollapse */\nContentSearchComponent.ctorParameters = () => [\n    { type: NgbCalendar },\n    { type: RodmanCoreService },\n    { type: Router },\n    { type: ContentSearchService },\n    { type: ActivatedRoute }\n];\nif (false) {\n    /** @type {?} */\n    ContentSearchComponent.prototype.hoveredDate;\n    /** @type {?} */\n    ContentSearchComponent.prototype.fromDate;\n    /** @type {?} */\n    ContentSearchComponent.prototype.toDate;\n    /** @type {?} */\n    ContentSearchComponent.prototype.search;\n    /** @type {?} */\n    ContentSearchComponent.prototype.page;\n    /** @type {?} */\n    ContentSearchComponent.prototype.limit;\n    /** @type {?} */\n    ContentSearchComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentSearchComponent.prototype.searchDateFrom;\n    /** @type {?} */\n    ContentSearchComponent.prototype.searchDateTo;\n    /** @type {?} */\n    ContentSearchComponent.prototype.contentTypeId;\n    /** @type {?} */\n    ContentSearchComponent.prototype.refineContentList;\n    /** @type {?} */\n    ContentSearchComponent.prototype.routeUrl;\n    /** @type {?} */\n    ContentSearchComponent.prototype.anySlug;\n    /** @type {?} */\n    ContentSearchComponent.prototype.searchSlug;\n    /** @type {?} */\n    ContentSearchComponent.prototype.slugCheck;\n    /** @type {?} */\n    ContentSearchComponent.prototype.micrositeCompany;\n    /** @type {?} */\n    ContentSearchComponent.prototype.featuredComapny;\n    /** @type {?} */\n    ContentSearchComponent.prototype.comapnyCategory;\n    /** @type {?} */\n    ContentSearchComponent.prototype.contentList;\n    /** @type {?} */\n    ContentSearchComponent.prototype.putContentList;\n    /** @type {?} */\n    ContentSearchComponent.prototype.storeSlug;\n    /** @type {?} */\n    ContentSearchComponent.prototype.getAllAd;\n    /** @type {?} */\n    ContentSearchComponent.prototype.viewAdRender;\n    /** @type {?} */\n    ContentSearchComponent.prototype.loading1;\n    /** @type {?} */\n    ContentSearchComponent.prototype.loading2;\n    /** @type {?} */\n    ContentSearchComponent.prototype.loadMoreCheck;\n    /** @type {?} */\n    ContentSearchComponent.prototype.searchFiled;\n    /** @type {?} */\n    ContentSearchComponent.prototype.dateFrom;\n    /** @type {?} */\n    ContentSearchComponent.prototype.dateTo;\n    /** @type {?} */\n    ContentSearchComponent.prototype.selectedProduct;\n    /** @type {?} */\n    ContentSearchComponent.prototype.staticUrl;\n    /** @type {?} */\n    ContentSearchComponent.prototype.companyDataList;\n    /** @type {?} */\n    ContentSearchComponent.prototype.calendar;\n    /** @type {?} */\n    ContentSearchComponent.prototype.RodmanCoreService;\n    /** @type {?} */\n    ContentSearchComponent.prototype.Router;\n    /** @type {?} */\n    ContentSearchComponent.prototype.ContentSearchService;\n    /** @type {?} */\n    ContentSearchComponent.prototype.ActivatedRoute;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-related/content-related.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentRelatedService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} contentId\n     * @return {?}\n     */\n    getRelatedContent(magazineId, contentId) {\n        return this.HttpClient.post(apiURL + 'taxonomysController/getReleatedContent', { magazineId: magazineId, contentId: contentId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nContentRelatedService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nContentRelatedService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ ContentRelatedService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentRelatedService_Factory() { return new ContentRelatedService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: ContentRelatedService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentRelatedService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentRelatedService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-related/content-related.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentRelatedComponent {\n    /**\n     * @param {?} ContentRelatedService\n     */\n    constructor(ContentRelatedService) {\n        this.ContentRelatedService = ContentRelatedService;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ContentRelatedService.getRelatedContent(this.magazineId, this.contentId).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.relatedContentData = data['data'];\n            this.relatedContentData = this.relatedContentData.slice(0, 5);\n        }));\n    }\n}\nContentRelatedComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-related',\n                inputs: ['magazineId', 'contentId'],\n                template: \"\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"bg-primary border-primary align-center \\\" *ngIf=\\\"relatedContentData?.length > 0\\\">\\n        <p class=\\\"content-color\\\" *ngIf=\\\"!(heading)\\\">RELATED CONTENT</p>\\n        <p class=\\\"content-color\\\" *ngIf=\\\"(heading)\\\">{{heading}}</p>\\n    </div> \\n    <ul class=\\\"change-style\\\" *ngIf=\\\"relatedContentData?.length > 0\\\">\\n        <li *ngFor=\\\"let content of relatedContentData\\\"><a [routerLink]=\\\"[content.viewUrl]\\\">{{content.title}} </a></li>            \\n    </ul>\\n</div>\",\n                styles: [\".content-color{color:#fff!important;text-align:center;margin-bottom:.5rem;font-family:Montserrat,-apple-system,system-ui,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;font-weight:501;padding:5px}.change-style li a{font-weight:400;font-size:14px}.change-style{border:1px solid;background:#f6f6f6}.border-primary{border:1px solid}\"]\n            }] }\n];\n/** @nocollapse */\nContentRelatedComponent.ctorParameters = () => [\n    { type: ContentRelatedService }\n];\nContentRelatedComponent.propDecorators = {\n    heading: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentRelatedComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentRelatedComponent.prototype.contentId;\n    /** @type {?} */\n    ContentRelatedComponent.prototype.heading;\n    /** @type {?} */\n    ContentRelatedComponent.prototype.relatedContentData;\n    /** @type {?} */\n    ContentRelatedComponent.prototype.ContentRelatedService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-suggest-slide-show/content-suggest-slide-show.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentSuggestSlideShowComponent {\n    /**\n     * @param {?} Router\n     * @param {?} config\n     * @param {?} ContentRelatedService\n     */\n    constructor(Router, config, ContentRelatedService) {\n        this.Router = Router;\n        this.ContentRelatedService = ContentRelatedService;\n        this.showNavigationArrows = true;\n        this.showNavigationIndicators = false;\n        this.loading = true;\n        config.interval = 3000;\n        // config.showNavigationArrows = false;\n        config.showNavigationIndicators = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        console.log(this.ads);\n        this.ContentRelatedService.getRelatedContent(this.magazineId, this.contentId).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.SlideShowData = data['data'];\n            this.loading = false;\n        }));\n    }\n}\nContentSuggestSlideShowComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-suggest-slide-show',\n                inputs: ['magazineId', 'contentId'],\n                template: \"<!--  a[index] !== void 0 -->\\n<div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n\\n\\n<ngb-carousel *ngIf=\\\"(SlideShowData?.length > 0)  && (!loading)\\\"> \\n \\n        <ng-template ngbSlide *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(0)\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData.hasOwnProperty(0)\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[0].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[0].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[0].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>\\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData && (SlideShowData.hasOwnProperty(1))\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[1].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[1].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[1].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>\\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData && (SlideShowData.hasOwnProperty(2))\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[2].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[2].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[2].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>       \\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(3)\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[3].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[3].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[3].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>                \\n            </div>\\n        </ng-template>\\n\\n\\n\\n        <ng-template ngbSlide *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(4)\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(4)\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[4].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[4].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[4].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>\\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(5)\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[5].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[5].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[5].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>   \\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(6)\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[6].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[6].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[6].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>\\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(7)\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[7].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[7].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[7].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>                    \\n            </div>\\n        </ng-template>\\n\\n        <ng-template ngbSlide *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(8)\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(8)\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[8].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[8].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[8].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>   \\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(9)\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[9].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[9].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[9].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>  \\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(10)\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[10].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[10].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[10].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>  \\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"SlideShowData && SlideShowData.hasOwnProperty(11)\\\"> \\n                    <a  [routerLink]=\\\"['/'+SlideShowData[11].viewUrl]\\\"  > \\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img [src]=\\\"SlideShowData[11].primary_image_main\\\" alt=\\\"No Image\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\">\\n                            <p>{{SlideShowData[11].title}}</p>\\n                        </div>\\n                    </a>\\n                </div>                      \\n            </div>\\n        </ng-template>\\n\\n</ngb-carousel>  \",\n                providers: [NgbModule, NgbCarouselConfig],\n                styles: [\"img{max-height:250px}\"]\n            }] }\n];\n/** @nocollapse */\nContentSuggestSlideShowComponent.ctorParameters = () => [\n    { type: Router },\n    { type: NgbCarouselConfig },\n    { type: ContentRelatedService }\n];\nContentSuggestSlideShowComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentSuggestSlideShowComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentSuggestSlideShowComponent.prototype.contentId;\n    /** @type {?} */\n    ContentSuggestSlideShowComponent.prototype.ads;\n    /** @type {?} */\n    ContentSuggestSlideShowComponent.prototype.showNavigationArrows;\n    /** @type {?} */\n    ContentSuggestSlideShowComponent.prototype.showNavigationIndicators;\n    /** @type {?} */\n    ContentSuggestSlideShowComponent.prototype.SlideShowData;\n    /** @type {?} */\n    ContentSuggestSlideShowComponent.prototype.loading;\n    /** @type {?} */\n    ContentSuggestSlideShowComponent.prototype.Router;\n    /** @type {?} */\n    ContentSuggestSlideShowComponent.prototype.ContentRelatedService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-box-tabs/content-box-tabs.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentBoxTabsComponent {\n    /**\n     * @param {?} ContentBoxTabsService\n     * @param {?} Router\n     */\n    constructor(ContentBoxTabsService, Router) {\n        this.ContentBoxTabsService = ContentBoxTabsService;\n        this.Router = Router;\n        this.currentJustify = 'justified';\n        this.loading = true;\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationEnd) {\n                this.currentURL = event.url;\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ContentBoxTabsService.getTopRightWidget(this.magazineId, this.TabOne).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.contentBoxTabOne = data['data'];\n            this.tabOneHeading = data['contentType'];\n        }));\n        this.ContentBoxTabsService.getTopRightWidget(this.magazineId, this.TabTwo).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.contentBoxTabTwo = data['data'];\n            this.tabTwoheading = data['contentType'];\n            this.loading = false;\n        }));\n    }\n}\nContentBoxTabsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-box-tabs',\n                inputs: ['magazineId', 'TabOne', 'TabTwo'],\n                template: \"\\n\\n\\n\\n<div class=\\\"d-flex justify-content-center mt-5 mb-5 loader-height\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n\\n    <ngb-tabset [justify]=\\\"currentJustify\\\" *ngIf=\\\"!loading\\\">\\n        <ngb-tab  *ngIf=\\\"tabOneHeading && tabOneHeading[0]\\\" title=\\\"{{tabOneHeading[0].slug.replace('-', ' ')  | uppercase }}\\\">\\n            <ng-template ngbTabContent>\\n                \\n                <div *ngFor=\\\"let tabOne of contentBoxTabOne\\\">\\n                    <div class=\\\"row allign border-bottom\\\" >\\n                        <h6><a [routerLink]=\\\"[tabOne.viewUrl]\\\">  <div [innerHTML]=\\\"tabOne.title\\\"> </div> </a></h6><br>\\n                        <p *ngIf=\\\"tabOne.firstName\\\"><small>By <b>{{tabOne.firstName}} {{tabOne.lastName}}</b></small></p>\\n                    </div>                      \\n                </div>\\n                <!-- If You Want Main Content-1 Ads -->\\n                <!-- <div *ngIf=\\\"showAds == 'yes'\\\">\\n                    <CoreLib-ads-home-widget  magazineId={{magazineId}} no=\\\"1\\\" location={{currentURL}} target='breaking-news'></CoreLib-ads-home-widget>\\n                </div> -->\\n\\n            </ng-template>\\n        </ngb-tab>\\n\\n    \\n        <ngb-tab>\\n            <ng-template ngbTabTitle *ngIf=\\\"tabTwoheading && tabTwoheading[0]\\\">{{tabTwoheading[0].slug.replace('-', ' ')  | uppercase }}</ng-template>\\n            <ng-template ngbTabContent>\\n\\n                <div *ngFor=\\\"let tabTwo of contentBoxTabTwo\\\">\\n                    <div class=\\\"row allign border-bottom\\\">\\n                        <h6><a [routerLink]=\\\"[tabTwo.viewUrl]\\\"><div [innerHTML]=\\\"tabTwo.title\\\"></div></a></h6> <br>\\n                        <p *ngIf=\\\"tabTwo.firstName\\\"> <small>By <b>{{tabTwo.firstName}} {{tabTwo.lastName}}</b></small></p>\\n                    </div>                     \\n                </div> \\n                <!-- If You Want Main Content-1 Ads --> \\n                <!-- <div *ngIf=\\\"showAds == 'yes'\\\">\\n                    <CoreLib-ads-home-widget  magazineId={{magazineId}} no=\\\"1\\\" location={{currentURL}} target='feature'></CoreLib-ads-home-widget>\\n                </div> -->\\n\\n            </ng-template>\\n        </ngb-tab>\\n    </ngb-tabset> \\n\",\n                styles: [\".allign{margin:10px!important}.alignName{margin-left:10px!important}.loader-height{min-height:100px}.allign h6{margin-bottom:0!important;width:100%}\"]\n            }] }\n];\n/** @nocollapse */\nContentBoxTabsComponent.ctorParameters = () => [\n    { type: ContentBoxTabsService },\n    { type: Router }\n];\nContentBoxTabsComponent.propDecorators = {\n    showAds: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.showAds;\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.currentJustify;\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.contentBoxTabOne;\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.tabOneHeading;\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.contentBoxTabTwo;\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.tabTwoheading;\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.TabOne;\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.TabTwo;\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.loading;\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.currentURL;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentBoxTabsComponent.prototype.ContentBoxTabsService;\n    /** @type {?} */\n    ContentBoxTabsComponent.prototype.Router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/users/users-routing.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst routes$4 = [];\nclass UsersRoutingModule {\n}\nUsersRoutingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [RouterModule.forChild(routes$4)],\n                exports: [RouterModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/users/users-verify-email/users-verify-email.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass UsersVerifyEmailService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} userData\n     * @return {?}\n     */\n    UserDeatils(userData) {\n        /** @type {?} */\n        var data = {\n            magazineId: userData.magazineId,\n            id: userData.id,\n            firstName: userData.firstName,\n            lastName: userData.lastName,\n            password: userData.password,\n            formData: '',\n            maling_list: ''\n        };\n        return this.HttpClient.post(apiURL + 'usersController/usersRegistration', data, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} passKey\n     * @param {?} webUserName\n     * @return {?}\n     */\n    verifyUser(magazineId, passKey, webUserName) {\n        return this.HttpClient.post(apiURL + 'usersController/verification', { magazineId: magazineId, passKey: passKey, webUserName: webUserName }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nUsersVerifyEmailService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nUsersVerifyEmailService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ UsersVerifyEmailService.ngInjectableDef = ɵɵdefineInjectable({ factory: function UsersVerifyEmailService_Factory() { return new UsersVerifyEmailService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: UsersVerifyEmailService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UsersVerifyEmailService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    UsersVerifyEmailService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/users/users-verify-email/users-verify-email.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass UsersVerifyEmailComponent {\n    /**\n     * @param {?} formBuilder\n     * @param {?} UserVerifyEmailService\n     * @param {?} Router\n     */\n    constructor(formBuilder, UserVerifyEmailService, Router) {\n        this.formBuilder = formBuilder;\n        this.UserVerifyEmailService = UserVerifyEmailService;\n        this.Router = Router;\n        this.isModalShown = true;\n        this.object = {};\n        this.message = false;\n        this.showMsgRegistration = false;\n        this.cnfPasswordMessage = false;\n        this.newsLetterMessage = true;\n        this.newsLetterFormArray = [];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.UserVerifyEmailService.verifyUser(this.magazineId, this.passKey, this.email).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            if (data.status == \"success\" && data.message == \"Verification successfully\" && data.registerStatus == \"success\") {\n                this.userData = data['data'];\n                this.formData = data['formData'];\n                this.mailing_list = data['SUBSCRIBE_MAILING_LIST'];\n                this.isModalShown = true;\n                this.id = data['data'].id;\n            }\n            else if (data.registerStatus == \"IL\") {\n                this.message = true;\n                // this.isModalShown = true;\n                // this.userData = 'data ';\n            }\n        }));\n        this.verifyForm = this.formBuilder.group({\n            magazineId: ['', [Validators.required]],\n            id: ['', [Validators.required]],\n            // id:111,\n            firstName: ['', [Validators.required]],\n            lastName: ['', Validators.required],\n            password: ['', Validators.required],\n            cnfpassword: ['', Validators.required],\n            formData: this.object,\n            maling_list: this.formBuilder.array([], this.minSelectedCheckboxes(1)),\n        }, { validator: this.checkIfMatchingPasswords('password', 'cnfpassword') });\n    }\n    /**\n     * @return {?}\n     */\n    get verifyVal() {\n        return this.verifyForm.controls;\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    createObjectOverView(key, value) {\n        if (value) {\n            this.object[key] = value;\n        }\n        else {\n            delete this.object[key];\n        }\n    }\n    /**\n     * @return {?}\n     */\n    showModal() {\n        this.isModalShown = true;\n    }\n    /**\n     * @return {?}\n     */\n    hideModal() {\n        this.autoShownModal.hide();\n    }\n    /**\n     * @return {?}\n     */\n    onHidden() {\n        this.isModalShown = false;\n    }\n    /**\n     * @return {?}\n     */\n    onSubmit() {\n        this.submitted = true;\n        if (this.verifyForm.invalid) {\n            return;\n        }\n        this.UserVerifyEmailService.UserDeatils(this.verifyForm.value).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            if (data.status == \"success\" && data.message == \"Data updated successfully\") {\n                this.showMsgRegistration = true;\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.Router.navigate(['/']);\n                }), 5000);\n            }\n        }));\n    }\n    // CheckBox Mapping For Newsletter\n    /**\n     * @param {?} email\n     * @param {?} isChecked\n     * @return {?}\n     */\n    onChangeNewsLetter(email, isChecked) {\n        /** @type {?} */\n        const newsLetterFormArray = (/** @type {?} */ (this.verifyForm.controls.maling_list));\n        if (isChecked) {\n            newsLetterFormArray.push(new FormControl(email));\n            this.newsLetterMessage = false;\n        }\n        else {\n            /** @type {?} */\n            let index = newsLetterFormArray.controls.findIndex((/**\n             * @param {?} x\n             * @return {?}\n             */\n            x => x.value == email));\n            newsLetterFormArray.removeAt(index);\n            if (newsLetterFormArray.length) {\n                this.newsLetterMessage = false;\n            }\n            else {\n                this.newsLetterMessage = true;\n            }\n        }\n    }\n    // Confirm Password Function \n    /**\n     * @param {?} passwordKey\n     * @param {?} passwordConfirmationKey\n     * @return {?}\n     */\n    checkIfMatchingPasswords(passwordKey, passwordConfirmationKey) {\n        return (/**\n         * @param {?} group\n         * @return {?}\n         */\n        (group) => {\n            /** @type {?} */\n            let passwordInput = group.controls[passwordKey];\n            /** @type {?} */\n            let passwordConfirmationInput = group.controls[passwordConfirmationKey];\n            if (passwordInput.value !== passwordConfirmationInput.value) {\n                return passwordConfirmationInput.setErrors({ notEquivalent: true });\n            }\n            else {\n                return passwordConfirmationInput.setErrors(null);\n            }\n        });\n    }\n    //  Check Box Minimum One Select Validation\n    /**\n     * @param {?=} min\n     * @return {?}\n     */\n    minSelectedCheckboxes(min = 1) {\n        /** @type {?} */\n        const validator = (/**\n         * @param {?} formArray\n         * @return {?}\n         */\n        (formArray) => {\n            /** @type {?} */\n            const totalSelected = formArray.controls\n                .map((/**\n             * @param {?} control\n             * @return {?}\n             */\n            control => control.value))\n                .reduce((/**\n             * @param {?} prev\n             * @param {?} next\n             * @return {?}\n             */\n            (prev, next) => next ? prev + next : prev), 0);\n            return totalSelected >= min ? null : { required: true };\n        });\n        return validator;\n    }\n}\nUsersVerifyEmailComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-users-verify-email',\n                inputs: ['magazineId', 'passKey', 'email'],\n                template: \"<div class=\\\"container\\\">\\n        <div class=\\\"row description\\\">\\n         \\n        <div *ngIf=\\\"message\\\"> \\n                 <div class=\\\"text-center\\\"><h1>Invalid Link For Process</h1></div>\\n        </div>   \\n    \\n            <div *ngIf=\\\"isModalShown && userData\\\"  [config]=\\\"{backdrop: 'static',  keyboard: false,show: true }\\\"  (onHidden)=\\\"onHidden()\\\" bsModal #autoShownModal=\\\"bs-modal\\\"\\n            class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-auto-name\\\">\\n              <div class=\\\"modal-dialog modal-lg modal-md\\\">\\n                <div class=\\\"modal-content\\\">\\n                   <!-- <div class=\\\"modal-header\\\">\\n                     <h4 id=\\\"dialog-auto-name\\\" class=\\\"modal-title pull-left\\\"></h4>\\n                      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                      </button>\\n                  </div>  -->\\n                  <div class=\\\"modal-body\\\">\\n                      <h2>Please enter your details below to create your log-in credentials. You will only need to register once.</h2>\\n    \\n                      <div class=\\\"clearfix\\\"></div><br>\\n    \\n                      <div class=\\\"row\\\"  *ngIf=\\\"showMsgRegistration\\\">\\n                              <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\n                                      <p class=\\\"alert alert-success text-center\\\">You Have Update Details Please Login </p>\\n                              </div>\\n                      </div>\\n    \\n                      <form [formGroup]=\\\"verifyForm\\\" (ngSubmit)=\\\"onSubmit()\\\"> \\n                          <input type=\\\"hidden\\\" formControlName=\\\"magazineId\\\"  value=\\\"{{magazineId}}\\\" [ngModel]=\\\"magazineId\\\"> \\n                          <input type=\\\"hidden\\\" formControlName=\\\"id\\\"  value=\\\"{{id}}\\\" [ngModel]=\\\"id\\\"> \\n                            <!-- First And Last Name -->\\n                            <br><br>\\n                           <div class=\\\"row\\\">\\n                              <div class=\\\"col-sm-6 col-md-6\\\">\\n                                  <input type=\\\"text\\\" formControlName=\\\"firstName\\\" id=\\\"firstName\\\" placeholder=\\\"Enter First Name\\\" class=\\\"form-control required\\\" [ngClass]=\\\"{ 'is-invalid': submitted && verifyVal.firstName.errors}\\\" > \\n                                   <div *ngIf=\\\"submitted && verifyVal.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                          <div *ngIf=\\\"verifyVal.firstName.errors.required\\\">Field is required</div>\\n                                  </div> \\n                               </div> \\n                              \\n                                <div class=\\\"col-sm-6 col-md-6\\\"> \\n                                    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" id=\\\"lastName\\\" placeholder=\\\"Enter Last Name\\\" class=\\\"form-control required\\\" [ngClass]=\\\"{ 'is-invalid': submitted && verifyVal.lastName.errors}\\\">\\n                                    <div *ngIf=\\\"submitted && verifyVal.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"verifyVal.lastName.errors.required\\\">Field is required</div>\\n                                    </div> \\n                                </div> \\n                              \\n                          </div>   \\n                          <br> \\n                          \\n                            <!-- Password and Confirm Password -->\\n                           <div class=\\\"row\\\">\\n                              <div class=\\\"col-sm-6 col-md-6\\\">\\n                                  <input type=\\\"password\\\" formControlName=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Enter Password\\\" class=\\\"form-control required\\\" [ngClass]=\\\"{ 'is-invalid': submitted && verifyVal.password.errors}\\\">\\n                                  <div *ngIf=\\\"submitted && verifyVal.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                                          <div *ngIf=\\\"verifyVal.password.errors.required\\\">Field is required</div>\\n                                  </div>\\n                              </div> \\n                              <div class=\\\"col-sm-6 col-md-6\\\">\\n                                  <input type=\\\"password\\\" formControlName=\\\"cnfpassword\\\" id=\\\"cnfpassword\\\" placeholder=\\\"Enter Confirm Password\\\"  class=\\\"form-control required\\\" [ngClass]=\\\"{ 'is-invalid': submitted && verifyVal.cnfpassword.errors}\\\">\\n                                  <div *ngIf=\\\"submitted && verifyVal.cnfpassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"verifyVal.cnfpassword.errors.required\\\">Field is required</div>\\n                                  </div>\\n                              </div>                                                \\n                          </div>  \\n                          <br> \\n                           \\n                          <!-- Newsletter  -->\\n                          <div class=\\\"row\\\">\\n                              <input type=\\\"hidden\\\" formControlName=\\\"maling_list\\\" value=\\\"1\\\" [ngModel]=\\\"1\\\">\\n                                <label class=\\\"col-md-12 col-sm -12\\\">\\n                                  <h4><b>Newsletter</b></h4>\\n                                </label>\\n                              \\n                                <div class=\\\"col-sm-12 col-md-12\\\" id=\\\"newsLetterMessage\\\" *ngIf=\\\"newsLetterMessage\\\"> \\n                                  <b>At Least One Option Must Be Selected :</b>\\n                                </div><br>\\n    \\n                                <div class=\\\"col-sm-6 col-md-6\\\" *ngFor=\\\"let newsbox of mailing_list;let n = index \\\">\\n                                  <label> {{newsbox.short_tag}} \\n                                      <input type=\\\"checkbox\\\"   (change)=\\\"onChangeNewsLetter(newsbox.id,$event.target.checked)\\\"> \\n                                  </label>                             \\n                                </div>\\n                          </div> \\n    \\n    \\n                           <!-- Professional OverView  -->\\n                          <div class=\\\"row\\\">\\n                              <input type=\\\"hidden\\\" formControlName=\\\"formData\\\">\\n                              <div  class=\\\"col-sm-6 col-md-6\\\" *ngFor='let category of formData'>\\n                                <div *ngIf=\\\"category.group_fields_title != 'Company Name' && category.group_fields_title != 'Summary' \\\">\\n                                  <label><b>{{category.group_fields_title}} </b></label>\\n                                  <select id={{category.group_fields_title}} class=\\\"form-control required\\\" (change)=\\\"createObjectOverView(category.group_fields_title,$event.target.value)\\\" required >\\n                                    <option value=\\\"\\\">Select {{category.group_fields_title}}</option>\\n                                    <option *ngFor=\\\"let subCategory of (category.option_data.split('$|$'))\\\" value=\\\"{{subCategory}}\\\">{{ subCategory }}</option>\\n                                  </select>\\n                                </div>\\n                              </div> \\n                          </div> \\n    \\n                          <br>\\n                          \\n                           <button class=\\\"btn btn-primary form-control\\\" type=\\\"submit\\\">Submit</button>\\n                      </form>                   \\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n        </div>\\n    </div>\\n    \\n    \\n    \\n    \\n    \\n    \\n    \",\n                styles: [\".description{min-height:500px}\"]\n            }] }\n];\n/** @nocollapse */\nUsersVerifyEmailComponent.ctorParameters = () => [\n    { type: FormBuilder },\n    { type: UsersVerifyEmailService },\n    { type: Router }\n];\nUsersVerifyEmailComponent.propDecorators = {\n    autoShownModal: [{ type: ViewChild, args: ['autoShownModal', { static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.magazineId;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.passKey;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.email;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.bsModal;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.isModalShown;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.userData;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.verifyForm;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.submitted;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.formData;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.mailing_list;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.id;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.object;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.message;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.showMsgRegistration;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.cnfPasswordMessage;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.newsLetterMessage;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.checkedList;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.newsLetterFormArray;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.autoShownModal;\n    /**\n     * @type {?}\n     * @private\n     */\n    UsersVerifyEmailComponent.prototype.formBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    UsersVerifyEmailComponent.prototype.UserVerifyEmailService;\n    /** @type {?} */\n    UsersVerifyEmailComponent.prototype.Router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/users/Components/user-profile/user-profile.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass UserProfileComponent {\n    /**\n     * @param {?} ActivatedRoute\n     */\n    constructor(ActivatedRoute) {\n        this.ActivatedRoute = ActivatedRoute;\n        this.message = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ActivatedRoute.data.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.magazineId = data.magazineId;\n            // console.log(this.magazineId)\n        }));\n        if (localStorage.getItem('authDetails' + this.magazineId)) {\n            /** @type {?} */\n            const data = JSON.parse(localStorage.getItem('authDetails' + this.magazineId));\n            this.message = true;\n        }\n        else {\n        }\n    }\n}\nUserProfileComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-user-profile',\n                template: \"<!-- \\n<div class=\\\"text-center\\\"><p> Core user-profile works!</p>\\n    <h3>Users Profile</h3>\\n</div>     -->\\n\\n\\n\\n\\n<div class=\\\"text-center\\\" *ngIf=\\\"message; else showLoginRequestMessage\\\">\\n    <h2>Hello You Are Login</h2>\\n</div> \\n    <ng-template #showLoginRequestMessage>\\n        <div class=\\\"text-center\\\" > <h2>Hello, please login to access the User app</h2></div>\\n    </ng-template>\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nUserProfileComponent.ctorParameters = () => [\n    { type: ActivatedRoute }\n];\nif (false) {\n    /** @type {?} */\n    UserProfileComponent.prototype.message;\n    /** @type {?} */\n    UserProfileComponent.prototype.magazineId;\n    /** @type {?} */\n    UserProfileComponent.prototype.mymsg;\n    /**\n     * @type {?}\n     * @private\n     */\n    UserProfileComponent.prototype.ActivatedRoute;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/users/Components/company-content-authenticate/company-content-authenticate.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CompanyContentAuthenticateComponent {\n    /**\n     * @param {?} Router\n     * @param {?} RodmanCoreService\n     */\n    constructor(Router, RodmanCoreService) {\n        this.Router = Router;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    downloadFile(filePath) {\n        /** @type {?} */\n        var newWindow = window.open(filePath);\n    }\n}\nCompanyContentAuthenticateComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-company-content-authenticate',\n                template: \"<div class=\\\"container\\\">\\n    <div class=\\\"border mt-5 mb-5\\\" >\\n            \\n        <p class=\\\"text-center mt-3\\\">This content is sponsored by:</p>\\n            <div  class=\\\"text-center\\\">\\n                <img  class=\\\"img-responsive\\\" name=\\\"companyLogo\\\" style=\\\"max-width: 350px;\\\" [src]=\\\"sendParentMessage.primary_image_main\\\">\\n            </div>\\n            <p class=\\\"text-center\\\" >\\n                <a [routerLink]=\\\"['/contents/viewwebsite/'+sendParentMessage.id]\\\">Visit the website</a>\\n            </p><br><br>\\n            <p class=\\\"text-center\\\" >{{ sendParentMessage.title }}</p><br><br>\\n            <hr>\\n            <div class=\\\"mt-3 text-center\\\">\\n                <h5 class=\\\"text-center\\\">Download today and learn more</h5>\\n            </div>\\n            \\n            <div class=\\\"col-sm-12 col-md-12\\\">\\n                <div class=\\\"col-sm-4 col-md-4\\\"></div>\\n                <div class=\\\"col-sm-8 col-md-8\\\">\\n                    <b>Email :</b> <br>\\n                    <input type=\\\"text\\\" class=\\\" text-center form-control\\\">\\n                </div>  \\n            </div>\\n\\n            <div class=\\\"text-center  mt-3 mb-3\\\">               \\n\\n                <ng-container *ngIf=\\\"link;else default\\\">\\n                    <button *ngIf=\\\"link\\\" class=\\\"download\\\" (click)=\\\"downloadFile(link)\\\"> Download Now</button>\\n                </ng-container>\\n                <ng-template #default>\\n                    <ng-container>\\n                        <button *ngIf=\\\"link\\\" class=\\\"download\\\">Request Info </button>\\n                    </ng-container>\\n                </ng-template>\\n                <!-- <button>Request Info</button> -->\\n            </div>\\n    </div>    \\n\\n</div>\\n\\n\",\n                styles: [\".download{background-color:#d9534f!important;border-color:#d43f3a;color:#fff;padding:2px}h5,p{font-weight:700}\"]\n            }] }\n];\n/** @nocollapse */\nCompanyContentAuthenticateComponent.ctorParameters = () => [\n    { type: Router },\n    { type: RodmanCoreService }\n];\nCompanyContentAuthenticateComponent.propDecorators = {\n    sendParentMessage: [{ type: Input }],\n    link: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    CompanyContentAuthenticateComponent.prototype.sendParentMessage;\n    /** @type {?} */\n    CompanyContentAuthenticateComponent.prototype.link;\n    /** @type {?} */\n    CompanyContentAuthenticateComponent.prototype.Router;\n    /** @type {?} */\n    CompanyContentAuthenticateComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/users/users.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// import { AuthenticationComponent } from './authentication/authentication.component';\nclass UsersModule {\n}\nUsersModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [UsersVerifyEmailComponent, UserProfileComponent, CompanyContentAuthenticateComponent],\n                imports: [\n                    CommonModule,\n                    UsersRoutingModule,\n                    HttpClientModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    NgbModule,\n                    ModalModule.forRoot(),\n                    RodmanORMModule,\n                    RouterModule\n                ],\n                providers: [CookieService],\n                exports: [UsersVerifyEmailComponent, UserProfileComponent, CompanyContentAuthenticateComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-default.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentDefaultComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentDefaultComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-default',\n                template: \"<div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n    <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n\\n                <div class=\\\"col-md-8\\\">\\n                    <div *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <div class=\\\"container mb-3 mt-4\\\" id=\\\"default\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                            <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                            <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                            <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n                            <!-- <ngb-carousel *ngIf=\\\"contentData.content_type_id != 2653\\\">\\n                                <ng-template ngbSlide>\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                        \\n                                <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                            </ngb-carousel> -->\\n                        \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                                    <b> <!-- {{ extractNameFromJson(contentData.author_name) }}  -->\\n                                        {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                                </div>\\n                            </div> \\n                            <div class=\\\"releted_nws\\\">\\n                                <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                            </div> \\n                            <div class=\\\"row_contian\\\">                                    \\n                                <div class=\\\"releted_post\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>                                \\n                                <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>     \\n                            </div>\\n                        </div>                   \\n                    </div>          \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <CoreLib-content-box-tabs  *ngFor=\\\"let contentData of ContentInterface\\\" magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n\\n\\n<div class=\\\"container-fluid\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div> -->\\n    <div  *ngIf=\\\"contentData.content_type_id != 2653\\\" >\\n        <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n    </div>\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div>  -->\\n</div>  \\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div></div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n            </div>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div ></div>\\n        </div>\\n    </div>   \\n</div>\\n\\n\\n\\n\\n\\n\\n\",\n                styles: [\".line{border-top:1px solid}.releted_nws{float:right;width:100%;max-width:275px;padding-top:10px}.releted_post{padding-top:15px}\"]\n            }] }\n];\nContentDefaultComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentDefaultComponent.prototype.ads;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-jobs.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentJobsComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentJobsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-jobs',\n                template: \"\\n<div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n    <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n    \\n    <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n        <div class=\\\"col-md-6 col-sm-6\\\">\\n    \\n            <div *ngIf=\\\"ContentInterface\\\">\\n                <div class=\\\"container mb-3 mt-4\\\" id=\\\"jobs\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                    <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                    <h1 id=\\\"default\\\">{{contentData.title}}</h1>\\n                    <h5>{{contentData.summary}}</h5>\\n                    <ngb-carousel>\\n                        <ng-template ngbSlide>\\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\"> </div>\\n                        </ng-template>\\n                \\n                        <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\"> </div>\\n                        </ng-template>\\n                    </ngb-carousel>\\n                \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                            <b>{{ extractNameFromJson(contentData.author_name) }} {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                        </div>\\n                    </div> \\n                    <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-7\\\" [innerHtml]=\\\"contentData.body\\\"></div>\\n\\n                    <div class=\\\"col-md-5\\\">\\n                        <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                    </div>\\n                \\n                    </div>\\n                </div>                   \\n            </div>  \\n    \\n        </div>\\n\\n        <div class=\\\"col-md-4 col-sm-4 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n            <div class=\\\"col-md-12 col-sm-12\\\">\\n            <div class=\\\"col-md-10 col-sm-10\\\">\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\">\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                </div>\\n                    <CoreLib-content-box-tabs magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>\\n                </div>\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n            </div> \\n        </div>     \\n    </div>   -->\\n    \\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n\\n                <div class=\\\"col-md-8\\\">\\n                    <div *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <div class=\\\"container mb-3 mt-4\\\" id=\\\"default\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                            <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                            <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                            <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n                            <!-- <ngb-carousel *ngIf=\\\"contentData.content_type_id != 2653\\\">\\n                                <ng-template ngbSlide>\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                        \\n                                <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                            </ngb-carousel> -->\\n                        \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                                    <b> <!-- {{ extractNameFromJson(contentData.author_name) }}  -->\\n                                        {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                                </div>\\n                            </div> \\n                            <!-- <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-7\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>                                \\n                                <div class=\\\"col-md-5\\\">\\n                                    <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                                </div>                            \\n                            </div> -->\\n                            <div class=\\\"releted_nws\\\">\\n                                <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                            </div> \\n                            <div class=\\\"row_contian\\\">                                    \\n                                <div class=\\\"releted_post\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>    \\n                                <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>\\n\\n                            </div>\\n                        </div>                   \\n                    </div>          \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <CoreLib-content-box-tabs  *ngFor=\\\"let contentData of ContentInterface\\\" magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n<!-- \\n\\n    <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n        <div class=\\\"col-md-6 col-sm-offset-6\\\" >\\n            <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>\\n        </div>\\n        <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n    </div> -->\\n    \\n    \\n    \\n    <div class=\\\"container-fluid\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n        <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div> -->\\n        <div >\\n            <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n        </div>\\n        <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div>  -->\\n    </div>   \\n        \\n        <!-- Related Content -->\\n    <!-- <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\" >\\n        <div class=\\\"col-sm-2 col-md-2\\\" ></div>\\n        <div class=\\\"col-sm-6 col-md-6\\\" >\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n        </div>\\n        <div class=\\\"col-sm-4 col-md-4\\\" ></div>    \\n    </div>   -->\\n\\n\\n \\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div></div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n            </div>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div ></div>\\n        </div>\\n    </div>   \\n</div>\",\n                styles: [\".line{border-top:1px solid}.releted_nws{float:right;width:100%;max-width:275px;padding-top:10px}.releted_post{padding-top:15px}\"]\n            }] }\n];\nContentJobsComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentJobsComponent.prototype.ads;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-feature.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentFeatureComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentFeatureComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-feature',\n                template: \"<div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n    <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n\\n                <div class=\\\"col-md-8\\\">\\n                    <div *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <div class=\\\"container mb-3 mt-4\\\" id=\\\"feature\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                            <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                            <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                            <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n                            <!-- <ngb-carousel *ngIf=\\\"contentData.content_type_id != 2653\\\">\\n                                <ng-template ngbSlide>\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                        \\n                                <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                            </ngb-carousel> -->\\n                        \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                                    <b> {{ extractNameFromJson(contentData.author_name) }} \\n                                        {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                                </div>\\n                            </div> \\n                            <!-- <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-7\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>                                \\n                                <div class=\\\"col-md-5\\\">\\n                                    <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                                </div>                            \\n                            </div> -->\\n                            <div class=\\\"releted_nws\\\">\\n                                    <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                                </div> \\n                            <div class=\\\"row_contian\\\">                                    \\n                                <div class=\\\"releted_post\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>  \\n                                <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>\\n                            </div>\\n                        </div>                   \\n                    </div>          \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <CoreLib-content-box-tabs  *ngFor=\\\"let contentData of ContentInterface\\\" magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n\\n\\n\\n\\n<!-- Slider Show -->\\n<div class=\\\"container-fluid\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div> -->\\n    <div  *ngIf=\\\"contentData.content_type_id != 2653\\\" >\\n        <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n    </div>\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div>  -->\\n</div>   \\n    \\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div></div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n            </div>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div ></div>\\n        </div>\\n    </div>   \\n</div>\",\n                styles: [\".line{border-top:1px solid}.releted_nws{float:right;width:100%;max-width:275px;padding-top:10px}.releted_post{padding-top:15px}\"]\n            }] }\n];\nContentFeatureComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentFeatureComponent.prototype.ads;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-video.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentVideoComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // if(this.ContentInterface[0].video[0].link_title == 'YouTube'){\n        // }else\n        switch (this.ContentInterface[0].video[0].link_title) {\n            case 'YouTube':\n                this.videoPath = 'https://www.youtube.com/embed/' + this.ContentInterface[0].video[0].link;\n                break;\n            case 'Vimeo':\n                this.videoPath = 'https://player.vimeo.com/video/' + this.ContentInterface[0].video[0].link;\n                break;\n            case 'BrightCove':\n                this.videoPath = '//players.brightcove.net/1160438696001/SJaEAUSpl_default/index.html?videoId=' + this.ContentInterface[0].video[0].link;\n                break;\n            default:\n                this.videoPath = 'https://www.youtube.com/embed/' + this.ContentInterface[0].video[0].link;\n                break;\n        }\n        this.videoPath = this.videoURL(this.videoPath);\n    }\n}\nContentVideoComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-video',\n                template: \"<div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n    <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n    <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n        <div class=\\\"col-md-6 col-sm-6\\\">\\n    \\n            <div *ngIf=\\\"ContentInterface\\\">\\n                <div class=\\\"container mb-3 mt-4\\\" id=\\\"video\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                    <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                    <h1 id=\\\"default\\\">{{contentData.title}}</h1>\\n                    <h5>{{contentData.summary}}</h5>\\n\\n                    <div class=\\\"row\\\">\\n                         <iframe width=\\\"800\\\" height=\\\"420\\\" [src]=\\\"videoPath\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\\n \\n                    </div>\\n                \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                            <b>{{ extractNameFromJson(contentData.author_name) }} {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                        </div>\\n                    </div> \\n                    <div class=\\\"row\\\" style=\\\"min-height: 50px;\\\">\\n                    <div class=\\\"col-md-12 col-sm-12\\\" [innerHtml]=\\\"contentData.body\\\"></div>\\n                    \\n                \\n                    </div>\\n                </div>                   \\n            </div>  \\n    \\n        </div>\\n       \\n\\n        <div class=\\\"col-md-4 col-sm-4 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n            <div class=\\\"col-md-12 col-sm-12\\\">\\n            <div class=\\\"col-md-10 col-sm-10\\\">\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\">\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                </div>\\n                    <CoreLib-content-box-tabs magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>\\n                </div>\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n            </div> \\n        </div>     \\n    </div>   -->\\n    \\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <div class=\\\"container mb-3 mt-4\\\" id=\\\"video\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                        <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                        <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                        <h5 [innerHtml]=safeHtml(contentData.summary)></h5> \\n                        <div class=\\\"row\\\">\\n                            <iframe width=\\\"800\\\" height=\\\"420\\\" [src]=\\\"videoPath\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\\n                        </div>                    \\n                        <div class=\\\"row\\\">\\n                            <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                                <b>{{ extractNameFromJson(contentData.author_name) }} {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                            </div>\\n                        </div> \\n                        <div class=\\\"row\\\" style=\\\"min-height: 50px;\\\">\\n                            <div class=\\\"col-md-12 col-sm-12\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>   \\n                            <div class=\\\"col-md-12 col-sm-12\\\">\\n                                <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>  \\n                            </div>     \\n                        </div>\\n                    </div> \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"col-md-12 col-sm-12 mb-2\\\">\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                        <CoreLib-content-box-tabs *ngFor=\\\"let contentData of ContentInterface\\\" magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>\\n                    </div>\\n                </div>\\n            </div>    \\n        </div>\\n\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n\\n\\n\\n\\n\\n\\n    <!-- <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n        <div class=\\\"col-md-6 col-sm-offset-6\\\" >\\n            \\n        </div>\\n        <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n    </div>\\n     -->\\n    \\n    \\n    <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n        <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div> -->\\n        <div>\\n            <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n        </div>\\n        <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div>  -->\\n    </div>   \\n        \\n        <!-- Related Content -->\\n    <!-- <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\" >\\n        <div class=\\\"col-sm-2 col-md-2\\\" ></div>\\n        <div class=\\\"col-sm-6 col-md-6\\\" >\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n        </div>\\n        <div class=\\\"col-sm-4 col-md-4\\\" ></div>    \\n    </div>   -->\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div></div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n            </div>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div ></div>\\n        </div>\\n    </div>   \\n</div>\\n\"\n            }] }\n];\nContentVideoComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentVideoComponent.prototype.ads;\n    /** @type {?} */\n    ContentVideoComponent.prototype.videoPath;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-webinars.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentWebinarsComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentWebinarsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-webinars',\n                template: \"\\n    <div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n            <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n        </div>\\n        \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n        <div class=\\\"col-md-6 col-sm-6\\\">\\n    \\n            <div *ngIf=\\\"ContentInterface\\\">\\n                <div class=\\\"container mb-3 mt-4\\\" id=\\\"webinars\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                    <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                    <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                    <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n                    <!-- <ngb-carousel>\\n                        <ng-template ngbSlide>\\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\"> </div>\\n                        </ng-template>\\n                \\n                        <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\"> </div>\\n                        </ng-template>\\n                    </ngb-carousel> -->\\n                \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                            <b>{{ extractNameFromJson(contentData.author_name) }} {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                        </div>\\n                    </div> \\n                    <!-- <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-7\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>\\n                        <div class=\\\"col-md-5\\\">\\n                            <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                        </div>                \\n                    </div> -->\\n                    <div class=\\\"releted_nws\\\">\\n                        <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                    </div> \\n                    <div class=\\\"row_contian\\\">                            \\n                        <div class=\\\"releted_post\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>  \\n                    </div>\\n                </div>                   \\n            </div>  \\n    \\n        </div>\\n       \\n        <!-- Tabbing Right Side -->\\n        <div class=\\\"col-md-4 col-sm-4 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n            <div class=\\\"col-md-12 col-sm-12\\\">\\n            <div class=\\\"col-md-10 col-sm-10\\\">\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\">\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                </div>\\n                    <CoreLib-content-box-tabs magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>\\n                </div>\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n            </div> \\n        </div>     \\n    </div>  \\n    \\n    \\n    \\n    <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n        <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div> -->\\n        <div>\\n            <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n        </div>\\n        <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div>  -->\\n    </div>   \\n        \\n        <!-- Related Content -->\\n    <!-- <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\" >\\n        <div class=\\\"col-sm-2 col-md-2\\\" ></div>\\n        <div class=\\\"col-sm-6 col-md-6\\\" >\\n            <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n        </div>\\n        <div class=\\\"col-sm-4 col-md-4\\\" ></div>    \\n    </div>   -->\\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div></div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n            </div>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div ></div>\\n        </div>\\n    </div>   \\n</div>\\n    \",\n                styles: [\".line{border-top:1px solid}.releted_nws{float:right;width:100%;max-width:275px;padding-top:10px}.releted_post{padding-top:15px}\"]\n            }] }\n];\nContentWebinarsComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentWebinarsComponent.prototype.ads;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-formulary.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentFormularyComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentFormularyComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-formulary',\n                template: \"\\n<div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n    <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n    \\n    <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n        <div class=\\\"col-md-6 col-sm-6\\\">\\n    \\n            <div *ngIf=\\\"ContentInterface\\\">\\n                <div class=\\\"container mb-3 mt-4\\\" id=\\\"formulary\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                    <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                    <h1 id=\\\"default\\\">{{contentData.title}}</h1>\\n                    <h5>{{contentData.summary}}</h5>\\n                    <ngb-carousel>\\n                        <ng-template ngbSlide>\\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\"> </div>\\n                        </ng-template>\\n                \\n                        <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\"> </div>\\n                        </ng-template>\\n                    </ngb-carousel>\\n                \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                            <b>{{ extractNameFromJson(contentData.author_name) }} {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                        </div>\\n                    </div> \\n                    <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-7\\\" [innerHtml]=\\\"contentData.body\\\"></div>\\n\\n                    <div class=\\\"col-md-5\\\">\\n                        <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                    </div>\\n                \\n                    </div>\\n                </div>                   \\n            </div>  \\n    \\n        </div> -->\\n       \\n        <!-- Tabbing Right Side -->\\n        <!-- <div class=\\\"col-md-4 col-sm-4 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n            <div class=\\\"col-md-12 col-sm-12\\\">\\n            <div class=\\\"col-md-10 col-sm-10\\\">\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\">\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                </div>\\n                    <CoreLib-content-box-tabs magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>\\n                </div>\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n            </div> \\n        </div>     \\n    </div>  \\n     -->\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div >\\n               <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n\\n                <div class=\\\"col-md-8\\\">\\n                    <div *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <div class=\\\"container mb-3 mt-4\\\" id=\\\"default\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                            <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                            <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                            <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n                            <!-- <ngb-carousel *ngIf=\\\"contentData.content_type_id != 2653\\\">\\n                                <ng-template ngbSlide>\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                        \\n                                <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                            </ngb-carousel> -->\\n                        \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                                    <b> <!-- {{ extractNameFromJson(contentData.author_name) }}  -->\\n                                        {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                                </div>\\n                            </div> \\n                            <!-- <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-7\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>                                \\n                                <div class=\\\"col-md-5\\\">\\n                                    <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                                </div>                            \\n                            </div> -->\\n                            <div class=\\\"releted_nws\\\">\\n                                <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' heading='Related Formulary' ></CoreLib-content-related>           \\n                            </div> \\n                            <div class=\\\"row_contian\\\">                                    \\n                                <div class=\\\"releted_post\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>    \\n                                <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>\\n   \\n                            </div>\\n                        </div>                   \\n                    </div>          \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <CoreLib-content-box-tabs  *ngFor=\\\"let contentData of ContentInterface\\\" magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n\\n\\n\\n\\n\\n<!-- Slider Show -->\\n<div class=\\\"container-fluid\\\" *ngFor=\\\"let contentData of ContentInterface\\\">    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div> -->\\n    <div  *ngIf=\\\"contentData.content_type_id != 2653\\\" >\\n        <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n    </div>\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div>  -->\\n</div>   \\n    \\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div></div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n            </div>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div ></div>\\n        </div>\\n    </div>   \\n</div>\",\n                styles: [\".line{border-top:1px solid}.releted_nws{float:right;width:100%;max-width:275px;padding-top:10px}.releted_post{padding-top:15px}\"]\n            }] }\n];\nContentFormularyComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentFormularyComponent.prototype.ads;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-buyer-guide-basic.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentBuyerGuideBasicComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentBuyerGuideBasicComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-buyer-guide-basic',\n                template: \"<div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n        <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n    </div>\\n    \\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n\\n                <div class=\\\"col-md-8\\\">\\n                    <div *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <div class=\\\"container mb-3 mt-4\\\" id=\\\"bgbasic\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                            <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                            <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                            <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n                            <!-- <ngb-carousel *ngIf=\\\"contentData.content_type_id != 2653\\\">\\n                                <ng-template ngbSlide>\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                        \\n                                <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                            </ngb-carousel> -->\\n                        \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                                    <b> <!-- {{ extractNameFromJson(contentData.author_name) }}  -->\\n                                        {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                                </div>\\n                            </div> \\n                            <!-- <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-7\\\" [innerHtml]=\\\"contentData.body\\\"></div>                                \\n                                <div class=\\\"col-md-5\\\">\\n                                    <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                                </div>                            \\n                            </div> -->\\n                            <div class=\\\"releted_nws\\\">\\n                                <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                            </div> \\n                            <div class=\\\"row_contian\\\">                                    \\n                                <div class=\\\"releted_post\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>                                \\n                                <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>     \\n                            </div>\\n                        </div>                   \\n                    </div>          \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <CoreLib-content-box-tabs  *ngFor=\\\"let contentData of ContentInterface\\\" magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n    \\n\\n<!-- Slider Show -->\\n<div class=\\\"container-fluid\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div> -->\\n    <div  *ngIf=\\\"contentData.content_type_id != 2653\\\" >\\n        <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n    </div>\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div>  -->\\n</div>   \\n       \\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div></div>\\n        </div>\\n        <div class=\\\"col-6 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n            </div>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div ></div>\\n        </div>\\n    </div>   \\n</div>\"\n            }] }\n];\nContentBuyerGuideBasicComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentBuyerGuideBasicComponent.prototype.ads;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-buyer-guide-micro-site.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentBuyerGuideMicroSiteComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentBuyerGuideMicroSiteComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-buyer-guide-micro-site',\n                template: \"<div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n        <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n    </div>\\n    \\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n\\n                <div class=\\\"col-md-8\\\">\\n                    <div *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <div class=\\\"container mb-3 mt-4\\\" id=\\\"bgmicrosite\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                            <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                            <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                            <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n                            <!-- <ngb-carousel *ngIf=\\\"contentData.content_type_id != 2653\\\">\\n                                <ng-template ngbSlide>\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                        \\n                                <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                            </ngb-carousel> -->\\n                        \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                                    <b> <!-- {{ extractNameFromJson(contentData.author_name) }}  -->\\n                                        {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                                </div>\\n                            </div> \\n                            <!-- <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-7\\\" [innerHtml]=\\\"contentData.body\\\"></div>                                \\n                                <div class=\\\"col-md-5\\\">\\n                                    <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                                </div>                            \\n                            </div> -->\\n                            <div class=\\\"releted_nws\\\">\\n                                <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                            </div> \\n                            <div class=\\\"row_contian\\\">                                    \\n                                <div class=\\\"releted_post\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>                                \\n                                <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>     \\n                            </div>\\n                        </div>                   \\n                    </div>          \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <CoreLib-content-box-tabs  *ngFor=\\\"let contentData of ContentInterface\\\" magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n    \\n\\n<!-- Slider Show -->\\n<div class=\\\"container-fluid\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div> -->\\n    <div  *ngIf=\\\"contentData.content_type_id != 2653\\\" >\\n        <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n    </div>\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div>  -->\\n</div>   \\n    \\n    <!-- Related Content -->\\n<!-- <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\" >\\n    <div class=\\\"col-sm-2 col-md-2\\\" ></div>\\n    <div class=\\\"col-sm-6 col-md-6\\\" >\\n        <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n    </div>\\n    <div class=\\\"col-sm-4 col-md-4\\\" ></div>    \\n</div>       -->\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div></div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n            </div>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div ></div>\\n        </div>\\n    </div>   \\n</div>\"\n            }] }\n];\nContentBuyerGuideMicroSiteComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentBuyerGuideMicroSiteComponent.prototype.ads;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-slide-show.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentSlideShowComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentSlideShowComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-slide-show',\n                template: \"<div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n        <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n    </div>\\n    \\n<!-- <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n    <div class=\\\"col-md-6 col-sm-6\\\">\\n\\n        <div *ngIf=\\\"ContentInterface\\\">\\n            <div class=\\\"container mb-3 mt-4\\\" id=\\\"slideShow\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                <h1 id=\\\"default\\\">{{contentData.title}}</h1>\\n                <h5>{{contentData.summary}}</h5>\\n                <ngb-carousel>\\n                    <ng-template ngbSlide>\\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\"> </div>\\n                    </ng-template>\\n            \\n                    <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                        <div class=\\\"picsum-img-wrapper\\\">\\n                            <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                        </div>\\n                        <div class=\\\"carousel-caption\\\"> </div>\\n                    </ng-template>\\n                </ngb-carousel>\\n            \\n                <div class=\\\"row\\\">\\n                    <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                        <b>{{ extractNameFromJson(contentData.author_name) }} {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                    </div>\\n                </div> \\n                <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 col-sm-12\\\" [innerHtml]=\\\"contentData.body\\\"></div>\\n                </div>\\n            </div>                   \\n        </div>  \\n\\n    </div>\\n\\n    <div class=\\\"col-md-4 col-sm-4 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n        <div class=\\\"col-md-12 col-sm-12\\\">\\n        <div class=\\\"col-md-10 col-sm-10\\\">\\n            <div class=\\\"col-md-12 col-sm-12 mb-2\\\">\\n                <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n            </div>\\n                <CoreLib-content-box-tabs magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n            <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>\\n            </div>\\n            <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n        </div> \\n    </div>     \\n</div>   -->\\n\\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n\\n            <div class=\\\"row\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <div *ngIf=\\\"ContentInterface\\\">\\n                        <div class=\\\"container mb-3 mt-4\\\" id=\\\"slideShow\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                            <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                            <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                            <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n                            <!-- <ngb-carousel>\\n                                <ng-template ngbSlide>\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                        \\n                                <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\"> </div>\\n                                </ng-template>\\n                            </ngb-carousel> -->\\n                        \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                                    <b>{{ extractNameFromJson(contentData.author_name) }} {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                                </div>\\n                            </div> \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12 col-sm-12\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>\\n                                <div class=\\\"col-md-12 col-sm-12\\\" >   <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches></div>\\n                            </div>\\n                        </div>                   \\n                    </div>          \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <CoreLib-content-box-tabs *ngFor=\\\"let contentData of ContentInterface\\\" magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>\\n\\n        \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n\\n<!-- \\n<div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n    <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n    <div class=\\\"col-md-6 col-sm-offset-6\\\" >\\n        <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>\\n    </div>\\n    <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n</div> -->\\n\\n\\n<div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div> -->\\n    <div>\\n        <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n    </div>\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div>  -->\\n</div>   \\n    \\n    <!-- Related Content -->\\n<!-- <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\" >\\n    <div class=\\\"col-sm-2 col-md-2\\\" ></div>\\n    <div class=\\\"col-sm-6 col-md-6\\\" >\\n            <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n    </div>\\n    <div class=\\\"col-sm-4 col-md-4\\\" ></div>    \\n</div>   -->\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div></div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n            </div>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div ></div>\\n        </div>\\n    </div>   \\n</div>\"\n            }] }\n];\nContentSlideShowComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentSlideShowComponent.prototype.ads;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-static-content.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentStaticContentComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentStaticContentComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-static-content',\n                template: \"\\n<div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n    <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n    <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n        <div class=\\\"col-md-6 col-sm-6\\\">\\n    \\n            <div *ngIf=\\\"ContentInterface\\\">\\n                <div class=\\\"container mb-3 mt-4\\\" id=\\\"staticContent\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                    <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                    <h1 id=\\\"default\\\">{{contentData.title}}</h1>\\n                    <h5>{{contentData.summary}}</h5>\\n                    <ngb-carousel>\\n                        <ng-template ngbSlide>\\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\"> </div>\\n                        </ng-template>\\n                \\n                        <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\"> </div>\\n                        </ng-template>\\n                    </ngb-carousel>\\n                \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                            <b>{{ extractNameFromJson(contentData.author_name) }} {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                        </div>\\n                    </div> \\n                    <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-7\\\" [innerHtml]=\\\"contentData.body\\\"></div>\\n                    <div class=\\\"col-md-5\\\">\\n                        <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                    </div>\\n                \\n                    </div>\\n                </div>                   \\n            </div>  \\n    \\n        </div> -->\\n       \\n        <!-- Tabbing Right Side -->\\n        <!-- <div class=\\\"col-md-4 col-sm-4 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n            <div class=\\\"col-md-12 col-sm-12\\\">\\n            <div class=\\\"col-md-10 col-sm-10\\\">\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\">\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                </div>\\n                    <CoreLib-content-box-tabs magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>\\n                </div>\\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n            </div> \\n        </div>     \\n    </div>  \\n     -->\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <div class=\\\"container mb-3 mt-4\\\" id=\\\"staticContent\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                        <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                        <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                        <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n                        <!-- <ngb-carousel>\\n                            <ng-template ngbSlide>\\n                                <div class=\\\"picsum-img-wrapper\\\">\\n                                    <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                                </div>\\n                                <div class=\\\"carousel-caption\\\"> </div>\\n                            </ng-template>\\n                    \\n                            <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                                <div class=\\\"picsum-img-wrapper\\\">\\n                                    <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                                </div>\\n                                <div class=\\\"carousel-caption\\\"> </div>\\n                            </ng-template>\\n                        </ngb-carousel> -->\\n                    \\n                        <div class=\\\"row\\\">\\n                            <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                                <b>{{ extractNameFromJson(contentData.author_name) }} {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                            </div>\\n                        </div> \\n                        <!-- <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-7\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>\\n                            <div class=\\\"col-md-5\\\">\\n                                <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                            </div>                    \\n                        </div> -->\\n                        <div class=\\\"releted_nws\\\">\\n                            <CoreLib-content-related *ngIf=\\\"ContentInterface\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                        </div> \\n                        <div class=\\\"row_contian\\\">                                \\n                            <div class=\\\"releted_post\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>      \\n                            <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>\\n                        </div>\\n                    </div> \\n\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\" *ngIf=\\\"ContentInterface?.length > 0\\\">\\n                        <CoreLib-content-box-tabs  *ngFor=\\\"let contentData of ContentInterface\\\" magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div>\\n            </div>  \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div >\\n                <!-- <CoreLib-ads-display [ads]=\\\"ads\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<!-- \\n    <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n        <div class=\\\"col-md-6 col-sm-offset-6\\\" >\\n            \\n        </div>\\n        <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n    </div>\\n     -->\\n    \\n    \\n    <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n        <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div> -->\\n        <div >\\n            <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n        </div>\\n        <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div>  -->\\n    </div>   \\n        \\n        <!-- Related Content -->\\n    <!-- <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\" >\\n        <div class=\\\"col-sm-2 col-md-2\\\" ></div>\\n        <div class=\\\"col-sm-6 col-md-6\\\" >\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n        </div>\\n        <div class=\\\"col-sm-4 col-md-4\\\" ></div>    \\n    </div>   -->\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div></div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n                <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n            </div>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div ></div>\\n        </div>\\n    </div>   \\n</div>\",\n                styles: [\".line{border-top:1px solid}.releted_nws{float:right;width:100%;max-width:275px;padding-top:10px}.releted_post{padding-top:15px}\"]\n            }] }\n];\nContentStaticContentComponent.propDecorators = {\n    ads: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentStaticContentComponent.prototype.ads;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-white-paper.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentWhitePaperComponent extends ContentDynamicViewComponent {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // alert('sfdsf')\n    }\n}\nContentWhitePaperComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-white-paper',\n                template: \"    <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n        <div class=\\\"col-md-5 col-sm-5\\\">\\n    \\n            <div *ngIf=\\\"ContentInterface\\\">\\n                <div class=\\\"container mb-3 mt-4\\\" id=\\\"whitepaper\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                    <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                    <!-- <h1 id=\\\"default\\\">{{contentData.title}}</h1> -->\\n                    <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                    <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n               \\n                    <div class=\\\"row border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-2\\\" >\\n                        <!-- <div class=\\\"col-sm-12 col-md-12\\\"> -->\\n                            <div class=\\\"col-sm-4 col-md-4\\\" *ngIf=\\\"contentData.companyDetail.title\\\">\\n                               <b> Released by </b> {{contentData.companyDetail.title}} \\n                            </div> \\n                            <div class=\\\"col-sm-6 col-md-6\\\">\\n                                <b>{{ extractNameFromJson(contentData.author_name) }}</b>\\n                            </div>\\n                            <div class=\\\"col-sm-2 col-md-2\\\" *ngIf=\\\"contentData.publish_date\\\">\\n                                {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}}\\n                            </div> \\n                        <!-- </div> -->\\n                    </div> \\n                    <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12 col-sm-12\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>\\n                \\n                    </div>\\n                </div>                   \\n            </div>  \\n    \\n        </div>\\n       \\n        <!-- Tabbing Right Side -->\\n        <div class=\\\"col-md-3 col-sm-3 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n            <CoreLib-company-content-authenticate [link]=\\\"contentData.link\\\" [sendParentMessage]=\\\"contentData.companyDetail\\\"></CoreLib-company-content-authenticate>\\n        </div>     \\n        <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n    </div>  \\n    \\n    <hr>\\n\\n<div class=\\\"row mb-3\\\">\\n    <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n    <div class=\\\"col-md-5 col-sm-5\\\">\\n        <div *ngIf=\\\"ContentInterface\\\">\\n            <!-- <div class=\\\"container mb-3 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\">  -->\\n            <div class=\\\"container mb-3 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\"> \\n                <div class=\\\"row\\\" *ngIf=\\\"(contentData.companyDetail.id && contentData.content_type_id)\\\">\\n                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                        <h3 class=\\\"back-color\\\">\\n                            More White Papers / Tech Papers by {{contentData.companyDetail.title}}\\n                        </h3>\\n                    </div>                \\n                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                        <CoreLib-content-company-related [magazineId]=\\\"contentData.magazine_id\\\" [companyId]=\\\"contentData.companyDetail.id\\\" [contentType]=\\\"contentData.content_type_id\\\" ></CoreLib-content-company-related>\\n                    </div>      \\n                </div>\\n                <div class=\\\"row\\\" *ngIf=\\\"contentData.companyDetail.id\\\">\\n                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                        <h3 class=\\\"back-color\\\">\\n                            Related Content {{contentData.companyDetail.title}}\\n                        </h3>\\n                    </div>                \\n                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                        <CoreLib-content-company-related [magazineId]=\\\"contentData.magazine_id\\\" [companyId]=\\\"contentData.companyDetail.id\\\" [contentType]=\\\"\\\" ></CoreLib-content-company-related>\\n                    </div>      \\n                </div>\\n            </div>                   \\n        </div>      \\n    </div>\\n    <div class=\\\"col-md-3 col-sm-3 mt-4\\\"></div>     \\n    <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n</div>     \\n\\n\\n  \\n\",\n                styles: [`h2{ background-color:#ccc; } .back-color{background-color: #ccc;}`]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    ContentWhitePaperComponent.prototype.data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-dynamic-view/content-news-release.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentNewsReleaseComponent extends ContentDynamicViewComponent {\n    constructor() {\n        super(...arguments);\n        this.data = 1;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentNewsReleaseComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-news-release',\n                template: \"    <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n        <div class=\\\"col-md-5 col-sm-5\\\">\\n    \\n            <div *ngIf=\\\"ContentInterface\\\">\\n                <div class=\\\"container mb-3 mt-4\\\" id=\\\"whitepaper\\\"  *ngFor=\\\"let contentData of ContentInterface\\\">\\n                    <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                    <h1 id=\\\"default\\\" [innerHtml]=safeHtml(contentData.title)></h1>\\n                    <h5 [innerHtml]=safeHtml(contentData.summary)></h5>\\n                    <!-- <ngb-carousel>\\n                        <ng-template ngbSlide>\\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img  [src]=\\\"contentData.primary_image_main\\\" alt=\\\"No Image\\\" class=\\\"img-scale full-Size mb-2\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\"> </div>\\n                        </ng-template>\\n                \\n                        <ng-template ngbSlide  *ngFor=\\\"let slideImage of contentData.slider_image;\\\">\\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img  [src]=\\\"slideImage\\\" alt=\\\"No Image\\\" class=\\\"img-scale  full-Size mb-2\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\"> </div>\\n                        </ng-template>\\n                    </ngb-carousel> -->\\n                \\n                    <div class=\\\"row border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-2\\\" >\\n                            <!-- <div class=\\\"col-sm-12 col-md-12\\\"> -->\\n                                <div class=\\\"col-sm-4 col-md-4\\\" *ngIf=\\\"contentData.companyDetail.title\\\">\\n                                    <b> Released by </b> {{contentData.companyDetail.title}} \\n                                </div> \\n                                <!-- <div class=\\\"col-sm-6 col-md-6\\\">\\n                                    <b>{{ extractNameFromJson(contentData.author_name) }}</b>\\n                                </div> -->\\n                                <div class=\\\"col-sm-2 col-md-2\\\" *ngIf=\\\"contentData.publish_date\\\">\\n                                    {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}}\\n                                </div> \\n                            <!-- </div> -->\\n                        </div> \\n                    <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12 col-sm-12\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>\\n                \\n                    </div>\\n                </div>                   \\n            </div>  \\n    \\n        </div>\\n        \\n        <!-- Tabbing Right Side -->\\n        <div class=\\\"col-md-3 col-sm-3 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\">\\n            <CoreLib-company-content-authenticate [link]=\\\"contentData.link\\\" [sendParentMessage]=\\\"contentData.companyDetail\\\"></CoreLib-company-content-authenticate>\\n        </div>     \\n        <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n    </div>  \\n    \\n    <hr>\\n\\n<div class=\\\"row mb-3\\\">\\n    <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n    <div class=\\\"col-md-5 col-sm-5\\\">\\n        <div *ngIf=\\\"ContentInterface\\\">\\n            <div class=\\\"container mb-3 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\"> \\n                <div class=\\\"row\\\" *ngIf=\\\"(contentData.companyDetail.id && contentData.content_type_id)\\\">\\n                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                        <h3 class=\\\"back-color\\\">\\n                            More  News Releases by {{contentData.companyDetail.title}}\\n                        </h3>\\n                    </div>                \\n                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                            <CoreLib-content-company-related [magazineId]=\\\"contentData.magazine_id\\\" [companyId]=\\\"contentData.companyDetail.id\\\" [contentType]=\\\"contentData.content_type_id\\\" ></CoreLib-content-company-related> \\n                    </div>      \\n                </div>\\n            </div>                   \\n        </div>      \\n    </div>\\n    <div class=\\\"col-md-3 col-sm-3 mt-4\\\"></div>     \\n    <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n</div>     \\n    \\n    \\n<div class=\\\"row mb-3\\\">\\n    <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n    <div class=\\\"col-md-5 col-sm-5\\\">\\n        <div *ngIf=\\\"ContentInterface\\\">\\n            <div class=\\\"container mb-3 mt-4\\\" *ngFor=\\\"let contentData of ContentInterface\\\"> \\n                <div class=\\\"row\\\" *ngIf=\\\"contentData.companyDetail.id\\\">\\n                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                        <h3 class=\\\"back-color\\\">\\n                            Related Content {{contentData.companyDetail.title}}\\n                        </h3>\\n                    </div>                \\n                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                        <CoreLib-content-company-related [magazineId]=\\\"contentData.magazine_id\\\" [companyId]=\\\"contentData.companyDetail.id\\\" [contentType]=\\\"\\\" ></CoreLib-content-company-related>\\n                    </div>      \\n                </div>\\n            </div>                   \\n        </div>      \\n    </div>\\n    <div class=\\\"col-md-3 col-sm-3 mt-4\\\"></div>     \\n    <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n</div>         \\n    \",\n                styles: [` h2{ background-color:#ccc} .back-color{ background-color: #ccc;}`]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    ContentNewsReleaseComponent.prototype.data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-company-related/content-company-related.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentCompanyRelatedService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} limit\n     * @param {?} page\n     * @param {?} companyId\n     * @param {?} contentType\n     * @return {?}\n     */\n    getContentRelated(magazineId, limit, page, companyId, contentType) {\n        return this.HttpClient.post(apiURL + 'taxonomysController/getContentReleated', { contentType: contentType, magazineId: magazineId, limit: limit, page: page, companyId: companyId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nContentCompanyRelatedService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nContentCompanyRelatedService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ ContentCompanyRelatedService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentCompanyRelatedService_Factory() { return new ContentCompanyRelatedService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: ContentCompanyRelatedService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentCompanyRelatedService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentCompanyRelatedService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-company-related/content-company-related.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentCompanyRelatedComponent {\n    /**\n     * @param {?} ContentCompanyRelatedService\n     */\n    constructor(ContentCompanyRelatedService) {\n        this.ContentCompanyRelatedService = ContentCompanyRelatedService;\n        this.page = 0;\n        this.limit = 10;\n        this.loading = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.getData();\n        console.log('dataGet ' + this.magazineId + this.limit + this.page + this.companyId + this.contentType);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        // this.getData();\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        return data.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    }\n    /**\n     * @return {?}\n     */\n    getData() {\n        this.ContentCompanyRelatedService.getContentRelated(this.magazineId, this.limit, this.page, this.companyId, this.contentType).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.relatedData = data['data'];\n            this.loading = false;\n        }));\n    }\n}\nContentCompanyRelatedComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-company-related',\n                template: \"<div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n    \\n\\n<div *ngFor=\\\"let data of relatedData;let i =index\\\">     \\n\\n        <ng-container  *ngIf=\\\"contentType;else defaultView\\\">\\n            <!-- <p><span class=\\\"bg-primary\\\">{{data.tag}}</span></p> -->\\n            <p><span><b>{{data.tag}}</b></span></p>\\n            <h4><a [routerLink]=\\\"['/'+data.viewUrl]\\\">\\n            <div [innerHTML]=\\\"safeHtml(data.title)\\\"> </div>\\n            </a></h4>\\n            <div [innerHTML]=\\\"safeHtml(data.summary)\\\"></div>\\n            <p>{{data.publish_date | date : \\\"MMM dd , yyyy\\\"}}</p>\\n        </ng-container>\\n\\n    \\n        <ng-template #defaultView>\\n            <ng-container> \\n                <h4><a [routerLink]=\\\"['/'+data.viewUrl]\\\">\\n                    <div [innerHTML]=\\\"safeHtml(data.title)\\\"> </div>\\n                </a></h4>\\n                <div [innerHTML]=\\\"safeHtml(data.summary)\\\"></div>\\n                <p> <span class=\\\"\\\"><b>{{data.tag}}</b></span>  Released on  {{data.publish_date | date : \\\"MMM dd , yyyy\\\"}}</p>\\n            </ng-container> \\n        </ng-template>\\n\\n\\n    <hr>\\n</div>\\n\\n\\n\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nContentCompanyRelatedComponent.ctorParameters = () => [\n    { type: ContentCompanyRelatedService }\n];\nContentCompanyRelatedComponent.propDecorators = {\n    magazineId: [{ type: Input }],\n    companyId: [{ type: Input }],\n    contentType: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentCompanyRelatedComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentCompanyRelatedComponent.prototype.companyId;\n    /** @type {?} */\n    ContentCompanyRelatedComponent.prototype.contentType;\n    /** @type {?} */\n    ContentCompanyRelatedComponent.prototype.page;\n    /** @type {?} */\n    ContentCompanyRelatedComponent.prototype.limit;\n    /** @type {?} */\n    ContentCompanyRelatedComponent.prototype.loading;\n    /** @type {?} */\n    ContentCompanyRelatedComponent.prototype.relatedData;\n    /** @type {?} */\n    ContentCompanyRelatedComponent.prototype.ContentCompanyRelatedService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-related-content-list/content-related-content-list.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentRelatedContentListComponent {\n    /**\n     * @param {?} Router\n     * @param {?} ListContentService\n     * @param {?} RodmanCoreService\n     */\n    constructor(Router, ListContentService, RodmanCoreService) {\n        this.Router = Router;\n        this.ListContentService = ListContentService;\n        this.RodmanCoreService = RodmanCoreService;\n        this.listContentData = [];\n        this.limit = 10;\n        this.page = 0;\n        this.contentType = '';\n        this.loading = true;\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationEnd) {\n                this.currentURL = event.url;\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // this.getContentData();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.page = 0;\n        this.slugHeading;\n        this.listContentData = [];\n        this.getContentData();\n    }\n    // safeHtml(data){\n    //   return this.RodmanCoreService.safeHtml(data);\n    // }\n    /**\n     * @return {?}\n     */\n    getContentData() {\n        this.taxonomyUrl = this.routeUrl.split('/');\n        this.taxonomyUrl = (this.taxonomyUrl[this.taxonomyUrl.length - 1]);\n        /** @type {?} */\n        let url = this.taxonomyUrl.split('_');\n        this.taxonomyUrlTo = url[1];\n        this.ListContentService.getContent(this.routeUrl, this.magazineId, this.limit, this.page, this.contentType).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.contentData = data['data'];\n            if (this.page == 0) {\n                this.slugHeading = data['contentTypeName'];\n                // this.contentTaxonomy = data['CONTENT_TAXONOMYS'];\n            }\n            this.page = data['page'] + 1;\n            for (let content of this.contentData) {\n                this.listContentData.push(content);\n            }\n            this.loading = false;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    loadMoreData() {\n        this.loading = true;\n        this.getContentData();\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        return data.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    }\n    /**\n     * @param {?} imageId\n     * @return {?}\n     */\n    getImage(imageId) {\n        return this.RodmanCoreService.displayImageUrl(imageId);\n    }\n}\nContentRelatedContentListComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-related-content-list',\n                inputs: ['routeUrl', 'magazineId', 'contentType'],\n                template: \"<!-- Every Page Bottom -->\\n<div class=\\\"container mt-5\\\" id=\\\"content-related-content-list\\\" *ngIf=\\\"contentType!='2542'\\\">\\n    <div class=\\\"mb-2\\\" *ngIf=\\\"slugHeading\\\"><h2>Related {{ slugHeading.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h2></div>\\n            <div class=\\\"heading-border\\\"></div>\\n    <div *ngIf=\\\"listContentData?.length > 0\\\" >\\n    <div  *ngFor=\\\"let Data of listContentData | slice:1; let i =index\\\" >    \\n        <div class=\\\"col-md-12 col-sm-12\\\">\\n            <div class=\\\"row\\\">                            \\n                <div class=\\\"col-md-9 col-sm-9\\\">\\n                    <small>{{ Data.publish_date| date : \\\"MMM dd , yyyy\\\"}}</small>\\n                    <h4 class=\\\"mt-2\\\"><a [routerLink]=\\\"[Data.viewUrl]\\\"><b> <div [innerHTML]=\\\"safeHtml(Data.title)\\\"> </div> </b></a></h4> \\n                    <h6 class=\\\"mt-3\\\">{{Data.summary}}</h6>\\n                    <div class=\\\"mt-2\\\"> \\n                        <span *ngIf=\\\"Data.firstName\\\"> By <small> <b> {{Data.firstName}} {{Data.lastName}}</b> </small></span> \\n                        <div *ngIf=\\\"slugHeading == 'Glossary'\\\" [innerHtml]=\\\"safeHtml(Data.body)\\\"> </div> \\n                    </div>    \\n                </div>\\n                <div class=\\\"col-md-3 col-sm-3\\\" *ngIf=\\\"(slugHeading != 'Glossary') && (Data.primary_image)\\\">\\n                    <img class=\\\"img-scale\\\"  [src]=\\\"getImage(Data.primary_image)\\\">\\n                </div>\\n            </div>\\n        </div>   \\n\\n        <div class=\\\"col-md-12 col-sm-12\\\" id=\\\"ads\\\" *ngIf=\\\"(i % 3 == 0) && (i > 2)\\\" ><hr>\\n            <div class=\\\"row align-ads\\\"> \\n                <CoreLib-ads-double-click magazineId={{magazineId}} no=\\\"1\\\" location={{currentURL}}></CoreLib-ads-double-click>\\n            </div>\\n        </div><hr>     \\n    </div>   \\n    </div>         \\n</div>\\n\\n\\n<div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n       \\n\\n<div class=\\\"container mt-5 mb-3\\\" *ngIf=\\\"listContentData?.length > 0  && contentType!='2542'\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"listContentData?.length > 9 \\\"> \\n        <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n            <div class=\\\"col-md-4 col-sm-4\\\">    <button class=\\\"text-center button\\\"  (click)=\\\"loadMoreData()\\\">Load More</button></div>\\n        <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n    </div>   \\n</div>\",\n                styles: [\".img-scale{max-width:250px}.heading-border{border-bottom:1px solid #000;color:#000}.taxonomy-text{margin:5px;font-size:18px}.align-ads{margin-left:0!important}\"]\n            }] }\n];\n/** @nocollapse */\nContentRelatedContentListComponent.ctorParameters = () => [\n    { type: Router },\n    { type: ListContentService },\n    { type: RodmanCoreService }\n];\nif (false) {\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.routeUrl;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.listContentData;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.contentData;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.slugHeading;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.limit;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.page;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.contentType;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.contentTaxonomy;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.taxonomyUrl;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.taxonomyUrlTo;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.loading;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.currentURL;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.Router;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentRelatedContentListComponent.prototype.ListContentService;\n    /** @type {?} */\n    ContentRelatedContentListComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-related-searches/content-related-searches.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentRelatedSearchesComponent {\n    /**\n     * @param {?} Router\n     */\n    constructor(Router) {\n        this.Router = Router;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nContentRelatedSearchesComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-related-searches',\n                template: \"\\n<div  *ngIf=\\\"dataArray\\\" class=\\\"mt-3 mb-3\\\">\\n    <div *ngIf=\\\"dataArray[0]\\\"> <h3>Related Searches</h3></div>\\n    <span class=\\\"taxonomy-text\\\" *ngFor=\\\"let search of dataArray | slice:0:5;let i=index\\\" >\\n        <a [routerLink]=\\\"['/contents/searchcontent/all/'+search.tag]\\\"  > {{search.tag}}  </a>\\n    </span>\\n</div>\\n\",\n                styles: [\".taxonomy-text{font-size:15px;background-color:#f2f2f2;font-weight:501;text-transform:uppercase;margin-right:15px;margin-bottom:10px;display:inline-block;letter-spacing:1px}.taxonomy-text a{padding:10px}\"]\n            }] }\n];\n/** @nocollapse */\nContentRelatedSearchesComponent.ctorParameters = () => [\n    { type: Router }\n];\nContentRelatedSearchesComponent.propDecorators = {\n    dataArray: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentRelatedSearchesComponent.prototype.dataArray;\n    /** @type {?} */\n    ContentRelatedSearchesComponent.prototype.Router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-glossary/content-glossary.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentGlossaryComponent {\n    /**\n     * @param {?} ActivatedRoute\n     * @param {?} Router\n     * @param {?} ListContentService\n     * @param {?} RodmanCoreService\n     */\n    constructor(ActivatedRoute, Router, ListContentService, RodmanCoreService) {\n        this.ActivatedRoute = ActivatedRoute;\n        this.Router = Router;\n        this.ListContentService = ListContentService;\n        this.RodmanCoreService = RodmanCoreService;\n        this.glossaryData = [];\n        this.loading = true;\n        this.getAllAd = [];\n        this.current_letter = '';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ActivatedRoute.data.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.magazineId = data.magazineId;\n        }));\n        this.ListContentService.getContent('glossary', this.magazineId, 10, 0, '').subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.glossaryData = data['data'];\n            this.getads();\n            this.loading = false;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    getads() {\n        this.RodmanCoreService.getAllAdst(this.magazineId).subscribe(((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.getAllAd = data;\n            this.viewAdRender = 1;\n        })));\n    }\n    /**\n     * @param {?} current\n     * @param {?} pre\n     * @return {?}\n     */\n    matchCharacter(current, pre) {\n        if (current.charAt(0) != pre) {\n            this.current_letter = current.charAt(0);\n            return true;\n        }\n        return false;\n    }\n}\nContentGlossaryComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-glossary',\n                template: \"<div class=\\\"col-md-12 col-sm-12 text-center\\\"  *ngIf=\\\"viewAdRender == 1\\\"  >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\" *ngIf=\\\"glossaryData?.length > 0\\\">\\n    <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n    <div class=\\\"col-md-8 col-sm-8 mt-5\\\">\\n        <div class=\\\"row\\\">            \\n            <!-- <div class=\\\"col-md-12 col-sm-12\\\" > -->\\n                <div class=\\\"col-md-8 col-sm-8\\\" >\\n                    <div class=\\\"col-md-6 col-sm-6\\\" *ngFor=\\\"let item of glossaryData; let i = index; let even = even;\\\">      \\n                        <div class=\\\"col-md-12 col-sm-12 border-bottom mt-3\\\" id=\\\"{{current_letter}}\\\" *ngIf=\\\"matchCharacter(item.title,current_letter)\\\">\\n                            <b><h4>{{current_letter}}</h4></b><br>\\n                        </div>\\n                        <!-- <div class=\\\"col-md-12 col-sm-12\\\" *ngIf=\\\"matchCharacter(item.title,current_letter)\\\">\\n                            <br><hr>\\n                        </div>     -->                              \\n                            <a  [routerLink]=\\\"['/'+item.viewUrl]\\\">{{ item.title }} </a>                     \\n                    </div>    \\n                </div>\\n                <div class=\\\"col-md-4 col-sm-4\\\" >\\n                    <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>\\n                    </div>\\n                </div>\\n            <!-- </div>          -->\\n        </div>\\n    </div>  \\n</div>  \",\n                styles: [\".half-space{margin-right:10px}\"]\n            }] }\n];\n/** @nocollapse */\nContentGlossaryComponent.ctorParameters = () => [\n    { type: ActivatedRoute },\n    { type: Router },\n    { type: ListContentService },\n    { type: RodmanCoreService }\n];\nif (false) {\n    /** @type {?} */\n    ContentGlossaryComponent.prototype.glossaryData;\n    /** @type {?} */\n    ContentGlossaryComponent.prototype.loading;\n    /** @type {?} */\n    ContentGlossaryComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentGlossaryComponent.prototype.getAllAd;\n    /** @type {?} */\n    ContentGlossaryComponent.prototype.viewAdRender;\n    /** @type {?} */\n    ContentGlossaryComponent.prototype.current_letter;\n    /** @type {?} */\n    ContentGlossaryComponent.prototype.ActivatedRoute;\n    /** @type {?} */\n    ContentGlossaryComponent.prototype.Router;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentGlossaryComponent.prototype.ListContentService;\n    /** @type {?} */\n    ContentGlossaryComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-issue/content-issue.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentIssueService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} slug\n     * @return {?}\n     */\n    getIssue(magazineId, slug) {\n        return this.HttpClient.post(apiURL + 'issuescontroller/getIssues', { magazineId: magazineId, slug: slug }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nContentIssueService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nContentIssueService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ ContentIssueService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentIssueService_Factory() { return new ContentIssueService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: ContentIssueService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentIssueService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentIssueService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-issue/content-issue.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentIssueComponent {\n    /**\n     * @param {?} RodmanCoreService\n     * @param {?} ActivatedRoute\n     * @param {?} Router\n     * @param {?} ContentIssueService\n     */\n    constructor(RodmanCoreService, ActivatedRoute, Router, ContentIssueService) {\n        this.RodmanCoreService = RodmanCoreService;\n        this.ActivatedRoute = ActivatedRoute;\n        this.Router = Router;\n        this.ContentIssueService = ContentIssueService;\n        this.issueData = [];\n        this.sliderData = [];\n        this.loading = true;\n        this.page = 0;\n        this.ptintTittle = false;\n        this.routeChange = true;\n        this.getAllAd = [];\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationStart) {\n                /** @type {?} */\n                let data = event.url.split('/');\n                this.lastSlug = data[data.length - 1];\n                this.routeChange = true;\n            }\n            if (this.routeChange) {\n                this.issueData = [];\n                // this.sliderData =[];\n                this.getIssue(this.lastSlug);\n                this.routeChange = false;\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ActivatedRoute.data.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.magazineId = data.magazineId;\n        }));\n        this.getIssue(this.slug);\n        this.getads();\n        this.name = magazineIds[this.magazineId].name;\n    }\n    /**\n     * @param {?} slug\n     * @return {?}\n     */\n    getIssue(slug) {\n        this.ContentIssueService.getIssue(this.magazineId, slug).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            /** @type {?} */\n            let collectData = data['data'];\n            // if(this.page==0)  {\n            this.sliderData = data['issue'];\n            // console.log(this.sliderData)\n            this.page = 1;\n            // }      \n            this.nextIssue = data['nextIssue'];\n            for (let data of collectData) {\n                this.issueData.push(data);\n            }\n            this.loading = false;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    getads() {\n        this.RodmanCoreService.getAllAdst(this.magazineId).subscribe(((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.getAllAd = data;\n            this.viewAdRender = 1;\n        })));\n    }\n    /**\n     * @param {?} slug\n     * @return {?}\n     */\n    loadMoreData(slug) {\n        this.loading = true;\n        // this.ptintTittle=true;\n        this.getIssue(slug);\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        return data.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    }\n    /**\n     * @param {?} title\n     * @return {?}\n     */\n    titlePrint(title) {\n        return (title == 1) ? true : false;\n    }\n}\nContentIssueComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-issue',\n                template: \"<div class=\\\"col-md-12 col-sm-12 text-center\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <div><h3>{{name}} Magazine</h3></div>\\n                    <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n                        <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                            <span class=\\\"sr-only\\\">Loading...</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-4 border p-2\\\" *ngIf=\\\"sliderData.length > 0\\\">                        \\n                        <CoreLib-content-issue-slider [sliderData]=\\\"sliderData\\\"></CoreLib-content-issue-slider>\\n                    </div>                    \\n                    <div class=\\\"mt-3 mb-3 border-bottom\\\" *ngFor=\\\"let issue of issueData;let i=index\\\">\\n                        <div class=\\\"col-md-12 col-sm-12 mt-3 mb-3\\\" *ngIf=\\\"i == 0\\\"><h2>{{issue.issue_title}}</h2> </div>\\n                        <!-- <div class=\\\"col-md-12 col-sm-12 mt-3 mb-3\\\" *ngIf=\\\"nextIssue && ptintTittle\\\"><h2>{{nextIssue.issue_title}}</h2> </div>  -->                        \\n                        <div>\\n                            <h3> <a [innerHTML]=\\\"safeHtml(issue.title)\\\" [routerLink]=\\\"['/'+issue.viewUrl]\\\"></a> </h3>\\n                        </div>    \\n                        <div>    \\n                            <h5 [innerHTML]=\\\"safeHtml(issue.summary)\\\" ></h5>\\n                        </div>    \\n                        <div class=\\\"mb-1\\\"><small><b>{{issue.publish_date| date : \\\"MMM dd , yyyy\\\"}}</b></small></div>\\n                    </div>\\n                                        \\n                    <div class=\\\"container mt-5 mb-3\\\" *ngIf=\\\"(nextIssue) && (sliderData.length > 0)\\\">                            \\n                        <div class=\\\"row\\\" > \\n                            <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n                                <div class=\\\"col-md-4 col-sm-4\\\">                                       \\n                                    <button class=\\\"text-center button\\\"  (click)=\\\"loadMoreData(nextIssue.slug)\\\">Load More</button>\\n                                </div>\\n                            <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n                        </div>   \\n                    </div>    \\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n        \\n            \\n\\n\\n\",\n                providers: [NgbModule, NgbCarouselConfig],\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nContentIssueComponent.ctorParameters = () => [\n    { type: RodmanCoreService },\n    { type: ActivatedRoute },\n    { type: Router },\n    { type: ContentIssueService }\n];\nif (false) {\n    /** @type {?} */\n    ContentIssueComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentIssueComponent.prototype.slug;\n    /** @type {?} */\n    ContentIssueComponent.prototype.issueData;\n    /** @type {?} */\n    ContentIssueComponent.prototype.sliderData;\n    /** @type {?} */\n    ContentIssueComponent.prototype.loading;\n    /** @type {?} */\n    ContentIssueComponent.prototype.currentURL;\n    /** @type {?} */\n    ContentIssueComponent.prototype.lastSlug;\n    /** @type {?} */\n    ContentIssueComponent.prototype.name;\n    /** @type {?} */\n    ContentIssueComponent.prototype.nextIssue;\n    /** @type {?} */\n    ContentIssueComponent.prototype.page;\n    /** @type {?} */\n    ContentIssueComponent.prototype.ptintTittle;\n    /** @type {?} */\n    ContentIssueComponent.prototype.routeChange;\n    /** @type {?} */\n    ContentIssueComponent.prototype.getAllAd;\n    /** @type {?} */\n    ContentIssueComponent.prototype.viewAdRender;\n    /** @type {?} */\n    ContentIssueComponent.prototype.RodmanCoreService;\n    /** @type {?} */\n    ContentIssueComponent.prototype.ActivatedRoute;\n    /** @type {?} */\n    ContentIssueComponent.prototype.Router;\n    /** @type {?} */\n    ContentIssueComponent.prototype.ContentIssueService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-issue-slider/content-issue-slider.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentIssueSliderComponent {\n    /**\n     * @param {?} config\n     * @param {?} RodmanCoreService\n     */\n    constructor(config, RodmanCoreService) {\n        this.RodmanCoreService = RodmanCoreService;\n        this.showNavigationArrows = true;\n        this.showNavigationIndicators = true;\n        // config.interval = 3000;\n        // config.showNavigationArrows = false;\n        // config.showNavigationIndicators = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n    /**\n     * @param {?} imageId\n     * @return {?}\n     */\n    getImage(imageId) {\n        return this.RodmanCoreService.displayImageUrl(imageId);\n    }\n}\nContentIssueSliderComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-issue-slider',\n                template: \"<ngb-carousel *ngIf=\\\"sliderData.length > 0 \\\" [interval]=\\\"false\\\">\\n            <ng-template ngbSlide *ngIf=\\\"sliderData && sliderData.hasOwnProperty(0)\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData.hasOwnProperty(0)\\\"> \\n                        <a  [routerLink]=\\\"['/issues/'+sliderData[0].slug]\\\"  > \\n                            <div class=\\\"picsum-img-wrapper ml-3\\\">\\n                                <img [src]=\\\"getImage(sliderData[0].image)\\\" alt=\\\"No Image\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\">\\n                                <p>{{sliderData[0].issue_title}}</p>\\n                            </div>\\n                        </a>\\n                    </div>\\n                    <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(1))\\\"> \\n                        <a  [routerLink]=\\\"['/issues/'+sliderData[1].slug]\\\"  > \\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img [src]=\\\"getImage(sliderData[1].image)\\\" alt=\\\"No Image\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\">\\n                                <p>{{sliderData[1].issue_title}}</p>\\n                            </div>\\n                        </a>\\n                    </div>\\n                    <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(2))\\\"> \\n                        <a  [routerLink]=\\\"['/issues/'+sliderData[2].slug]\\\"  > \\n                            <div class=\\\"picsum-img-wrapper\\\">\\n                                <img [src]=\\\"getImage(sliderData[2].image)\\\" alt=\\\"No Image\\\">\\n                            </div>\\n                            <div class=\\\"carousel-caption\\\">\\n                                <p>{{sliderData[2].issue_title}}</p>\\n                            </div>\\n                        </a>\\n                    </div>    \\n                    <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(3))\\\"> \\n                            <a  [routerLink]=\\\"['/issues/'+sliderData[3].slug]\\\"  > \\n                                <div class=\\\"picsum-img-wrapper\\\">\\n                                    <img [src]=\\\"getImage(sliderData[3].image)\\\" alt=\\\"No Image\\\">\\n                                </div>\\n                                <div class=\\\"carousel-caption\\\">\\n                                    <p>{{sliderData[3].issue_title}}</p>\\n                                </div>\\n                            </a>\\n                        </div>                                          \\n                </div>\\n            </ng-template>\\n\\n            <ng-template ngbSlide *ngIf=\\\"sliderData && sliderData.hasOwnProperty(4)\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData.hasOwnProperty(4)\\\"> \\n                            <a  [routerLink]=\\\"['/issues/'+sliderData[4].slug]\\\"  > \\n                                <div class=\\\"picsum-img-wrapper ml-3\\\">\\n                                    <img [src]=\\\"getImage(sliderData[4].image)\\\" alt=\\\"No Image\\\">\\n                                </div>\\n                                <div class=\\\"carousel-caption\\\">\\n                                    <p>{{sliderData[4].issue_title}}</p>\\n                                </div>\\n                            </a>\\n                        </div>\\n                        <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(5))\\\"> \\n                            <a  [routerLink]=\\\"['/issues/'+sliderData[5].slug]\\\"  > \\n                                <div class=\\\"picsum-img-wrapper\\\">\\n                                    <img [src]=\\\"getImage(sliderData[5].image)\\\" alt=\\\"No Image\\\">\\n                                </div>\\n                                <div class=\\\"carousel-caption\\\">\\n                                    <p>{{sliderData[5].issue_title}}</p>\\n                                </div>\\n                            </a>\\n                        </div>\\n                        <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(6))\\\"> \\n                            <a  [routerLink]=\\\"['/issues/'+sliderData[6].slug]\\\"  > \\n                                <div class=\\\"picsum-img-wrapper\\\">\\n                                    <img [src]=\\\"getImage(sliderData[6].image)\\\" alt=\\\"No Image\\\">\\n                                </div>\\n                                <div class=\\\"carousel-caption\\\">\\n                                    <p>{{sliderData[6].issue_title}}</p>\\n                                </div>\\n                            </a>\\n                        </div>    \\n                        <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(7))\\\"> \\n                                <a  [routerLink]=\\\"['/issues/'+sliderData[7].slug]\\\"  > \\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img [src]=\\\"getImage(sliderData[7].image)\\\" alt=\\\"No Image\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\">\\n                                        <p>{{sliderData[7].issue_title}}</p>\\n                                    </div>\\n                                </a>\\n                            </div>                                          \\n                    </div>\\n                </ng-template>\\n\\n\\n                <ng-template ngbSlide *ngIf=\\\"sliderData && sliderData.hasOwnProperty(8)\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData.hasOwnProperty(8)\\\"> \\n                                <a  [routerLink]=\\\"['/issues/'+sliderData[8].slug]\\\"  > \\n                                    <div class=\\\"picsum-img-wrapper ml-3\\\">\\n                                        <img [src]=\\\"getImage(sliderData[8].image)\\\" alt=\\\"No Image\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\">\\n                                        <p>{{sliderData[8].issue_title}}</p>\\n                                    </div>\\n                                </a>\\n                            </div>\\n                            <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(9))\\\"> \\n                                <a  [routerLink]=\\\"['/issues/'+sliderData[9].slug]\\\"  > \\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img [src]=\\\"getImage(sliderData[9].image)\\\" alt=\\\"No Image\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\">\\n                                        <p>{{sliderData[9].issue_title}}</p>\\n                                    </div>\\n                                </a>\\n                            </div>\\n                            <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(10))\\\"> \\n                                <a  [routerLink]=\\\"['/issues/'+sliderData[10].slug]\\\"  > \\n                                    <div class=\\\"picsum-img-wrapper\\\">\\n                                        <img [src]=\\\"getImage(sliderData[10].image)\\\" alt=\\\"No Image\\\">\\n                                    </div>\\n                                    <div class=\\\"carousel-caption\\\">\\n                                        <p>{{sliderData[10].issue_title}}</p>\\n                                    </div>\\n                                </a>\\n                            </div>    \\n                            <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(11))\\\"> \\n                                    <a  [routerLink]=\\\"['/issues/'+sliderData[11].slug]\\\"  > \\n                                        <div class=\\\"picsum-img-wrapper\\\">\\n                                            <img [src]=\\\"getImage(sliderData[11].image)\\\" alt=\\\"No Image\\\">\\n                                        </div>\\n                                        <div class=\\\"carousel-caption\\\">\\n                                            <p>{{sliderData[11].issue_title}}</p>\\n                                        </div>\\n                                    </a>\\n                                </div>                                          \\n                        </div>\\n                    </ng-template>        \\n                    \\n                    <ng-template ngbSlide *ngIf=\\\"sliderData && sliderData.hasOwnProperty(12)\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData.hasOwnProperty(12)\\\"> \\n                                    <a  [routerLink]=\\\"['/issues/'+sliderData[12].slug]\\\"  > \\n                                        <div class=\\\"picsum-img-wrapper ml-3\\\">\\n                                            <img [src]=\\\"getImage(sliderData[12].image)\\\" alt=\\\"No Image\\\">\\n                                        </div>\\n                                        <div class=\\\"carousel-caption\\\">\\n                                            <p>{{sliderData[12].issue_title}}</p>\\n                                        </div>\\n                                    </a>\\n                                </div>\\n                                <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(13))\\\"> \\n                                    <a  [routerLink]=\\\"['/issues/'+sliderData[13].slug]\\\"  > \\n                                        <div class=\\\"picsum-img-wrapper\\\">\\n                                            <img [src]=\\\"getImage(sliderData[13].image)\\\" alt=\\\"No Image\\\">\\n                                        </div>\\n                                        <div class=\\\"carousel-caption\\\">\\n                                            <p>{{sliderData[13].issue_title}}</p>\\n                                        </div>\\n                                    </a>\\n                                </div>\\n                                <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(14))\\\"> \\n                                    <a  [routerLink]=\\\"['/issues/'+sliderData[14].slug]\\\"  > \\n                                        <div class=\\\"picsum-img-wrapper\\\">\\n                                            <img [src]=\\\"getImage(sliderData[14].image)\\\" alt=\\\"No Image\\\">\\n                                        </div>\\n                                        <div class=\\\"carousel-caption\\\">\\n                                            <p>{{sliderData[14].issue_title}}</p>\\n                                        </div>\\n                                    </a>\\n                                </div>    \\n                                <div class=\\\"col-md-3 col-sm-3 img_class\\\" *ngIf=\\\"sliderData && (sliderData.hasOwnProperty(15))\\\"> \\n                                        <a  [routerLink]=\\\"['/issues/'+sliderData[15].slug]\\\"  > \\n                                            <div class=\\\"picsum-img-wrapper\\\">\\n                                                <img [src]=\\\"getImage(sliderData[15].image)\\\" alt=\\\"No Image\\\">\\n                                            </div>\\n                                            <div class=\\\"carousel-caption\\\">\\n                                                <p>{{sliderData[15].issue_title}}</p>\\n                                            </div>\\n                                        </a>\\n                                    </div>                                          \\n                            </div>\\n                        </ng-template>             \\n</ngb-carousel>\",\n                providers: [NgbModule, NgbCarouselConfig],\n                styles: [\"img{max-width:130px}.img_class:hover img{background:#000;padding:5px}\"]\n            }] }\n];\n/** @nocollapse */\nContentIssueSliderComponent.ctorParameters = () => [\n    { type: NgbCarouselConfig },\n    { type: RodmanCoreService }\n];\nContentIssueSliderComponent.propDecorators = {\n    sliderData: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    ContentIssueSliderComponent.prototype.sliderData;\n    /** @type {?} */\n    ContentIssueSliderComponent.prototype.showNavigationArrows;\n    /** @type {?} */\n    ContentIssueSliderComponent.prototype.showNavigationIndicators;\n    /** @type {?} */\n    ContentIssueSliderComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-rss-feeds/content-rss-feeds.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentRssFeedsService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @return {?}\n     */\n    rssFeeds(magazineId) {\n        return this.HttpClient.post(apiURL + 'contentsController/getContentType', { magazineId: magazineId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nContentRssFeedsService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nContentRssFeedsService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ ContentRssFeedsService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentRssFeedsService_Factory() { return new ContentRssFeedsService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: ContentRssFeedsService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentRssFeedsService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentRssFeedsService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-rss-feeds/content-rss-feeds.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentRssFeedsComponent {\n    /**\n     * @param {?} ActivatedRoute\n     * @param {?} Router\n     * @param {?} RodmanCoreService\n     * @param {?} ContentRssFeedsService\n     */\n    constructor(ActivatedRoute, Router, RodmanCoreService, ContentRssFeedsService) {\n        this.ActivatedRoute = ActivatedRoute;\n        this.Router = Router;\n        this.RodmanCoreService = RodmanCoreService;\n        this.ContentRssFeedsService = ContentRssFeedsService;\n        this.loading = true;\n        this.getAllAd = [];\n        this.baseUrl = apiURL;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ActivatedRoute.data.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.magazineId = data.magazineId;\n        }));\n        this.rssDataMethod();\n        this.RodmanCoreService.getAllAdst(this.magazineId).subscribe(((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.getAllAd = data;\n            this.viewAdRender = 1;\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    rssDataMethod() {\n        this.ContentRssFeedsService.rssFeeds(this.magazineId).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.rssData = data['country'];\n            this.loading = false;\n        }));\n    }\n}\nContentRssFeedsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-rss-feeds',\n                template: \"    <div class=\\\"col-md-12 col-sm-12 text-center\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n            <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n    </div>\\n\\n\\n    \\n        <!-- <div class=\\\"row mt-5\\\">\\n            <div class=\\\"col-md-2 col-sm-2\\\"></div> \\n            <div class=\\\"col-md-6 col-sm-6\\\">\\n                <h2> RSS Feeds </h2><br><br>         \\n                <h4> Content Types </h4><br>    \\n                \\n                <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n                    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                        <span class=\\\"sr-only\\\">Loading...</span>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"mt-2 mb-2\\\" *ngIf=\\\"!(loading)\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6 col-sm-6 p-2\\\" *ngFor=\\\"let contentType of rssData\\\">\\n                            <a target=\\\"_blank\\\" href=\\\"{{baseUrl+'feedcreator/rss/'+contentType.id+'/'+magazineId}}\\\"> {{contentType.tag.replace('_',\\\" \\\").replace('_',\\\" \\\") | uppercase}}</a>\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n            </div> \\n            <div class=\\\"col-md-3 col-sm-3\\\">                    \\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                </div>\\n                <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>                 \\n                <div class=\\\"col-md-12 col-sm-12 mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                </div>\\n                <div class=\\\"col-md-12 col-sm-12 mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                </div>\\n            </div>\\n            <div class=\\\"col-md-1 col-sm-1\\\"></div> \\n        </div> -->\\n    \\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <h2> RSS Feeds </h2><br><br>         \\n                    <h4> Content Types </h4><br>    \\n                    \\n                    <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n                        <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                            <span class=\\\"sr-only\\\">Loading...</span>\\n                        </div>\\n                    </div>\\n    \\n                    <div class=\\\"mt-2 mb-2\\\" *ngIf=\\\"rssData\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6 col-sm-6 p-2\\\" *ngFor=\\\"let contentType of rssData\\\">\\n                                <a target=\\\"_blank\\\" href=\\\"{{baseUrl+'feedcreator/rss/'+contentType.id+'/'+magazineId}}\\\"> {{contentType.tag.replace('_',\\\" \\\").replace('_',\\\" \\\") | uppercase}}</a>\\n                            </div>\\n                        </div>\\n                    </div>                                \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>                 \\n                    <div class=\\\"col-md-12 col-sm-12 mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"col-md-12 col-sm-12 mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div>\\n            </div>    \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>        \",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nContentRssFeedsComponent.ctorParameters = () => [\n    { type: ActivatedRoute },\n    { type: Router },\n    { type: RodmanCoreService },\n    { type: ContentRssFeedsService }\n];\nif (false) {\n    /** @type {?} */\n    ContentRssFeedsComponent.prototype.loading;\n    /** @type {?} */\n    ContentRssFeedsComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentRssFeedsComponent.prototype.getAllAd;\n    /** @type {?} */\n    ContentRssFeedsComponent.prototype.viewAdRender;\n    /** @type {?} */\n    ContentRssFeedsComponent.prototype.rssData;\n    /** @type {?} */\n    ContentRssFeedsComponent.prototype.baseUrl;\n    /** @type {?} */\n    ContentRssFeedsComponent.prototype.ActivatedRoute;\n    /** @type {?} */\n    ContentRssFeedsComponent.prototype.Router;\n    /** @type {?} */\n    ContentRssFeedsComponent.prototype.RodmanCoreService;\n    /** @type {?} */\n    ContentRssFeedsComponent.prototype.ContentRssFeedsService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/content-lists/content-lists.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nconst ɵ0$1 = [];\n/** @type {?} */\nconst contentDataView$1 = [\n    { status: 'Fail', data: ɵ0$1, message: '', video: [], magazine_id: '' },\n];\nclass ContentListsComponent {\n    /**\n     * @param {?} ViewContentService\n     * @param {?} config\n     * @param {?} ContentBoxTabService\n     * @param {?} RodmanCoreService\n     * @param {?} Router\n     */\n    constructor(ViewContentService, config, ContentBoxTabService, RodmanCoreService, Router) {\n        this.ViewContentService = ViewContentService;\n        this.ContentBoxTabService = ContentBoxTabService;\n        this.RodmanCoreService = RodmanCoreService;\n        this.Router = Router;\n        this.contentPageUrl = '/contents/view_breaking-news/2019-08-11/rye-may-stabilize-blood-sugar-levels-and-decrease-cardiovascular-disease-risk/';\n        this.magazineId = 1;\n        this.ads = [];\n        this.dataFetch = false;\n        this.displayDefault = 0;\n        this.contentDataView = contentDataView$1;\n        this.selectedContentView = contentDataView$1[0];\n        this.loading = true;\n        this.dataFetch = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.viewData();\n    }\n    /**\n     * @param {?} contentDataView\n     * @return {?}\n     */\n    selectView(contentDataView) {\n        this.selectedContentView = contentDataView;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.getads();\n        // this.viewData();\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        return this.RodmanCoreService.safeHtml(data);\n    }\n    /**\n     * @return {?}\n     */\n    viewData() {\n        if ((this.dataFetch) == false) {\n            this.ViewContentService.getContentDetails(this.magazineId, this.contentPageUrl).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            (data) => {\n                this.dataFetch = true;\n                this.contentData = data['data'];\n                this.contentDataView[0] = data['data'];\n                this.page = data['data'].slug;\n                this.displayDefault = 1;\n                this.loading = false;\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    check() {\n        this.dataFetch = false;\n    }\n    /**\n     * @return {?}\n     */\n    getads() {\n        this.RodmanCoreService.getAllAdst(this.magazineId).subscribe(((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.ads = data;\n        })));\n    }\n}\nContentListsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-content-lists',\n                template: \"<div class=\\\"col-md-12 col-sm-12 text-center\\\" >\\n    <CoreLib-ads-display [ads]=\\\"ads\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div >\\n                <CoreLib-ads-display [ads]=\\\"ads\\\" location='left_site_ad'></CoreLib-ads-display>\\n            </div>\\n        </div>\\n        <div class=\\\"col-6 mt-5 \\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"contentDataView[0]\\\">\\n\\n                <div class=\\\"col-md-8\\\">\\n                    <div *ngIf=\\\"contentDataView[0]\\\">\\n                        <div class=\\\"container mb-3 mt-4\\\" id=\\\"default\\\"  *ngFor=\\\"let contentData of contentDataView[0]\\\">\\n                            <h3> {{ contentData.slug.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h3>\\n                            <h1 id=\\\"default\\\">{{contentData.title}}</h1>\\n                            <h5>{{contentData.summary}}</h5>\\n                          \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\" col-sm-6 col-md-6 border-dark border-top border-bottom mt-1 mb-1 pt-1 pb-1 ml-4\\\">\\n                                    <b> <!-- {{ extractNameFromJson(contentData.author_name) }}  -->\\n                                        {{contentData.publish_date | date : \\\"MMM dd , yyyy\\\"}} </b>\\n                                </div>\\n                            </div> \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-7\\\" [innerHtml]=\\\"safeHtml(contentData.body)\\\"></div>                                \\n                                <!-- Related Content  Box -->\\n                                <div class=\\\"col-md-5\\\">\\n                                    <CoreLib-content-related *ngIf=\\\"contentDataView[0]\\\" magazineId={{contentData.magazine_id}} contentId='{{contentData.id}}' ></CoreLib-content-related>           \\n                                </div>                            \\n                            </div>\\n                        </div>                   \\n                    </div>          \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\" *ngIf=\\\"contentDataView[0]\\\">\\n                        <CoreLib-content-box-tabs  *ngFor=\\\"let contentData of contentDataView[0]\\\" magazineId={{contentData.magazine_id}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\"  >\\n                        <CoreLib-ads-display [ads]=\\\"ads\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n\\n        <div class=\\\"col\\\">\\n            <div >\\n                <CoreLib-ads-display [ads]=\\\"ads\\\" location='right_site_ad'></CoreLib-ads-display>\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n<!-- Related Searches -->\\n<!-- <div class=\\\"row\\\" *ngFor=\\\"let contentData of contentDataView[0]\\\">\\n    <div class=\\\"col-md-2 col-sm-2\\\"></div>\\n    <div class=\\\"col-md-6 col-sm-offset-6\\\" >\\n        <CoreLib-content-related-searches [dataArray]=\\\"contentData.RELATED_SEARCHES\\\"></CoreLib-content-related-searches>\\n    </div>\\n    <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n</div> -->\\n\\n<!-- Slider Show -->\\n<div class=\\\"row\\\" *ngFor=\\\"let contentData of contentDataView[0]\\\">\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div> -->\\n    <div  *ngIf=\\\"contentData.content_type_id != 2653\\\" >\\n        <CoreLib-content-suggest-slide-show  magazineId ={{contentData.magazine_id}} contentId={{contentData.id}} > </CoreLib-content-suggest-slide-show>\\n    </div>\\n    <!-- <div class=\\\"col-md-1 col-sm-1\\\"></div>  -->\\n</div>   \\n    \\n    <!-- Related Content -->\\n<div class=\\\"row\\\" *ngFor=\\\"let contentData of contentDataView[0]\\\" >\\n    <div class=\\\"col-sm-2 col-md-2\\\" ></div>\\n    <div class=\\\"col-sm-6 col-md-6\\\" >\\n        <CoreLib-content-related-content-list routeUrl=\\\"\\\" magazineId={{contentData.magazine_id}} contentType={{contentData.content_type_id}}></CoreLib-content-related-content-list>\\n    </div>\\n    <div class=\\\"col-sm-4 col-md-4\\\" ></div>    \\n</div>  \",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nContentListsComponent.ctorParameters = () => [\n    { type: ContentViewService },\n    { type: NgbCarouselConfig },\n    { type: ContentBoxTabsService },\n    { type: RodmanCoreService },\n    { type: Router }\n];\nif (false) {\n    /** @type {?} */\n    ContentListsComponent.prototype.contentPageUrl;\n    /** @type {?} */\n    ContentListsComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentListsComponent.prototype.contentData;\n    /** @type {?} */\n    ContentListsComponent.prototype.page;\n    /** @type {?} */\n    ContentListsComponent.prototype.ads;\n    /** @type {?} */\n    ContentListsComponent.prototype.dataFetch;\n    /** @type {?} */\n    ContentListsComponent.prototype.displayDefault;\n    /** @type {?} */\n    ContentListsComponent.prototype.contentDataView;\n    /** @type {?} */\n    ContentListsComponent.prototype.selectedContentView;\n    /** @type {?} */\n    ContentListsComponent.prototype.loading;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentListsComponent.prototype.ViewContentService;\n    /** @type {?} */\n    ContentListsComponent.prototype.ContentBoxTabService;\n    /** @type {?} */\n    ContentListsComponent.prototype.RodmanCoreService;\n    /** @type {?} */\n    ContentListsComponent.prototype.Router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/contents-webinar/contents-webinar.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentsWebinarComponent {\n    /**\n     * @param {?} ListContentService\n     * @param {?} RodmanCoreService\n     * @param {?} Router\n     * @param {?} ActivatedRoute\n     */\n    constructor(ListContentService, RodmanCoreService, Router, ActivatedRoute) {\n        this.ListContentService = ListContentService;\n        this.RodmanCoreService = RodmanCoreService;\n        this.Router = Router;\n        this.ActivatedRoute = ActivatedRoute;\n        this.limit = 10;\n        this.page = 0;\n        this.loading = true;\n        this.getAllAd = [];\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationEnd) {\n                this.currentURL = event.url;\n                if (this.currentURL == '/contents/list_webinars') {\n                    this.currentURL = '';\n                    this.contentType = '2542';\n                }\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ActivatedRoute.data.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.magazineId = data.magazineId;\n        }));\n        this.getContentData();\n        this.getads();\n    }\n    /**\n     * @param {?} imageId\n     * @return {?}\n     */\n    getImage(imageId) {\n        return this.RodmanCoreService.displayImageUrl(imageId);\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        return data.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    }\n    /**\n     * @return {?}\n     */\n    getContentData() {\n        this.ListContentService.getContent(this.currentURL, this.magazineId, this.limit, this.page, this.contentType).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.listContentData = data['data'];\n            if (this.page == 0) {\n                this.slugHeading = data['contentTypeName'];\n            }\n            this.page = data['page'] + 1;\n            this.loading = false;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    getads() {\n        this.RodmanCoreService.getAllAdst(this.magazineId).subscribe(((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.getAllAd = data;\n            this.viewAdRender = 1;\n        })));\n    }\n}\nContentsWebinarComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-contents-webinar',\n                template: \"\\n\\n\\n\\n<div class=\\\"text-center\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    \\n                    <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n                        <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                            <span class=\\\"sr-only\\\">Loading...</span>\\n                        </div>\\n                    </div>\\n\\n                    <div *ngIf=\\\"(!loading)  && ((contentType=='2542' && (currentURL == '')) || (currentURL == '/contents/list_ebook') )\\\">     <div class=\\\"heading-border mb-2\\\" id=\\\"webinars\\\"><h2>{{ slugHeading.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h2></div>    \\n                    <div class=\\\"border-bottom\\\" *ngFor=\\\"let Data of listContentData; let i =index\\\" >\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-2 col-md-2\\\"><img class=\\\"img-responsive Webinars\\\"  [src]=\\\"getImage(Data.primary_image)\\\" alt=\\\"No Image\\\"> </div>\\n                            <div class=\\\"col-sm-10 col-md-10\\\">\\n                                <h1><div [innerHTML]=\\\"safeHtml(Data.title)\\\"> </div></h1>\\n                                <div [innerHTML]=\\\"Data.body\\\"></div>\\n                            </div>\\n                        </div>   \\n                    </div>\\n                </div>           \\n                </div>\\n                <div class=\\\"col-md-4 mt-5\\\">\\n                    <div class=\\\"mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n    \\n    \",\n                styles: [\".heading-border{border-bottom:1px solid #000;color:#000}.container{min-height:500px}.Webinars{max-width:100%;min-width:100px}\"]\n            }] }\n];\n/** @nocollapse */\nContentsWebinarComponent.ctorParameters = () => [\n    { type: ListContentService },\n    { type: RodmanCoreService },\n    { type: Router },\n    { type: ActivatedRoute }\n];\nif (false) {\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.currentURL;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.contentType;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.magazineId;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.slugHeading;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.limit;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.page;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.listContentData;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.loading;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.getAllAd;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.viewAdRender;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.ListContentService;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.RodmanCoreService;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.Router;\n    /** @type {?} */\n    ContentsWebinarComponent.prototype.ActivatedRoute;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/contents/contents.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentsModule {\n}\nContentsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [ListContentComponent, StaticContentComponent, ContentViewComponent, ContentDynamicViewComponent, ContentInfographicsComponent, ContentSearchComponent, ContentRelatedComponent, ContentSuggestSlideShowComponent, ContentBoxTabsComponent, ContentDefaultComponent, ContentJobsComponent, ContentFeatureComponent, ContentVideoComponent, ContentWebinarsComponent, ContentFormularyComponent, ContentBuyerGuideBasicComponent, ContentBuyerGuideMicroSiteComponent, ContentSlideShowComponent, ContentStaticContentComponent, ContentWhitePaperComponent, ContentNewsReleaseComponent, ContentCompanyRelatedComponent, ContentRelatedContentListComponent, ContentRelatedSearchesComponent, ContentGlossaryComponent, ContentIssueComponent, ContentIssueSliderComponent, ContentRssFeedsComponent, ContentListsComponent, ContentsWebinarComponent],\n                imports: [\n                    CommonModule,\n                    // FormsModule,\n                    ContentsRoutingModule,\n                    NgbModule,\n                    NgbDatepickerModule,\n                    NgbModule,\n                    CarouselModule.forRoot(),\n                    AdsModule,\n                    SitesModule,\n                    UsersModule,\n                    DfpModule.forRoot({\n                        idleLoad: true,\n                        enableVideoAds: true,\n                        personalizedAds: true,\n                        // Request personalized ads by default\n                        singleRequestMode: true,\n                        // Only applies to initial refresh\n                        onSameNavigation: 'refresh',\n                        globalTargeting: {\n                        // food: ['NUT', 'HOME']\n                        }\n                    })\n                ],\n                exports: [ListContentComponent, StaticContentComponent, ContentViewComponent, ContentDynamicViewComponent, ContentInfographicsComponent, ContentSearchComponent, ContentRelatedComponent, ContentSuggestSlideShowComponent, ContentBoxTabsComponent, ContentDefaultComponent, ContentRelatedContentListComponent, ContentGlossaryComponent, ContentIssueComponent, ContentIssueSliderComponent, ContentRssFeedsComponent, ContentListsComponent, ContentWebinarsComponent],\n                providers: [{ provide: NgbModule }],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/taxonomies/taxonomies-routing.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst routes$5 = [];\nclass TaxonomiesRoutingModule {\n}\nTaxonomiesRoutingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [RouterModule.forChild(routes$5)],\n                exports: [RouterModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/taxonomies/list-taxonomies/list-taxonomies.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ListTaxonomiesService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} slug\n     * @param {?} magazineId\n     * @param {?} limit\n     * @param {?} page\n     * @param {?} contentType\n     * @return {?}\n     */\n    getContent(slug, magazineId, limit, page, contentType) {\n        return this.HttpClient.post(apiURL + 'taxonomysController/getContentTaxonomys', { pageUrl: slug, magazineId: magazineId, limit: limit, page: page, contentType: contentType }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n    /**\n     * @param {?} slug\n     * @param {?} magazineId\n     * @return {?}\n     */\n    getContentTopTaxonomy(slug, magazineId) {\n        return this.HttpClient.post(apiURL + 'taxonomysController/getTopTaxonomys', { pageUrl: slug, magazineId: magazineId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n    /**\n     * @param {?} contentId\n     * @param {?} magazineId\n     * @return {?}\n     */\n    getContentTaxonomy(contentId, magazineId) {\n        return this.HttpClient.post(apiURL + 'taxonomysController/getContentTaxonomyTagged', { contentId: contentId, magazineId: magazineId }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nListTaxonomiesService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nListTaxonomiesService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ ListTaxonomiesService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ListTaxonomiesService_Factory() { return new ListTaxonomiesService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: ListTaxonomiesService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ListTaxonomiesService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListTaxonomiesService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/taxonomies/list-taxonomies/list-taxonomies.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ListTaxonomiesComponent {\n    /**\n     * @param {?} Router\n     * @param {?} RouterModule\n     * @param {?} ListTaxonomiesService\n     * @param {?} RodmanCoreService\n     */\n    constructor(Router, RouterModule, ListTaxonomiesService, RodmanCoreService) {\n        this.Router = Router;\n        this.RouterModule = RouterModule;\n        this.ListTaxonomiesService = ListTaxonomiesService;\n        this.RodmanCoreService = RodmanCoreService;\n        this.taxonomyData = [];\n        this.limit = 10;\n        this.page = 0;\n        this.contentType = '';\n        this.loading = true;\n        this.sliderData = [];\n        this.staticUrl = '/';\n        this.tagTaxonomy = [];\n        this.all = [];\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationEnd) {\n                this.currentURL = event.url;\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.magazineId == 1) {\n            this.staticUrl = '/knowledge-center/';\n        }\n        // this.getTaxonomyData();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.loading = true;\n        this.page = 0;\n        this.all = [];\n        this.slugHeading;\n        this.taxonomyData = [];\n        this.sliderData = [];\n        this.contentTaxonomy = [];\n        this.getTaxonomyData();\n    }\n    /**\n     * @return {?}\n     */\n    getTaxonomyData() {\n        this.taxonomyUrl = this.routeUrl.split('/');\n        this.taxonomyUrlTo = this.taxonomyUrl[1];\n        /** @type {?} */\n        let cleanUrl = this.routeUrl.replace('/', \"\");\n        if (this.page == 0) {\n            this.ListTaxonomiesService.getContentTopTaxonomy(cleanUrl, this.magazineId).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            (data) => {\n                this.contentTaxonomy = data['CONTENT_TAXONOMYS'];\n                // this.slugHeading = data['contentTypeName'];\n                this.all = data['all'];\n            }));\n        }\n        this.ListTaxonomiesService.getContent(cleanUrl, this.magazineId, this.limit, this.page, this.contentType).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.listTaxonomyData = data['data'];\n            if (this.page == 0) {\n                this.slugHeading = data['contentTypeName'];\n                // this.contentTaxonomy = data['CONTENT_TAXONOMYS'];\n                this.sliderData.push(this.listTaxonomyData);\n            }\n            this.page = data['page'] + 1;\n            for (let taxonomy of this.listTaxonomyData) {\n                this.taxonomyData.push(taxonomy);\n            }\n            this.loading = false;\n        }));\n    }\n    /**\n     * @param {?} slug\n     * @return {?}\n     */\n    routing(slug) {\n        this.Router.navigateByUrl(this.taxonomyUrlTo + '/' + slug);\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        return data.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    }\n    /**\n     * @param {?} imageId\n     * @return {?}\n     */\n    getImage(imageId) {\n        return this.RodmanCoreService.displayImageUrl(imageId);\n    }\n    /**\n     * @return {?}\n     */\n    loadMoreData() {\n        this.loading = true;\n        this.getTaxonomyData();\n    }\n}\nListTaxonomiesComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-list-taxonomies',\n                inputs: ['routeUrl', 'magazineId',],\n                template: \"<div class=\\\"container mt-5\\\"  >\\n    <div class=\\\"row\\\" >\\n        <div class=\\\"col-md-12 col-sm-12\\\" >\\n            <CoreLib-slider [data]=\\\"sliderData\\\"></CoreLib-slider>\\n        </div>\\n    </div>\\n    <div class=\\\"mb-2\\\" *ngIf=\\\"slugHeading\\\"><h2> {{ slugHeading.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h2></div>\\n    <span *ngIf=\\\"all.length\\\">\\n        <span class=\\\"taxonomy-text\\\" ><a  [routerLink]=\\\"['/'+all.url]\\\">{{all.tag}}</a></span> \\n    </span>    \\n    <span  *ngFor=\\\"let taxonomyTitle of contentTaxonomy;let k = index;\\\" class=\\\"taxonomy-text\\\">\\n        <a *ngIf=\\\"(magazineId != 1)\\\" [routerLink]=\\\"['/'+taxonomyUrlTo+'/'+taxonomyTitle.slug]\\\"  > {{taxonomyTitle.tag}}  </a>\\n        <a *ngIf=\\\"(magazineId == 1)\\\" [routerLink]=\\\"['/'+taxonomyUrlTo+'/'+taxonomyTitle.url]\\\"  > {{taxonomyTitle.tag}}  </a>\\n    </span>\\n    <div class=\\\"heading-border\\\"></div>\\n    <div  *ngIf=\\\"taxonomyData?.length > 0\\\">\\n        <div *ngFor=\\\"let Data of taxonomyData; let i =index\\\">\\n            <div class=\\\"col-md-12 col-sm-12\\\">\\n                <div class=\\\"row\\\">       \\n                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                        <span *ngFor=\\\"let taxonomy of Data.taggedTaxonomy.KNOWLEDGE_CENTER_TAXONOMY | slice:0:5; let j =index\\\">\\n                            <span *ngIf=\\\"j\\\"> | </span>\\n                            <a  [routerLink]=\\\"[staticUrl+taxonomy.url]\\\"  > {{taxonomy.tag}}  </a>\\n                        </span>                       \\n                        <!-- <span *ngFor=\\\"let taxonomy of Data.taggedTaxonomy.NEWS_TAXONOMY; let z =index\\\">\\n                            <a *ngIf=\\\"magazineId != 1\\\" [routerLink]=\\\"['/'+taxonomy.url]\\\"  > {{taxonomy.tag}}   </a> \\n                            <a *ngIf=\\\"magazineId == 1\\\"  [routerLink]=\\\"['/'+staticUrl+taxonomy.url]\\\"  > {{taxonomy.tag}}  </a>  |\\n                        </span> -->\\n                    </div>                          \\n                    <div class=\\\"col-md-9 col-sm-9\\\">\\n                        \\n                        <h4 class=\\\"mt-2\\\"><a [routerLink]=\\\"[Data.viewUrl]\\\"><b><div [innerHTML]=\\\"safeHtml(Data.title)\\\"> </div></b></a></h4> \\n                        <h6 class=\\\"mt-3\\\" [innerHTML]=\\\"safeHtml(Data.summary)\\\"></h6>\\n                        <div class=\\\"mt-2\\\"> \\n                            <small *ngIf=\\\"Data.publish_date\\\">{{ Data.publish_date| date : \\\"MMM dd , yyyy\\\"}}</small>\\n                            <span *ngIf=\\\"Data.firstName\\\"> . <small> <b> {{Data.firstName}} {{Data.lastName}}</b> </small></span> \\n                        </div>    \\n                    </div>\\n                    <div class=\\\"col-md-3 col-sm-3\\\" *ngIf=\\\"Data.primary_image\\\">\\n                        <img class=\\\"img-scale\\\" [src]=\\\"getImage(Data.primary_image)\\\" alt=\\\"\\\"> \\n                    </div>\\n                </div>\\n            </div>   \\n            <div id=\\\"ads\\\" *ngIf=\\\"(i % 3 == 0) && (i > 2)\\\" ><hr>\\n                <div class=\\\"col-md-12 col-sm-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <CoreLib-ads-double-click magazineId={{magazineId}} no=\\\"1\\\" location={{currentURL}}></CoreLib-ads-double-click>\\n                    </div>\\n                </div>\\n            </div><hr>  \\n        </div>    \\n    </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"container mt-5 mb-3\\\" *ngIf=\\\"taxonomyData?.length > 0\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"taxonomyData?.length > 9 \\\"> \\n        <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n            <div class=\\\"col-md-4 col-sm-4\\\">    <button class=\\\"text-center button\\\"  (click)=\\\"loadMoreData()\\\">Load More</button></div>\\n        <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n    </div>    \\n</div>\",\n                styles: [\".img-scale{max-width:150px}.heading-border{border-bottom:1px solid #000;color:#000}.search-results{overflow:scroll}.pointer:hover{cursor:pointer;text-decoration:underline}.loader-height{min-height:800px}.taxonomy-text{font-size:15px;background-color:#f2f2f2;font-weight:501;text-transform:uppercase;margin-right:15px;margin-bottom:10px;display:inline-block;letter-spacing:1px}#ads,.taxonomy-text a{padding:10px}\"]\n            }] }\n];\n/** @nocollapse */\nListTaxonomiesComponent.ctorParameters = () => [\n    { type: Router },\n    { type: RouterModule },\n    { type: ListTaxonomiesService },\n    { type: RodmanCoreService }\n];\nif (false) {\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.routeUrl;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.magazineId;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.taxonomyData;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.listTaxonomyData;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.test;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.slugHeading;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.limit;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.page;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.contentType;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.contentTaxonomy;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.taxonomyUrl;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.taxonomyUrlTo;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.loading;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.currentURL;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.sliderData;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.staticUrl;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.tagTaxonomy;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.all;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.Router;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.RouterModule;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListTaxonomiesComponent.prototype.ListTaxonomiesService;\n    /** @type {?} */\n    ListTaxonomiesComponent.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/taxonomies/taxonomies.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TaxonomiesModule {\n}\nTaxonomiesModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [ListTaxonomiesComponent],\n                imports: [\n                    CommonModule,\n                    AdsModule,\n                    SitesModule,\n                    TaxonomiesRoutingModule,\n                    HttpClientModule, FormsModule, ReactiveFormsModule, RouterModule\n                ],\n                exports: [ListTaxonomiesComponent, RouterModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directory-section/directory-section-routing.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst routes$6 = [];\nclass DirectorySectionRoutingModule {\n}\nDirectorySectionRoutingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [RouterModule.forRoot(routes$6, {\n                        anchorScrolling: 'enabled',\n                    })],\n                exports: [RouterModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directory-section/directory-home-page/directory-home-page.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DirectoryHomePageService {\n    /**\n     * @param {?} HttpClient\n     * @param {?} RodmanCoreService\n     */\n    constructor(HttpClient, RodmanCoreService) {\n        this.HttpClient = HttpClient;\n        this.RodmanCoreService = RodmanCoreService;\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} slug\n     * @return {?}\n     */\n    buyerGuideCompany(magazineId, slug) {\n        return this.HttpClient.post(apiURL + 'taxonomysController/buyersguideSearchDirectory', { magazineId: magazineId, slug: slug }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} slug\n     * @return {?}\n     */\n    buyersguideCategory(magazineId, slug) {\n        return this.HttpClient.post(apiURL + 'taxonomysController/buyersguideCategory', { magazineId: magazineId, slug: slug }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n    /**\n     * @param {?} magazineId\n     * @param {?} slug\n     * @return {?}\n     */\n    buyersguideCountry(magazineId, slug) {\n        return this.HttpClient.post(apiURL + 'taxonomysController/buyersguideCountry', { magazineId: magazineId, slug: slug }, httpOptions).pipe(catchError(this.RodmanCoreService.handleError));\n    }\n}\nDirectoryHomePageService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nDirectoryHomePageService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: RodmanCoreService }\n];\n/** @nocollapse */ DirectoryHomePageService.ngInjectableDef = ɵɵdefineInjectable({ factory: function DirectoryHomePageService_Factory() { return new DirectoryHomePageService(ɵɵinject(HttpClient), ɵɵinject(RodmanCoreService)); }, token: DirectoryHomePageService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DirectoryHomePageService.prototype.HttpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    DirectoryHomePageService.prototype.RodmanCoreService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directory-section/directory-home-page/directory-home-page.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DirectoryHomePageComponent {\n    /**\n     * @param {?} ActivatedRoute\n     * @param {?} DirectoryHomePageService\n     * @param {?} RodmanCoreService\n     * @param {?} Router\n     */\n    constructor(ActivatedRoute, DirectoryHomePageService, RodmanCoreService, Router) {\n        this.ActivatedRoute = ActivatedRoute;\n        this.DirectoryHomePageService = DirectoryHomePageService;\n        this.RodmanCoreService = RodmanCoreService;\n        this.Router = Router;\n        this.getAllAd = [];\n        this.alphabet = [];\n        this.loading = true;\n        this.current_letter = '';\n        this.companiesTitleArray = {\n            '1': { '0': 'Featured Supplier Showcase Companies', '1': 'Supplier Showcase Companies', '2': 'Featured Companies' },\n            '5': { '0': 'Featured Company Capabilities Microsite', '1': 'Company Capabilities Microsite', '2': 'Featured Companies' },\n            '6': { '0': 'Featured Company Profiles Microsite', '1': 'Company Profiles Microsite', '2': 'Featured Companies' },\n            '7': { '0': 'Featured Microsite Companies', '1': 'Microsite Companies', '2': 'Featured Companies' },\n            '8': { '0': 'Featured Company Profiles Microsite', '1': 'Company Profiles Microsite', '2': 'Featured Companies' },\n            '9': { '0': 'Featured Corporate Profile Microsite', '1': 'Corporate Profile Microsite', '2': 'Featured Companies' },\n            '10': { '0': 'Featured Technical Profile Microsite', '1': 'Technical Profile Microsite', '2': 'Featured Companies' },\n            '11': { '0': 'Featured Microsite Companies', '1': 'Microsite Companies', '2': 'Featured Companies' },\n            '12': { '0': 'Featured Microsite Companies', '1': 'Microsite Companies', '2': 'Featured Companies' },\n            '13': { '0': 'Company Profile MicrositePLUS', '1': 'Company Profile Microsite', '2': 'Featured Companies' },\n            '14': { '0': 'Featured Microsite Companies', '1': 'Microsite Companies', '2': 'Featured Companies' },\n            '15': { '0': 'Featured Technical Profile Microsite', '1': 'Technical Profile Microsite', '2': 'Featured Companies' },\n        };\n        this.featuredmicrositeCompanies = [];\n        this.micrositeCompanies = [];\n        this.featuredBgCompanies = [];\n        Router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event instanceof NavigationEnd) {\n                this.currentURL = event.url;\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ActivatedRoute.data.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.magazineId = data.magazineId;\n        }));\n        this.getPageAd();\n        this.buyersguideCategory();\n        this.buyerGuideCompany();\n        this.buyersguideCountry();\n    }\n    /**\n     * @return {?}\n     */\n    getPageAd() {\n        this.RodmanCoreService.getAllAdst(this.magazineId).subscribe(((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.getAllAd = data;\n            this.viewAdRender = 1;\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    buyerGuideCompany() {\n        this.DirectoryHomePageService.buyerGuideCompany(this.magazineId, this.currentURL).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.data = data['data'];\n            for (let compnayCheck of this.data) {\n                if ((compnayCheck.has_microsite_listing == 1) && (compnayCheck.has_priority_listing == 1) && (compnayCheck.has_featured_mircosite_listing == 1)) {\n                    this.featuredmicrositeCompanies.push(compnayCheck);\n                }\n                else if ((compnayCheck.has_microsite_listing == 1) && (compnayCheck.has_priority_listing == 1) && (compnayCheck.has_featured_mircosite_listing == 0)) {\n                    this.micrositeCompanies.push(compnayCheck);\n                }\n                else if ((compnayCheck.has_microsite_listing == 0) && (compnayCheck.has_priority_listing == 1) && (compnayCheck.has_featured_mircosite_listing == 0)) {\n                    this.featuredBgCompanies.push(compnayCheck);\n                    // let checkCompanyTitle = compnayCheck.content_type_id;\n                    // if(checkCompanyTitle != this.titleCheck ){}\n                }\n                if (compnayCheck.title.charAt(0).toUpperCase() != this.current_letter) {\n                    this.current_letter = compnayCheck.title.charAt(0).toUpperCase();\n                    this.alphabet.push(compnayCheck.title.charAt(0).toUpperCase());\n                }\n            }\n            this.loading = false;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    buyersguideCategory() {\n        this.DirectoryHomePageService.buyersguideCategory(this.magazineId, this.currentURL).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.buyersGuideCategoryData = data['data'];\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    buyersguideCountry() {\n        this.DirectoryHomePageService.buyersguideCountry(this.magazineId, this.currentURL).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.buyersguideCountryData = data['country'];\n            console.log(this.buyersguideCountryData);\n        }));\n    }\n    /**\n     * @param {?} current\n     * @param {?} pre\n     * @return {?}\n     */\n    matchCharacter(current, pre) {\n        if (current.charAt(0).toUpperCase() != pre) {\n            this.current_letter = current.charAt(0);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        return data.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    }\n}\nDirectoryHomePageComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-directory-home-page',\n                template: \"\\n\\n\\n<div class=\\\"text-center\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n    </div>\\n    <div class=\\\"container-fluid\\\">\\n    \\n        <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div *ngIf=\\\"viewAdRender == 1\\\">\\n                        <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n                    </div>\\n                </div>\\n                <div class=\\\"col-8 mt-5 \\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12 col-md-12\\\"><h3>All Companies</h3></div>\\n                        <div class=\\\"col-sm-4 col-md-4\\\">\\n                            <div class=\\\"border\\\">\\n                                <!-- <CoreLib-directory-search-box [title]=\\\"\\\" [magazineId]=\\\"\\\" [data]=\\\"\\\"></CoreLib-directory-search-box> -->\\n                                <div *ngIf=\\\"buyersGuideCategoryData?.length > 0 \\\">\\n                                    <div class=\\\"border\\\"> <h5>SEARCH BY...</h5> </div>\\n                                    <div class=\\\"back-color\\\" [innerHTML]=\\\"safeHtml(buyersGuideCategoryData[0][0].tag)\\\"></div>\\n                                    <div class=\\\"country\\\">\\n                                        <div class=\\\"row ml-1\\\" *ngFor=\\\"let bgCatData of buyersGuideCategoryData[0][0].child\\\">\\n\\n                                            <div *ngIf=\\\"bgCatData.count != 0 \\\" class=\\\"col-sm-9 col-md-9\\\" [innerHTML]=\\\"safeHtml(bgCatData.tag)\\\"></div>\\n                                            <div *ngIf=\\\"bgCatData.count != 0 \\\" class=\\\"col-sm-3 col-md-3\\\" >({{bgCatData.count}})</div>\\n\\n                                        </div> \\n                                    </div>    \\n                                </div>\\n                                <div *ngIf=\\\"buyersguideCountryData?.length > 0 \\\">\\n                                    <div class=\\\"back-color\\\" >Country</div>\\n                                    <div class=\\\"country\\\">\\n                                        <div class=\\\"row ml-1\\\" *ngFor=\\\"let countryData of buyersguideCountryData\\\">\\n                                            <div *ngIf=\\\"countryData.count != 0\\\" class=\\\"col-sm-9 col-md-9\\\" [innerHTML]=\\\"safeHtml(countryData.name)\\\"></div>\\n                                            <div class=\\\"col-sm-3 col-md-3\\\" *ngIf=\\\"(countryData.child) && (countryData.count != 0)\\\">\\n                                                ({{countryData.child ? countryData.child.length: '' }})  </div>\\n                                        </div> \\n                                    </div>    \\n                                </div>                          \\n                            </div>\\n                            <div class=\\\"mt-1\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>  \\n                            </div>\\n                            <div class=\\\"mt-1\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>\\n                            </div>\\n                            <div class=\\\"mt-1\\\" *ngIf=\\\"viewAdRender == 1\\\">                                \\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>\\n                            </div>\\n            \\n                        </div>\\n                        <div class=\\\"col-sm-8 col-md-8\\\">\\n    \\n                            <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n                                <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                                    <span class=\\\"sr-only\\\">Loading...</span>\\n                                </div>\\n                            </div>\\n                            \\n                            <!-- 1st -->\\n                            <div *ngIf=\\\"featuredmicrositeCompanies?.length > 0 \\\"><h3>{{companiesTitleArray[magazineId][0]}}</h3></div>\\n                            <div class=\\\"row mt-3 mb-3\\\" *ngFor=\\\"let featuredmicrositeCompaniesData of featuredmicrositeCompanies;let i = index\\\">                        \\n                                <div class=\\\"col-sm-3 col-md-3\\\">\\n                                    <img [src]=\\\"featuredmicrositeCompaniesData.primary_image_main\\\" width=\\\"100%\\\">\\n                                </div>\\n                                <div class=\\\"col-sm-6 col-md-6\\\">\\n                                    <a [routerLink]=\\\"['/'+featuredmicrositeCompaniesData.viewUrl]\\\">{{featuredmicrositeCompaniesData.title}}</a>\\n                                </div>\\n                                <div class=\\\"col-sm-3 col-md-3\\\">\\n                                    <a [routerLink]=\\\"['/'+featuredmicrositeCompaniesData.viewUrl]\\\">View Listing</a>\\n                                </div>                         \\n                            </div>\\n                            <!-- 2nd -->\\n                            <div class=\\\"mt-2\\\" *ngIf=\\\"featuredmicrositeCompanies?.length > 0 \\\"><h3>{{companiesTitleArray[magazineId][1]}}</h3></div>\\n                            <div class=\\\"row mt-3 mb-3\\\" *ngFor=\\\"let micrositeCompanies of micrositeCompanies;let i = index\\\">                        \\n                                <div class=\\\"col-sm-3 col-md-3\\\">\\n                                    <img [src]=\\\"micrositeCompanies.primary_image_main\\\" width=\\\"100%\\\">\\n                                </div>\\n                                <div class=\\\"col-sm-6 col-md-6\\\">\\n                                    <a [routerLink]=\\\"['/'+micrositeCompanies.viewUrl]\\\" >{{micrositeCompanies.title}}</a>\\n                                </div>\\n                                <div class=\\\"col-sm-3 col-md-3\\\">\\n                                    <a [routerLink]=\\\"['/'+micrositeCompanies.viewUrl]\\\">View Listing</a>\\n                                </div>                         \\n                            </div>                        \\n    \\n    \\n                            <!-- 3rd -->\\n                            <div class=\\\"mt-2\\\" *ngIf=\\\"featuredBgCompanies?.length > 0 \\\">\\n                                \\n                                <ng-container *ngIf=\\\"(magazineId == 5 ) || (magazineId == 13);else defaultView\\\">\\n                                    <ng-container *ngIf=\\\"featuredBgCompanies[0].content_type_id == '2666'\\\">  \\n                                        <h3>Deluxe Companies</h3>\\n                                    </ng-container>\\n                                    <ng-container *ngIf=\\\"featuredBgCompanies[0].content_type_id == '2543'\\\">  \\n                                        <h3>{{companiesTitleArray[magazineId][2]}}</h3>\\n                                    </ng-container>\\n                                </ng-container>                  \\n                         \\n                                <ng-template #defaultView>\\n                                    <ng-container > \\n                                        <h3>{{companiesTitleArray[magazineId][2]}}</h3>\\n                                    </ng-container> \\n                                </ng-template>\\n    \\n    \\n    \\n    \\n                            </div>  \\n                            <div class=\\\"row mt-3 mb-3\\\" *ngFor=\\\"let featuredBgCompanies of featuredBgCompanies;let i = index\\\">                 <div class=\\\"col-sm-9 col-md-9\\\">\\n                                    <a [routerLink]=\\\"['/'+featuredBgCompanies.viewUrl]\\\">{{featuredBgCompanies.title}}</a>\\n                                </div>\\n                                <div class=\\\"col-sm-3 col-md-3\\\">\\n                                    <a [routerLink]=\\\"['/'+featuredBgCompanies.viewUrl]\\\">View Listing</a>\\n                                </div>                         \\n                            </div>                            \\n    \\n                            \\n                           <!-- All -->\\n                            <div class=\\\"mt-2\\\" *ngIf=\\\"data?.length > 0 \\\"><h3 id=\\\"allCompany\\\">All Companies</h3></div>\\n                            <div class=\\\"mt-2 mb-2\\\" *ngIf=\\\"alphabet?.length > 0 \\\">\\n                                <div class=\\\"row text-center back-color\\\" >\\n                                    <a *ngFor=\\\"let Character of alphabet\\\" class=\\\"mr-1\\\" [routerLink] [fragment]=\\\"Character\\\" [routerLinkActive]=\\\"'active'\\\"  [routerLinkActiveOptions]=\\\"{exact: true}\\\">  {{Character | titlecase}}  </a>\\n                                </div>    \\n                            </div>    \\n    \\n                            <div class=\\\"row mt-3 mb-1\\\" *ngFor=\\\"let allCompanies of data;let i = index\\\">         \\n                                <div class=\\\"col-md-12 col-sm-12 border-bottom mt-3\\\" id=\\\"{{current_letter}}\\\" *ngIf=\\\"matchCharacter(allCompanies.title,current_letter)\\\"> \\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-sm-9 col-md-9\\\">\\n                                            <b><h4>{{current_letter}}</h4></b>\\n                                        </div>\\n                                        <div class=\\\"col-sm-3 col-md-3\\\">\\n                                            <!-- <a [routerLink] [fragment]=\\\"'allCompany'\\\" [routerLinkActive]=\\\"'active'\\\"  [routerLinkActiveOptions]=\\\"{exact: true}\\\">  Return To Top    </a>  -->\\n                                        </div>      <br> \\n                                    </div>\\n                                </div>\\n                                    <a  [routerLink]=\\\"['/'+allCompanies.viewUrl]\\\">{{ allCompanies.title }} </a>         \\n                            </div>    \\n    \\n                        </div> \\n                    </div>      \\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div *ngIf=\\\"viewAdRender == 1\\\">\\n                        <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n                    </div>\\n                </div>\\n            </div>   \\n    </div>\\n    \\n    \",\n                styles: [\".back-color{background:#dcdcdc;padding:10px}.country{max-height:300px;overflow-y:scroll;overflow-x:hidden}\"]\n            }] }\n];\n/** @nocollapse */\nDirectoryHomePageComponent.ctorParameters = () => [\n    { type: ActivatedRoute },\n    { type: DirectoryHomePageService },\n    { type: RodmanCoreService },\n    { type: Router }\n];\nif (false) {\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.viewAdRender;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.getAllAd;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.alphabet;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.magazineId;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.data;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.loading;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.current_letter;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.currentURL;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.buyersGuideCategoryData;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.buyersguideCountryData;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.titleCheck;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.companiesTitleArray;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.featuredmicrositeCompanies;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.micrositeCompanies;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.featuredBgCompanies;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.ActivatedRoute;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.DirectoryHomePageService;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.RodmanCoreService;\n    /** @type {?} */\n    DirectoryHomePageComponent.prototype.Router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directory-section/directory-search-box/directory-search-box.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DirectorySearchBoxComponent {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    safeHtml(data) {\n        return data.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    }\n}\nDirectorySearchBoxComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-directory-search-box',\n                template: \"<div class=\\\"back-color\\\" [innerHTML]=\\\"safeHtml(title)\\\"></div>\\n<div class=\\\"country\\\">\\n    <div class=\\\"row ml-1\\\" *ngFor=\\\"let bgCatData of data\\\">\\n        <div class=\\\"col-sm-9 col-md-9\\\" [innerHTML]=\\\"safeHtml(bgCatData.tag)\\\"></div>\\n        <div class=\\\"col-sm-3 col-md-3\\\" *ngIf=\\\"bgCatData.count\\\">({{bgCatData.count}})</div>\\n    </div> \\n</div>\\n\",\n                styles: [\".country{max-height:300px;overflow-y:scroll;overflow-x:hidden}.back-color{background:#dcdcdc;padding:10px}\"]\n            }] }\n];\n/** @nocollapse */\nDirectorySearchBoxComponent.ctorParameters = () => [];\nDirectorySearchBoxComponent.propDecorators = {\n    title: [{ type: Input }],\n    magazineId: [{ type: Input }],\n    data: [{ type: Input }],\n    boxNo: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    DirectorySearchBoxComponent.prototype.title;\n    /** @type {?} */\n    DirectorySearchBoxComponent.prototype.magazineId;\n    /** @type {?} */\n    DirectorySearchBoxComponent.prototype.data;\n    /** @type {?} */\n    DirectorySearchBoxComponent.prototype.boxNo;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directory-section/directory-basic-company-listing/directory-basic-company-listing.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DirectoryBasicCompanyListingComponent {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nDirectoryBasicCompanyListingComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'CoreLib-directory-basic-company-listing',\n                template: \"<p>directory-basic-company-listing works!</p>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nDirectoryBasicCompanyListingComponent.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directory-section/directory-section.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DirectorySectionModule {\n}\nDirectorySectionModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [DirectoryHomePageComponent, DirectorySearchBoxComponent, DirectoryBasicCompanyListingComponent],\n                imports: [\n                    CommonModule,\n                    AdsModule,\n                    ContentsModule,\n                    DirectorySectionRoutingModule\n                ],\n                exports: [DirectoryHomePageComponent, DirectorySearchBoxComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: rodman-core.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AdsModule, ContentsModule, DEFAULT_IMAGE, DirectorySectionModule, HomeModule, IMAGE_DOMAIN, RodmanCoreComponent, RodmanCoreModule, RodmanCoreService, SitesModule, TaxonomiesModule, UsersModule, apiURL, httpOptions, magazineIds, magazineNameDetails, NavComponent as ɵa, NavService as ɵb, ContentViewComponent as ɵba, ContentViewService as ɵbb, ContentBoxTabsService as ɵbc, ContentDynamicViewComponent as ɵbd, ContentInfographicsComponent as ɵbe, ContentSearchComponent as ɵbf, ContentSearchService as ɵbg, ContentRelatedComponent as ɵbh, ContentRelatedService as ɵbi, ContentSuggestSlideShowComponent as ɵbj, ContentBoxTabsComponent as ɵbk, ContentDefaultComponent as ɵbl, ContentJobsComponent as ɵbm, ContentFeatureComponent as ɵbn, ContentVideoComponent as ɵbo, ContentWebinarsComponent as ɵbp, ContentFormularyComponent as ɵbq, ContentBuyerGuideBasicComponent as ɵbr, ContentBuyerGuideMicroSiteComponent as ɵbs, ContentSlideShowComponent as ɵbt, ContentStaticContentComponent as ɵbu, ContentWhitePaperComponent as ɵbv, ContentNewsReleaseComponent as ɵbw, ContentCompanyRelatedComponent as ɵbx, ContentCompanyRelatedService as ɵby, ContentRelatedContentListComponent as ɵbz, AuthenticationComponent as ɵc, ContentRelatedSearchesComponent as ɵca, ContentGlossaryComponent as ɵcb, ContentIssueComponent as ɵcc, ContentIssueService as ɵcd, ContentIssueSliderComponent as ɵce, ContentRssFeedsComponent as ɵcf, ContentRssFeedsService as ɵcg, ContentListsComponent as ɵch, ContentsWebinarComponent as ɵci, ContentsRoutingModule as ɵcj, UsersVerifyEmailComponent as ɵck, UsersVerifyEmailService as ɵcl, UserProfileComponent as ɵcm, CompanyContentAuthenticateComponent as ɵcn, UsersRoutingModule as ɵco, ListTaxonomiesComponent as ɵcp, ListTaxonomiesService as ɵcq, TaxonomiesRoutingModule as ɵcr, DirectoryHomePageComponent as ɵcs, DirectoryHomePageService as ɵct, DirectorySearchBoxComponent as ɵcu, DirectoryBasicCompanyListingComponent as ɵcv, DirectorySectionRoutingModule as ɵcw, AuthenticationService as ɵd, HeaderComponent as ɵe, FooterComponent as ɵf, FootersliderComponent as ɵg, FootersliderService as ɵh, NotFoundComponent as ɵi, SliderComponent as ɵj, SitesRoutingModule as ɵk, AdsDisplayComponent as ɵl, AdsOverlayComponent as ɵm, AdsFooterComponent as ɵn, AdsDoubleClickComponent as ɵo, AdsHomeWidgetComponent as ɵp, AdsRoutingModule as ɵq, FeaturedContentComponent as ɵr, FeatureContentService as ɵs, HomeSliderComponent as ɵt, HomeSliderService as ɵu, HomeRoutingModule as ɵv, ListContentComponent as ɵw, ListContentService as ɵx, StaticContentComponent as ɵy, StaticContentService as ɵz };\n//# sourceMappingURL=rodman-core.js.map\n","import { Injectable, ɵɵdefineInjectable, Component, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/rodman-orm.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass RodmanORMService {\n    constructor() { }\n}\nRodmanORMService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nRodmanORMService.ctorParameters = () => [];\n/** @nocollapse */ RodmanORMService.ngInjectableDef = ɵɵdefineInjectable({ factory: function RodmanORMService_Factory() { return new RodmanORMService(); }, token: RodmanORMService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/rodman-orm.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass RodmanORMComponent {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nRodmanORMComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'RodmanORM-RodmanORM',\n                template: `\n    <p>\n      rodman-orm works!\n    </p>\n  `\n            }] }\n];\n/** @nocollapse */\nRodmanORMComponent.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/rodman-orm.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass RodmanORMModule {\n}\nRodmanORMModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [RodmanORMComponent],\n                imports: [],\n                exports: [RodmanORMComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: rodman-orm.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { RodmanORMComponent, RodmanORMModule, RodmanORMService };\n//# sourceMappingURL=rodman-orm.js.map\n","export default \"<div class=\\\"col-md-12 col-sm-12 text-center\\\"  *ngIf=\\\"viewAdRender == 1\\\"  >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\" *ngIf=\\\"glossaryData?.length > 0\\\">\\n    <div class=\\\"col-md-2 col-sm-2\\\"> </div>\\n    <div class=\\\"col-md-8 col-sm-8 mt-5\\\">\\n        <div class=\\\"row\\\">            \\n            <!-- <div class=\\\"col-md-12 col-sm-12\\\" > -->\\n                <div class=\\\"col-md-8 col-sm-8\\\" >\\n                    <div class=\\\"col-md-6 col-sm-6\\\" *ngFor=\\\"let item of glossaryData; let i = index; let even = even;\\\">      \\n                        <div class=\\\"col-md-12 col-sm-12 border-bottom mt-3\\\" id=\\\"{{current_letter}}\\\" *ngIf=\\\"matchCharacter(item.title,current_letter)\\\">\\n                            <b><h4>{{current_letter}}</h4></b><br>\\n                        </div>\\n                        <!-- <div class=\\\"col-md-12 col-sm-12\\\" *ngIf=\\\"matchCharacter(item.title,current_letter)\\\">\\n                            <br><hr>\\n                        </div>     -->                              \\n                            <a  [routerLink]=\\\"['/'+item.viewUrl]\\\">{{ item.title }} </a>                     \\n                    </div>    \\n                </div>\\n                <div class=\\\"col-md-4 col-sm-4\\\" >\\n                    <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>\\n                    </div>\\n                </div>\\n            <!-- </div>          -->\\n        </div>\\n    </div>  \\n</div>  \"","export default \"<div class=\\\"text-center\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <CoreLib-lists-contents  routeUrl = {{currentURL}} magazineId=\\\"{{magazineId}}\\\" contentType=\\\"{{contentType}}\\\"></CoreLib-lists-contents>          \\n                </div>\\n                <div class=\\\"col-md-4 mt-5\\\">\\n                    <div class=\\\"mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n    \\n    \"","export default \"<div class=\\\"col-md-12 col-sm-12 text-center\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <div><h3>{{name}} Magazine</h3></div>\\n                    <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n                        <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                            <span class=\\\"sr-only\\\">Loading...</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-4 border p-2\\\" *ngIf=\\\"sliderData.length > 0\\\">                        \\n                        <CoreLib-content-issue-slider [sliderData]=\\\"sliderData\\\"></CoreLib-content-issue-slider>\\n                    </div>                    \\n                    <div class=\\\"mt-3 mb-3 border-bottom\\\" *ngFor=\\\"let issue of issueData;let i=index\\\">\\n                        <div class=\\\"col-md-12 col-sm-12 mt-3 mb-3\\\" *ngIf=\\\"i == 0\\\"><h2>{{issue.issue_title}}</h2> </div>\\n                        <!-- <div class=\\\"col-md-12 col-sm-12 mt-3 mb-3\\\" *ngIf=\\\"nextIssue && ptintTittle\\\"><h2>{{nextIssue.issue_title}}</h2> </div>  -->                        \\n                        <div>\\n                            <h3> <a [innerHTML]=\\\"safeHtml(issue.title)\\\" [routerLink]=\\\"['/'+issue.viewUrl]\\\"></a> </h3>\\n                        </div>    \\n                        <div>    \\n                            <h5 [innerHTML]=\\\"safeHtml(issue.summary)\\\" ></h5>\\n                        </div>    \\n                        <div class=\\\"mb-1\\\"><small><b>{{issue.publish_date| date : \\\"MMM dd , yyyy\\\"}}</b></small></div>\\n                    </div>\\n                                        \\n                    <div class=\\\"container mt-5 mb-3\\\" *ngIf=\\\"(nextIssue) && (sliderData.length > 0)\\\">                            \\n                        <div class=\\\"row\\\" > \\n                            <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n                                <div class=\\\"col-md-4 col-sm-4\\\">                                       \\n                                    <button class=\\\"text-center button\\\"  (click)=\\\"loadMoreData(nextIssue.slug)\\\">Load More</button>\\n                                </div>\\n                            <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n                        </div>   \\n                    </div>    \\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n        \\n            \\n\\n\\n\"","export default \"    <div class=\\\"col-md-12 col-sm-12 text-center\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n            <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n    </div>\\n\\n\\n    \\n        <!-- <div class=\\\"row mt-5\\\">\\n            <div class=\\\"col-md-2 col-sm-2\\\"></div> \\n            <div class=\\\"col-md-6 col-sm-6\\\">\\n                <h2> RSS Feeds </h2><br><br>         \\n                <h4> Content Types </h4><br>    \\n                \\n                <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n                    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                        <span class=\\\"sr-only\\\">Loading...</span>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"mt-2 mb-2\\\" *ngIf=\\\"!(loading)\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6 col-sm-6 p-2\\\" *ngFor=\\\"let contentType of rssData\\\">\\n                            <a target=\\\"_blank\\\" href=\\\"{{baseUrl+'feedcreator/rss/'+contentType.id+'/'+magazineId}}\\\"> {{contentType.tag.replace('_',\\\" \\\").replace('_',\\\" \\\") | uppercase}}</a>\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n            </div> \\n            <div class=\\\"col-md-3 col-sm-3\\\">                    \\n                <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                </div>\\n                <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>                 \\n                <div class=\\\"col-md-12 col-sm-12 mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                </div>\\n                <div class=\\\"col-md-12 col-sm-12 mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                </div>\\n            </div>\\n            <div class=\\\"col-md-1 col-sm-1\\\"></div> \\n        </div> -->\\n    \\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <h2> RSS Feeds </h2><br><br>         \\n                    <h4> Content Types </h4><br>    \\n                    \\n                    <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n                        <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                            <span class=\\\"sr-only\\\">Loading...</span>\\n                        </div>\\n                    </div>\\n    \\n                    <div class=\\\"mt-2 mb-2\\\" *ngIf=\\\"rssData\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6 col-sm-6 p-2\\\" *ngFor=\\\"let contentType of rssData\\\">\\n                                <a target=\\\"_blank\\\" href=\\\"{{baseUrl+'feedcreator/rss/'+contentType.id+'/'+magazineId}}\\\"> {{contentType.tag.replace('_',\\\" \\\").replace('_',\\\" \\\") | uppercase}}</a>\\n                            </div>\\n                        </div>\\n                    </div>                                \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>                 \\n                    <div class=\\\"col-md-12 col-sm-12 mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"col-md-12 col-sm-12 mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div>\\n            </div>    \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>        \"","export default \"<div class=\\\"col-md-12 col-sm-12 text-center\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8 mt-5\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-4 col-sm-4 \\\"> <h6><b>Search For:</b></h6> </div>\\n                                <div class=\\\"col-md-6 col-sm-6 text-left \\\"> \\n                                    <input class=\\\"form-cotrol\\\" id=\\\"searchFiled\\\" (input)=\\\"searchFiled=$event.target.value\\\" type=\\\"text\\\" value=\\\"{{searchSlug}}\\\" >\\n                                    <!-- <input #searchTextFiled type=\\\"text\\\" value=\\\"{{searchSlug}}\\\" /> -->\\n                                </div>\\n                                <div class=\\\"col-md-2 col-sm-2 \\\"> \\n                                    <button (click)=searchTextFilter()>Search</button>\\n                                    <!-- <button (click)=\\\"searchTextFiled(searchTextFiled.value)\\\" >Search</button> -->\\n                \\n                                    </div>\\n                            </div><br>  \\n                \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-4 col-sm-4 \\\"> <h6><b>Refine by Dates:</b></h6> </div>\\n                                <div class=\\\"col-md-6 col-sm-6 text-left\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-sm-6 col-md-6\\\">\\n                                            From : <br> \\n                                            <input type=\\\"date\\\" class=\\\"form-control\\\"  id=\\\"dateFrom\\\" (input)=\\\"dateFrom=$event.target.value\\\">\\n                                        </div>\\n                                        <div class=\\\"col-sm-6 col-md-6\\\">\\n                                            To : <br> \\n                                            <input type=\\\"date\\\" class=\\\"form-control\\\"  id=\\\"dateTo\\\" (input)=\\\"dateTo=$event.target.value\\\">\\n                                        </div>\\n                                    </div>     \\n                                </div>\\n                                <div class=\\\"col-md-2 col-sm-2 \\\"> \\n                                    <button (click)=searchDateFilter()>Search</button> \\n                                </div>\\n                            </div><br>\\n                \\n                            <div class=\\\"row mb-2 border-bottom\\\">\\n                                <div class=\\\"col-md-4 col-sm-4 \\\"> <h6><b>Refine By Content:</b></h6> </div>\\n                                <div class=\\\"col-md-8 col-sm-8 text-left \\\"> \\n                                    <select class=\\\"form-cotrol\\\"  (input)=\\\"selectedProduct=$event.target.value\\\" (click)=\\\"selectData()\\\" (change)=searchSelectFilter()>\\n                                            <option [value]=\\\"\\\">All</option>\\n                                            <option *ngFor=\\\"let SelectOption of refineContentList;let i=index\\\" [value]=\\\"SelectOption.id\\\" [selected]=\\\"SelectOption.id==anySlug\\\">\\n                                                {{SelectOption.tag.replace('_', ' ') | titlecase}}</option>\\n                \\n                                    </select>\\n                                </div><br>\\n                            </div><br>\\n                \\n                \\n                            <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading2\\\">\\n                                <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                                    <span class=\\\"sr-only\\\">Loading...</span>\\n                                </div>\\n                            </div>\\n                                        <!-- Buyer Guide -->\\n                            <div class=\\\" mb-3 mt-4 border-bottom\\\" *ngIf=\\\"micrositeCompany?.length > 0 \\\" >\\n                                <div class=\\\"mb-3\\\"><h2>Buyers Guide Companies</h2></div>                \\n                                <div *ngIf=\\\"micrositeCompany?.length > 0\\\">\\n                                    <div class=\\\"\\\"><h3>Microsite Companies</h3></div> \\n                                    <div *ngFor=\\\"let microsite of micrositeCompany|slice:0:5;let i = index\\\">\\n                                        <a [routerLink]=\\\"[microsite.viewUrl]\\\">{{microsite.title}}</a>\\n                                    </div>\\n                                </div>            \\n                                <div *ngIf=\\\"featuredComapny?.length > 0\\\">\\n                                    <div class=\\\"\\\"><h3>Featured Companies</h3></div> \\n                                    <div *ngFor=\\\"let featured of featuredComapny|slice:0:5; let i = index\\\">\\n                                        <a [routerLink]=\\\"[featured.viewUrl]\\\">{{featured.title}}</a>\\n                                    </div>\\n                                </div>        \\n                            </div>\\n                    \\n                            <!-- Buyer Guide Categories -->\\n                            <div class=\\\"container mb-3 mt-4 border-bottom\\\"  *ngIf=\\\"comapnyCategory?.length > 0\\\">                    \\n                                <div><h3>Buyers Guide Categories</h3></div> \\n                \\n                                <div *ngFor=\\\"let category of comapnyCategory;let i = index\\\">\\n                                    <!-- <a [routerLink]=\\\"[category.viewUrl]\\\">{{category.tag}}</a> -->\\n                                    <p>{{category.tag}}</p>\\n                                </div>\\n                            </div>\\n                \\n                \\n                            <!-- Content List-->\\n                            <div class=\\\"container mb-3 mt-4\\\"  *ngIf=\\\"contentList?.length > 0\\\">\\n                                <div class=\\\"border-bottom\\\" *ngFor=\\\"let content of contentList;let i = index\\\">                \\n                                    <div class=\\\"col-md-12 col-sm-12 mt-1\\\">\\n                                        <span *ngFor=\\\"let taxonomy of content.taggedTaxonomy.KNOWLEDGE_CENTER_TAXONOMY; let j =index\\\" >\\n                                            <span *ngIf=\\\"j\\\"> | </span>\\n                                            <a *ngIf=\\\"magazineId != 1\\\" [routerLink]=\\\"['/'+taxonomy.url]\\\"  > {{taxonomy.tag}}   </a> \\n                                            <a *ngIf=\\\"magazineId == 1\\\" [routerLink]=\\\"['/'+staticUrl+taxonomy.url]\\\"  > {{taxonomy.tag}}</a>\\n                                        </span>\\n                                    </div> \\n                                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                                       \\n                                        <h4 class=\\\"mt-2\\\"><a  [routerLink]=\\\"[content.viewUrl]\\\"><b>{{content.title}}</b></a></h4> \\n                                        <h6 class=\\\"mt-3\\\">{{content.summary}}</h6>\\n                                        <small>{{ content.publish_date| date : \\\"MMM dd , yyyy\\\"}}</small>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                \\n                            <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading1\\\">\\n                                <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                                    <span class=\\\"sr-only\\\">Loading...</span>\\n                                </div>\\n                            </div>\\n                \\n                            <div class=\\\"container mt-5 mb-3\\\"  *ngIf=\\\"contentList?.length > 0\\\">\\n                                <div class=\\\"row\\\"> \\n                                    <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n                                        <div class=\\\"col-md-4 col-sm-4\\\">    <button class=\\\"text-center button\\\"  (click)=\\\"loadMoreData()\\\">Load More</button></div>\\n                                    <div class=\\\"col-md-4 col-sm-4\\\"></div>\\n                                </div>   \\n                            </div>\\n                </div>\\n                <div class=\\\"col-md-4 mt-5\\\">\\n                    <div class=\\\"mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\"","export default \"\\n\\n\\n\\n<div class=\\\"text-center\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5 \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    \\n                    <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n                        <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                            <span class=\\\"sr-only\\\">Loading...</span>\\n                        </div>\\n                    </div>\\n\\n                    <div *ngIf=\\\"(!loading)  && ((contentType=='2542' && (currentURL == '')) || (currentURL == '/contents/list_ebook') )\\\">     <div class=\\\"heading-border mb-2\\\" id=\\\"webinars\\\"><h2>{{ slugHeading.replace('list_', ' ').replace('-', ' ').replace('_', ' ') | titlecase }}</h2></div>    \\n                    <div class=\\\"border-bottom\\\" *ngFor=\\\"let Data of listContentData; let i =index\\\" >\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-2 col-md-2\\\"><img class=\\\"img-responsive Webinars\\\"  [src]=\\\"getImage(Data.primary_image)\\\" alt=\\\"No Image\\\"> </div>\\n                            <div class=\\\"col-sm-10 col-md-10\\\">\\n                                <h1><div [innerHTML]=\\\"safeHtml(Data.title)\\\"> </div></h1>\\n                                <div [innerHTML]=\\\"Data.body\\\"></div>\\n                            </div>\\n                        </div>   \\n                    </div>\\n                </div>           \\n                </div>\\n                <div class=\\\"col-md-4 mt-5\\\">\\n                    <div class=\\\"mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n    \\n    \"","export default \"<!-- <div class=\\\"col-md-12 col-sm-12 text-center\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1'></CoreLib-ads-display>\\n</div>\\n    <div class=\\\"row mb-4 mt-4\\\" *ngIf=\\\"staticContentData\\\" >\\n        <div class=\\\"col-md-2 col-sm-2\\\">\\n            <div class=\\\"col-md-12 col-sm-12\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-8 col-sm-8\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8 col-sm-8\\\">\\n                    <h1>{{staticContentData[0].title}}</h1>\\n                    <hr>    \\n                    <div [innerHTML]=\\\"safeHtml(staticContentData[0].body)\\\"> </div>\\n                </div>\\n                <div class=\\\"col-md-4 col-sm-4\\\">\\n                            <div class=\\\"col-md-12 col-sm-12 mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                            </div>\\n        \\n                            <div class=\\\"col-md-12 col-sm-12 mb-2\\\" >\\n                                <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                            </div>\\n                                \\n        \\n                            <div class=\\\"col-md-12 col-sm-12 mb-2\\\"*ngIf=\\\"viewAdRender == 1\\\" >\\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>\\n                            </div>\\n                            <div class=\\\"col-md-12 col-sm-12 mb-2\\\"*ngIf=\\\"viewAdRender == 1\\\" >\\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>\\n                            </div>                        </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-2 col-sm-2\\\">\\n                <div class=\\\"col-md-12 col-sm-12\\\"  *ngIf=\\\"viewAdRender == 1\\\" >\\n                    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display>\\n                </div>\\n        </div>\\n    </div> -->\\n\\n    \\n\\n\\n<div class=\\\"text-center\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n    <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-8 mt-5\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\"  *ngIf=\\\"staticContentData\\\">\\n                    <h1 *ngIf=\\\"staticContentData[0]\\\">{{staticContentData[0].title}}</h1>\\n                    <hr>    \\n                    <div *ngIf=\\\"staticContentData[0]\\\" [innerHTML]=\\\"safeHtml(staticContentData[0].body)\\\"> </div>                             \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"mb-2\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                        <CoreLib-content-box-tabs magazineId={{magazineId}}  TabOne=\\\"2487,5\\\" TabTwo=\\\"2486,5\\\"></CoreLib-content-box-tabs>\\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>      \\n                    </div>\\n                    <div class=\\\"mt-2\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n                        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>      \\n                    </div>\\n                </div> \\n            </div>      \\n        </div>\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"viewAdRender == 1\\\">\\n                <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n            </div>\\n        </div>\\n    </div>   \\n</div>\\n        \\n            \"","export default \"\\n\\n\\n<div class=\\\"text-center\\\" *ngIf=\\\"viewAdRender == 1\\\" >\\n        <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='header_1' footerData='show'></CoreLib-ads-display>\\n    </div>\\n    <div class=\\\"container-fluid\\\">\\n    \\n        <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div *ngIf=\\\"viewAdRender == 1\\\">\\n                        <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='left_site_ad'></CoreLib-ads-display> -->\\n                    </div>\\n                </div>\\n                <div class=\\\"col-8 mt-5 \\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12 col-md-12\\\"><h3>All Companies</h3></div>\\n                        <div class=\\\"col-sm-4 col-md-4\\\">\\n                            <div class=\\\"border\\\">\\n                                <!-- <CoreLib-directory-search-box [title]=\\\"\\\" [magazineId]=\\\"\\\" [data]=\\\"\\\"></CoreLib-directory-search-box> -->\\n                                <div *ngIf=\\\"buyersGuideCategoryData?.length > 0 \\\">\\n                                    <div class=\\\"border\\\"> <h5>SEARCH BY...</h5> </div>\\n                                    <div class=\\\"back-color\\\" [innerHTML]=\\\"safeHtml(buyersGuideCategoryData[0][0].tag)\\\"></div>\\n                                    <div class=\\\"country\\\">\\n                                        <div class=\\\"row ml-1\\\" *ngFor=\\\"let bgCatData of buyersGuideCategoryData[0][0].child\\\">\\n\\n                                            <div *ngIf=\\\"bgCatData.count != 0 \\\" class=\\\"col-sm-9 col-md-9\\\" [innerHTML]=\\\"safeHtml(bgCatData.tag)\\\"></div>\\n                                            <div *ngIf=\\\"bgCatData.count != 0 \\\" class=\\\"col-sm-3 col-md-3\\\" >({{bgCatData.count}})</div>\\n\\n                                        </div> \\n                                    </div>    \\n                                </div>\\n                                <div *ngIf=\\\"buyersguideCountryData?.length > 0 \\\">\\n                                    <div class=\\\"back-color\\\" >Country</div>\\n                                    <div class=\\\"country\\\">\\n                                        <div class=\\\"row ml-1\\\" *ngFor=\\\"let countryData of buyersguideCountryData\\\">\\n                                            <div *ngIf=\\\"countryData.count != 0\\\" class=\\\"col-sm-9 col-md-9\\\" [innerHTML]=\\\"safeHtml(countryData.name)\\\"></div>\\n                                            <div class=\\\"col-sm-3 col-md-3\\\" *ngIf=\\\"(countryData.child) && (countryData.count != 0)\\\">\\n                                                ({{countryData.child ? countryData.child.length: '' }})  </div>\\n                                        </div> \\n                                    </div>    \\n                                </div>                          \\n                            </div>\\n                            <div class=\\\"mt-1\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_1'></CoreLib-ads-display>  \\n                            </div>\\n                            <div class=\\\"mt-1\\\" *ngIf=\\\"viewAdRender == 1\\\">\\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_2'></CoreLib-ads-display>\\n                            </div>\\n                            <div class=\\\"mt-1\\\" *ngIf=\\\"viewAdRender == 1\\\">                                \\n                                <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='content_right_3'></CoreLib-ads-display>\\n                            </div>\\n            \\n                        </div>\\n                        <div class=\\\"col-sm-8 col-md-8\\\">\\n    \\n                            <div class=\\\"d-flex justify-content-center mt-5 mb-5\\\" *ngIf=\\\"loading\\\">\\n                                <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                                    <span class=\\\"sr-only\\\">Loading...</span>\\n                                </div>\\n                            </div>\\n                            \\n                            <!-- 1st -->\\n                            <div *ngIf=\\\"featuredmicrositeCompanies?.length > 0 \\\"><h3>{{companiesTitleArray[magazineId][0]}}</h3></div>\\n                            <div class=\\\"row mt-3 mb-3\\\" *ngFor=\\\"let featuredmicrositeCompaniesData of featuredmicrositeCompanies;let i = index\\\">                        \\n                                <div class=\\\"col-sm-3 col-md-3\\\">\\n                                    <img [src]=\\\"featuredmicrositeCompaniesData.primary_image_main\\\" width=\\\"100%\\\">\\n                                </div>\\n                                <div class=\\\"col-sm-6 col-md-6\\\">\\n                                    <a [routerLink]=\\\"['/'+featuredmicrositeCompaniesData.viewUrl]\\\">{{featuredmicrositeCompaniesData.title}}</a>\\n                                </div>\\n                                <div class=\\\"col-sm-3 col-md-3\\\">\\n                                    <a [routerLink]=\\\"['/'+featuredmicrositeCompaniesData.viewUrl]\\\">View Listing</a>\\n                                </div>                         \\n                            </div>\\n                            <!-- 2nd -->\\n                            <div class=\\\"mt-2\\\" *ngIf=\\\"featuredmicrositeCompanies?.length > 0 \\\"><h3>{{companiesTitleArray[magazineId][1]}}</h3></div>\\n                            <div class=\\\"row mt-3 mb-3\\\" *ngFor=\\\"let micrositeCompanies of micrositeCompanies;let i = index\\\">                        \\n                                <div class=\\\"col-sm-3 col-md-3\\\">\\n                                    <img [src]=\\\"micrositeCompanies.primary_image_main\\\" width=\\\"100%\\\">\\n                                </div>\\n                                <div class=\\\"col-sm-6 col-md-6\\\">\\n                                    <a [routerLink]=\\\"['/'+micrositeCompanies.viewUrl]\\\" >{{micrositeCompanies.title}}</a>\\n                                </div>\\n                                <div class=\\\"col-sm-3 col-md-3\\\">\\n                                    <a [routerLink]=\\\"['/'+micrositeCompanies.viewUrl]\\\">View Listing</a>\\n                                </div>                         \\n                            </div>                        \\n    \\n    \\n                            <!-- 3rd -->\\n                            <div class=\\\"mt-2\\\" *ngIf=\\\"featuredBgCompanies?.length > 0 \\\">\\n                                \\n                                <ng-container *ngIf=\\\"(magazineId == 5 ) || (magazineId == 13);else defaultView\\\">\\n                                    <ng-container *ngIf=\\\"featuredBgCompanies[0].content_type_id == '2666'\\\">  \\n                                        <h3>Deluxe Companies</h3>\\n                                    </ng-container>\\n                                    <ng-container *ngIf=\\\"featuredBgCompanies[0].content_type_id == '2543'\\\">  \\n                                        <h3>{{companiesTitleArray[magazineId][2]}}</h3>\\n                                    </ng-container>\\n                                </ng-container>                  \\n                         \\n                                <ng-template #defaultView>\\n                                    <ng-container > \\n                                        <h3>{{companiesTitleArray[magazineId][2]}}</h3>\\n                                    </ng-container> \\n                                </ng-template>\\n    \\n    \\n    \\n    \\n                            </div>  \\n                            <div class=\\\"row mt-3 mb-3\\\" *ngFor=\\\"let featuredBgCompanies of featuredBgCompanies;let i = index\\\">                 <div class=\\\"col-sm-9 col-md-9\\\">\\n                                    <a [routerLink]=\\\"['/'+featuredBgCompanies.viewUrl]\\\">{{featuredBgCompanies.title}}</a>\\n                                </div>\\n                                <div class=\\\"col-sm-3 col-md-3\\\">\\n                                    <a [routerLink]=\\\"['/'+featuredBgCompanies.viewUrl]\\\">View Listing</a>\\n                                </div>                         \\n                            </div>                            \\n    \\n                            \\n                           <!-- All -->\\n                            <div class=\\\"mt-2\\\" *ngIf=\\\"data?.length > 0 \\\"><h3 id=\\\"allCompany\\\">All Companies</h3></div>\\n                            <div class=\\\"mt-2 mb-2\\\" *ngIf=\\\"alphabet?.length > 0 \\\">\\n                                <div class=\\\"row text-center back-color\\\" >\\n                                    <a *ngFor=\\\"let Character of alphabet\\\" class=\\\"mr-1\\\" [routerLink] [fragment]=\\\"Character\\\" [routerLinkActive]=\\\"'active'\\\"  [routerLinkActiveOptions]=\\\"{exact: true}\\\">  {{Character | titlecase}}  </a>\\n                                </div>    \\n                            </div>    \\n    \\n                            <div class=\\\"row mt-3 mb-1\\\" *ngFor=\\\"let allCompanies of data;let i = index\\\">         \\n                                <div class=\\\"col-md-12 col-sm-12 border-bottom mt-3\\\" id=\\\"{{current_letter}}\\\" *ngIf=\\\"matchCharacter(allCompanies.title,current_letter)\\\"> \\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-sm-9 col-md-9\\\">\\n                                            <b><h4>{{current_letter}}</h4></b>\\n                                        </div>\\n                                        <div class=\\\"col-sm-3 col-md-3\\\">\\n                                            <!-- <a [routerLink] [fragment]=\\\"'allCompany'\\\" [routerLinkActive]=\\\"'active'\\\"  [routerLinkActiveOptions]=\\\"{exact: true}\\\">  Return To Top    </a>  -->\\n                                        </div>      <br> \\n                                    </div>\\n                                </div>\\n                                    <a  [routerLink]=\\\"['/'+allCompanies.viewUrl]\\\">{{ allCompanies.title }} </a>         \\n                            </div>    \\n    \\n                        </div> \\n                    </div>      \\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div *ngIf=\\\"viewAdRender == 1\\\">\\n                        <!-- <CoreLib-ads-display [ads]=\\\"getAllAd\\\" location='right_site_ad'></CoreLib-ads-display> -->\\n                    </div>\\n                </div>\\n            </div>   \\n    </div>\\n    \\n    \"","export default \"<!-- <p> Core not-found works!</p> -->\\n\\n\\n<div class=\\\"text-center\\\">\\n    <h3> Under Development... </h3>\\n\\n   <p> Oops! <br>\\n    This is awkward <br>\\n    You are looking for something that doesn't actually exist\\n   </p>\\n</div>\"","export default \"<!-- \\n<div class=\\\"text-center\\\"><p> Core user-profile works!</p>\\n    <h3>Users Profile</h3>\\n</div>     -->\\n\\n\\n\\n\\n<div class=\\\"text-center\\\" *ngIf=\\\"message; else showLoginRequestMessage\\\">\\n    <h2>Hello You Are Login</h2>\\n</div> \\n    <ng-template #showLoginRequestMessage>\\n        <div class=\\\"text-center\\\" > <h2>Hello, please login to access the User app</h2></div>\\n    </ng-template>\"","export default \"\\n<CoreLib-header  magazineId=\\\"{{magazineId}}\\\" magazineName=\\\"{{magazineName}}\\\" menuId='99' groupId='85' fieldId='330' formId='73'></CoreLib-header>\\n        <router-outlet>  \\n                <!-- <ng4-loading-spinner></ng4-loading-spinner> -->\\n        </router-outlet>\\n<CoreLib-footer magazineId=\\\"{{magazineId}}\\\"></CoreLib-footer>\\n\\n\"","export default \"<CoreLib-content-view contentPageUrl = {{contentPageUrl}} magazineId = {{magazineId}}></CoreLib-content-view>\"","export default \"<CoreLib-users-verify-email magazineId={{magazineId}} email={{email}} passKey={{token}} ></CoreLib-users-verify-email>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \".half-space{\\n    margin-right:10px; ;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3JvZG1hbi1jb3JlL3NyYy9saWIvY29udGVudHMvY29udGVudC1nbG9zc2FyeS9jb250ZW50LWdsb3NzYXJ5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoicHJvamVjdHMvcm9kbWFuLWNvcmUvc3JjL2xpYi9jb250ZW50cy9jb250ZW50LWdsb3NzYXJ5L2NvbnRlbnQtZ2xvc3NhcnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oYWxmLXNwYWNle1xuICAgIG1hcmdpbi1yaWdodDoxMHB4OyA7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ListContentService } from '../list-content/list-content.service';\nimport { RodmanCoreService } from '../../rodman-core.service';\nimport { Router, RouterModule ,ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'CoreLib-content-glossary',\n  templateUrl: './content-glossary.component.html',\n  styleUrls: ['./content-glossary.component.css']\n})\nexport class ContentGlossaryComponent implements OnInit {\n  glossaryData:any=[];\n  loading = true;\n  magazineId;\n  getAllAd:any=[];\n  viewAdRender:number;\n  current_letter =''; \n\n  constructor(public ActivatedRoute:ActivatedRoute, public Router:Router,private ListContentService: ListContentService,public RodmanCoreService:RodmanCoreService ) { \n  }\n\n  ngOnInit() {\n    this.ActivatedRoute.data.subscribe(data => {\n      this.magazineId=data.magazineId;\n    })\n    this.ListContentService.getContent('glossary',this.magazineId,10,0,'').subscribe((data)=>{\n      this.glossaryData = data['data'];     \n        this.getads();\n        this.loading =false;\n    }); \n  }\n\n\n  getads(){\n    this.RodmanCoreService.getAllAdst(this.magazineId).subscribe((data =>{\n      this.getAllAd = data;\n      this.viewAdRender= 1;\n      }))\n  }\n\n  matchCharacter(current,pre){\n    if(current.charAt(0) != pre){\n      this.current_letter = current.charAt(0);\n      return true;\n    }\n    return false;\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9yb2RtYW4tY29yZS9zcmMvbGliL2NvbnRlbnRzL2NvbnRlbnQtaW5mb2dyYXBoaWNzL2NvbnRlbnQtaW5mb2dyYXBoaWNzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute ,NavigationEnd } from '@angular/router';\nimport { RodmanCoreService } from '../../../../../rodman-core/src/lib/rodman-core.service';\n\n@Component({\n  selector: 'CoreLib-content-infographics',\n  templateUrl: './content-infographics.component.html',\n  styleUrls: ['./content-infographics.component.css']\n})\nexport class ContentInfographicsComponent implements OnInit {\n  currentURL : any ;\n  contentType : any ;\n  magazineId;\n  getAllAd:any=[];\n  viewAdRender:number;\n\n\n  constructor(private router:Router,public RodmanCoreService:RodmanCoreService,public ActivatedRoute:ActivatedRoute) {\n       router.events.subscribe(event => {        if (event instanceof NavigationEnd ) {\n          this.currentURL = event.url; \n        }\n      });\n\n\n   }\n\n  ngOnInit() {\n    this.ActivatedRoute.data.subscribe(data => {\n      this.magazineId=data.magazineId;\n    })\n\n    this.RodmanCoreService.getAllAdst(this.magazineId).subscribe((data =>{\n      this.getAllAd = data;\n      this.viewAdRender = 1;\n  }))\n  }\n\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9yb2RtYW4tY29yZS9zcmMvbGliL2NvbnRlbnRzL2NvbnRlbnQtaXNzdWUvY29udGVudC1pc3N1ZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {NgbModule,NgbCarouselConfig , NgbCarousel, NgbSlideEvent, NgbSlideEventSource } from '@ng-bootstrap/ng-bootstrap';\nimport { ContentIssueService } from './content-issue.service';\nimport { Router, RouterModule ,ActivatedRoute , Event,NavigationEnd,NavigationStart} from '@angular/router';\n\nimport { RodmanCoreService } from '../../rodman-core.service';\nimport * as configVar from '../../rodman-core.service';\n\n\n\n@Component({\n  selector: 'CoreLib-content-issue',\n  templateUrl: './content-issue.component.html',\n  styleUrls: ['./content-issue.component.css'],\n  providers: [NgbModule,NgbCarouselConfig],\n})\nexport class ContentIssueComponent implements OnInit {\n  magazineId;\n  slug;\n  issueData:any=[];\n  sliderData:any=[];\n  loading=true;\n  currentURL;\n  lastSlug;\n  name;\n  nextIssue;\n  page =0;\n  ptintTittle =false;  \n  routeChange:boolean=true;   \n  getAllAd:any=[];\n  viewAdRender:number;\n  \n  constructor(public RodmanCoreService:RodmanCoreService, public ActivatedRoute:ActivatedRoute, public Router:Router,public ContentIssueService:ContentIssueService) { \n\n    Router.events.subscribe(event => {\n      if(event instanceof NavigationStart) {\n          let data = event.url.split('/');\n          this.lastSlug = data[data.length-1];\n          this.routeChange = true;\n      }\n      if(this.routeChange){\n        this.issueData=[];\n        // this.sliderData =[];\n        this.getIssue(this.lastSlug);\n        this.routeChange = false;\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this.ActivatedRoute.data.subscribe(data => {\n      this.magazineId=data.magazineId;\n    })    \n    this.getIssue(this.slug);\n    this.getads();\n    this.name = configVar.magazineIds[this.magazineId].name; \n  }\n\n  getIssue(slug){\n      this.ContentIssueService.getIssue(this.magazineId,slug).subscribe((data)=>{\n        let collectData = data['data'];\n        // if(this.page==0)  {\n          this.sliderData = data['issue'];\n          // console.log(this.sliderData)\n          this.page = 1;\n        // }      \n\n        this.nextIssue = data['nextIssue'];\n        for(let data of collectData){\n          this.issueData.push(data);\n        }\n        this.loading=false;\n      });\n  }\n\n  getads(){\n    this.RodmanCoreService.getAllAdst(this.magazineId).subscribe((data =>{\n      this.getAllAd = data;\n      this.viewAdRender = 1;\n   }))\n  }\n\n  loadMoreData(slug){\n    this.loading=true;\n    // this.ptintTittle=true;\n    this.getIssue(slug);\n  }\n\n  safeHtml(data){\n    return data.replace(/[^a-zA-Z0-9 ]/g, \"\")\n  }\n\n  titlePrint(title){\n    return (title == 1) ?  true  : false ;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { throwError, from } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as configVar from '../../rodman-core.service';\nimport { RodmanCoreService } from '../../rodman-core.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentIssueService {\n\n  constructor(private HttpClient: HttpClient,private RodmanCoreService:RodmanCoreService ) { }\n\n  getIssue(magazineId,slug) {\n     return this.HttpClient.post<any>(configVar.apiURL+'issuescontroller/getIssues',{magazineId:magazineId,slug:slug}, configVar.httpOptions).pipe(\n       catchError(this.RodmanCoreService.handleError)\n     );\n   }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9yb2RtYW4tY29yZS9zcmMvbGliL2NvbnRlbnRzL2NvbnRlbnQtcnNzLWZlZWRzL2NvbnRlbnQtcnNzLWZlZWRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { RodmanCoreService } from '../../rodman-core.service';\nimport { Router, RouterModule ,ActivatedRoute } from '@angular/router';\nimport { ContentRssFeedsService } from './content-rss-feeds.service';\nimport * as configVar from '../../rodman-core.service';\n\n\n@Component({\n  selector: 'CoreLib-content-rss-feeds',\n  templateUrl: './content-rss-feeds.component.html',\n  styleUrls: ['./content-rss-feeds.component.css']\n})\nexport class ContentRssFeedsComponent implements OnInit {\n  loading = true;\n  magazineId;\n  getAllAd:any=[];\n  viewAdRender:number;\n  rssData:any;\n  baseUrl;\n\n  constructor(public ActivatedRoute:ActivatedRoute, public Router:Router,public RodmanCoreService:RodmanCoreService,public ContentRssFeedsService:ContentRssFeedsService ) { \n    this.baseUrl = configVar.apiURL;\n  }\n\n  ngOnInit() {\n    this.ActivatedRoute.data.subscribe(data => {\n      this.magazineId=data.magazineId;\n    })\n\n    this.rssDataMethod();\n\n    this.RodmanCoreService.getAllAdst(this.magazineId).subscribe((data =>{\n      this.getAllAd = data;\n      this.viewAdRender= 1;\n    }))  \n\n\n  }\n\n  rssDataMethod(){\n    this.ContentRssFeedsService.rssFeeds(this.magazineId).subscribe((data)=>{\n      this.rssData = data['country'];     \n      this.loading =false;\n    }); \n  }\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { throwError, from } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as configVar from '../../rodman-core.service';\nimport { RodmanCoreService } from '../../rodman-core.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentRssFeedsService {\n\n  constructor(private HttpClient: HttpClient,private RodmanCoreService:RodmanCoreService ) { }\n\n  rssFeeds(magazineId) {\n     return this.HttpClient.post<any>(configVar.apiURL+'contentsController/getContentType',{magazineId:magazineId}, configVar.httpOptions).pipe(\n       catchError(this.RodmanCoreService.handleError)\n     );\n   }\n}\n","export default \".border-bottom{\\n    border-bottom: 1px solid black!important;\\n}\\n\\n.border-top{\\n    border-top: 1px solid black!important;\\n}\\n\\n.form-group.hidden {\\n    width: 0;\\n    margin: 0;\\n    border: none;\\n    padding: 0;\\n  }\\n\\n.custom-day {\\n    text-align: center;\\n    padding: 0.185rem 0.25rem;\\n    display: inline-block;\\n    height: 2rem;\\n    width: 2rem;\\n  }\\n\\n.custom-day.focused {\\n    background-color: #e6e6e6;\\n  }\\n\\n.custom-day.range, .custom-day:hover {\\n    background-color: rgb(2, 117, 216);\\n    color: white;\\n  }\\n\\n.custom-day.faded {\\n    background-color: rgba(2, 117, 216, 0.5);\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3JvZG1hbi1jb3JlL3NyYy9saWIvY29udGVudHMvY29udGVudC1zZWFyY2gvY29udGVudC1zZWFyY2guY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHdDQUF3QztBQUM1Qzs7QUFFQTtJQUNJLHFDQUFxQztBQUN6Qzs7QUFLRTtJQUNFLFFBQVE7SUFDUixTQUFTO0lBQ1QsWUFBWTtJQUNaLFVBQVU7RUFDWjs7QUFDQTtJQUNFLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIscUJBQXFCO0lBQ3JCLFlBQVk7SUFDWixXQUFXO0VBQ2I7O0FBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7O0FBQ0E7SUFDRSxrQ0FBa0M7SUFDbEMsWUFBWTtFQUNkOztBQUNBO0lBQ0Usd0NBQXdDO0VBQzFDIiwiZmlsZSI6InByb2plY3RzL3JvZG1hbi1jb3JlL3NyYy9saWIvY29udGVudHMvY29udGVudC1zZWFyY2gvY29udGVudC1zZWFyY2guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib3JkZXItYm90dG9te1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBibGFjayFpbXBvcnRhbnQ7XG59XG5cbi5ib3JkZXItdG9we1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBibGFjayFpbXBvcnRhbnQ7XG59XG5cblxuXG5cbiAgLmZvcm0tZ3JvdXAuaGlkZGVuIHtcbiAgICB3aWR0aDogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbiAgLmN1c3RvbS1kYXkge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAwLjE4NXJlbSAwLjI1cmVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDJyZW07XG4gICAgd2lkdGg6IDJyZW07XG4gIH1cbiAgLmN1c3RvbS1kYXkuZm9jdXNlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcbiAgfVxuICAuY3VzdG9tLWRheS5yYW5nZSwgLmN1c3RvbS1kYXk6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyLCAxMTcsIDIxNik7XG4gICAgY29sb3I6IHdoaXRlO1xuICB9XG4gIC5jdXN0b20tZGF5LmZhZGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIsIDExNywgMjE2LCAwLjUpO1xuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, RouterModule , ActivatedRoute ,NavigationEnd} from '@angular/router';\nimport { ContentSearchService } from './content-search.service';\nimport { RodmanCoreService } from '../../rodman-core.service';\nimport { FormGroup, FormBuilder,Validators } from  '@angular/forms';\nimport {NgbDate, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'CoreLib-content-search',\n  templateUrl: './content-search.component.html',\n  styleUrls: ['./content-search.component.css'],\n  \n})\nexport class ContentSearchComponent implements OnInit {\n  hoveredDate: NgbDate;\n\n  fromDate: NgbDate;\n  toDate: NgbDate;\n\n  search;page=0;limit=10;magazineId;searchDateFrom;searchDateTo;contentTypeId;\n  refineContentList;\n  routeUrl;\n  anySlug='';\n  searchSlug;\n  slugCheck = false;\n  micrositeCompany:any;\n  featuredComapny :any;\n  comapnyCategory :any;\n  contentList :any=[];\n  putContentList:any;\n  storeSlug:any;\n  \n  getAllAd:any=[];\n  viewAdRender:number;\n  loading1 = true;\n  loading2 = true;\n  loadMoreCheck =true;\n\n  searchFiled='all';\n  dateFrom;\n  dateTo;\n  selectedProduct='all';\n  staticUrl; \n  companyDataList;\n\n  constructor(public calendar: NgbCalendar,public RodmanCoreService:RodmanCoreService,public Router:Router,public ContentSearchService:ContentSearchService,public ActivatedRoute:ActivatedRoute) {\n    this.fromDate = calendar.getToday();\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 10);\n    Router.events.subscribe(event => {\n      if (event instanceof NavigationEnd ) {\n        this.routeUrl = event.url;  \n        this.contentList=[];\n        this.ActivatedRoute.params.subscribe(params => {\n          this.page=0;\n          this.anySlug = params['any'];\n          this.searchSlug = params['slug'];          \n       });\n        this.getSearchData();\n        \n      }\n    });\n\n    this.ActivatedRoute.data.subscribe(data => {\n      this.magazineId=data.magazineId;\n    });\n\n\n  }\n\n  ngOnInit() {\n    if(this.magazineId ==1 ){\n      this.staticUrl = 'knowledge-center/'; \n    }\n    this.getRefineData();\n    this.getPageAds();\n  //   this.ActivatedRoute.params.subscribe(params => {\n  //     this.page=0;\n  //     this.anySlug = params['any'];\n  //     this.searchSlug = params['slug'];   \n  //  });\n  //  this.getSearchData();\n  //  this.getRefineData();  \n\n    \n  }\n  \n  selectData(){\n    if(this.refineContentList){\n      this.getRefineData();\n    }\n  }\n  \n\n  getRefineData(){ \n    this.ContentSearchService.refineContentList(this.magazineId).subscribe((data)=>{\n        this.refineContentList = data['country'];\n    }); \n  }\n\n  searchSelectFilter(){   \n      // this.searchFiled=(this.searchSlug!='') ? this.searchSlug : 'all' ;\n      // if(this.searchFiled==='undefined' || this.searchFiled==''){\n      //   this.searchFiled=this.searchSlug;\n      // }\n      this.page=0;\n      if((this.selectedProduct==='undefined' || this.selectedProduct=='')){\n        this.selectedProduct=\"all\";        \n      }\n      this.Router.navigateByUrl('/contents/searchcontent/'+this.selectedProduct+'/'+this.searchFiled);     \n      // this.getSearchData();\n  }\n\n  searchDateFilter(){    \n     this.page=0;\n     this.getSearchData();\n  }\n\n  searchTextFilter(){\n    this.page=0;\n    if(this.searchFiled==='undefined' || this.searchFiled==''){\n      this.searchFiled=this.searchSlug;\n      this.anySlug = 'all';\n    }\n    this.Router.navigateByUrl('/contents/searchcontent/'+this.anySlug+'/'+this.searchFiled);\n  }\n  \n  getSearchData(){\n\n    if(this.loadMoreCheck){\n      this.ContentSearchService.SearchCompany(this.searchSlug,this.page,this.limit,this.magazineId,this.dateFrom,this.dateTo,this.selectedProduct).subscribe((data)=>{\n          this.companyDataList = data['bgTopCompanies'];\n          this.comapnyCategory = data['bgCategories'];\n          this.micrositeCompany = this.companyDataList.filter(function(map) {\n            return map.has_featured_mircosite_listing == 1;\n          });\n          this.featuredComapny = this.companyDataList.filter(function(map) {\n            return map.has_featured_mircosite_listing == 0;\n          });\n      }); \n    this.loading2 = false; \n    }  \n\n    this.selectedProduct=(this.selectedProduct=='all') ? \"\": this.selectedProduct ;\n    this.ContentSearchService.SearchContent(this.searchSlug,this.page,this.limit,this.magazineId,this.dateFrom,this.dateTo,this.selectedProduct).subscribe((data)=>{\n      this.putContentList = data['data'];  \n      for(let content of this.putContentList){\n        this.contentList.push(content);  \n      } \n      this.page = data['page']+1;\n    }); \n     \n \n\n      // setTimeout(function(){\n      //   this.loading1 = false;\n      // },6000);\n\n      setTimeout (() => {\n        this.loading1 = false;\n      }, 10000)\n  } \n\n  spinnerHide(){\n\n \n  }\n\n\n  loadMoreData(){\n    this.loading1 = true;\n    this.loadMoreCheck =false;\n    this.getSearchData();\n  }\n\n  getPageAds(){\n    this.RodmanCoreService.getAllAdst(this.magazineId).subscribe((data =>{\n      this.getAllAd = data;\n      this.viewAdRender= 1;\n    }))  \n\n  }\n\n  // Date Option\n      onDateSelection(date: NgbDate) {\n        if (!this.fromDate && !this.toDate) {\n          this.fromDate = date;\n        } else if (this.fromDate && !this.toDate && date.after(this.fromDate)) {\n          this.toDate = date;\n        } else {\n          this.toDate = null;\n          this.fromDate = date;\n        }\n      }\n\n      isHovered(date: NgbDate) {\n        return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\n      }\n\n      isInside(date: NgbDate) {\n        return date.after(this.fromDate) && date.before(this.toDate);\n      }\n\n      isRange(date: NgbDate) {\n        return date.equals(this.fromDate) || date.equals(this.toDate) || this.isInside(date) || this.isHovered(date);\n      }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { throwError, from } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as configVar from '../../rodman-core.service';\nimport { RodmanCoreService } from '../../rodman-core.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentSearchService {\n\n  constructor(private HttpClient: HttpClient,private RodmanCoreService:RodmanCoreService ) { }\n\n  refineContentList(magazineId) {\n     return this.HttpClient.post<any>(configVar.apiURL+'contentsController/getContentType',{magazineId:magazineId}, configVar.httpOptions).pipe(\n       catchError(this.RodmanCoreService.handleError)\n     );\n   }\n\n  SearchContent(search,page,limit,magazineId,searchDateFrom,searchDateTo,contentTypeId) {\n    return this.HttpClient.post<any>(configVar.apiURL+'contentsController/getSearchContent',{search:search,page:page,limit:limit,magazineId:magazineId,searchDateFrom:searchDateFrom,searchDateTo:searchDateTo,contentTypeId:contentTypeId}, configVar.httpOptions).pipe(\n      catchError(this.RodmanCoreService.handleError)\n    );\n  }\n\n  SearchCompany(search,page,limit,magazineId,searchDateFrom,searchDateTo,contentTypeId) {\n    return this.HttpClient.post<any>(configVar.apiURL+'contentsController/getSearchBgCompanies',{search:search,page:page,limit:limit,magazineId:magazineId,searchDateFrom:searchDateFrom,searchDateTo:searchDateTo,contentTypeId:contentTypeId}, configVar.httpOptions).pipe(\n      catchError(this.RodmanCoreService.handleError)\n    );\n  }\n}\n","export default \".heading-border{\\n    border-bottom: 1px solid #000000;\\n    color: #000000;\\n}\\n.container{\\n    min-height: 500px;\\n}\\n.Webinars{\\n    max-width: 100%;\\n    min-width: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3JvZG1hbi1jb3JlL3NyYy9saWIvY29udGVudHMvY29udGVudHMtd2ViaW5hci9jb250ZW50cy13ZWJpbmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQ0FBZ0M7SUFDaEMsY0FBYztBQUNsQjtBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InByb2plY3RzL3JvZG1hbi1jb3JlL3NyYy9saWIvY29udGVudHMvY29udGVudHMtd2ViaW5hci9jb250ZW50cy13ZWJpbmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGluZy1ib3JkZXJ7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwMDAwMDA7XG4gICAgY29sb3I6ICMwMDAwMDA7XG59XG4uY29udGFpbmVye1xuICAgIG1pbi1oZWlnaHQ6IDUwMHB4O1xufVxuXG4uV2ViaW5hcnN7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG1pbi13aWR0aDogMTAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { RodmanCoreService } from '../../rodman-core.service';\nimport { Event,NavigationEnd,Router,ActivatedRoute} from '@angular/router'; \nimport { ListContentService} from '../list-content/list-content.service'\n\n@Component({\n  selector: 'CoreLib-contents-webinar',\n  templateUrl: './contents-webinar.component.html',\n  styleUrls: ['./contents-webinar.component.css']\n})\nexport class ContentsWebinarComponent implements OnInit {\n  currentURL : any ;\n  contentType;\n  magazineId;\n  slugHeading;\n  limit=10;\n  page=0;\n  listContentData;\n  loading =true;\n  getAllAd:any=[];\n  viewAdRender:number;\n\n  constructor(public ListContentService:ListContentService, public RodmanCoreService:RodmanCoreService,public Router:Router,public ActivatedRoute:ActivatedRoute) {\n\n    Router.events.subscribe(event => {\n      if (event instanceof NavigationEnd ) {\n        this.currentURL = event.url; \n        if(this.currentURL=='/contents/list_webinars'){\n          this.currentURL= '';\n          this.contentType = '2542';\n        }  \n      }\n    });\n\n\n  }\n\n  ngOnInit() {\n    this.ActivatedRoute.data.subscribe(data => {\n      this.magazineId=data.magazineId;\n    });\n    this.getContentData();\n    this.getads();\n  }\n\n  getImage(imageId){\n    return this.RodmanCoreService.displayImageUrl(imageId);\n  }\n  safeHtml(data){\n    return data.replace(/[^a-zA-Z0-9 ]/g, \"\")\n  }  \n\n  getContentData(){ \n     this.ListContentService.getContent(this.currentURL,this.magazineId,this.limit,this.page,this.contentType).subscribe((data)=>{\n      this.listContentData = data['data'];\n      if(this.page==0){ \n        this.slugHeading = data['contentTypeName'];\n      } \n      this.page = data['page']+1;\n      this.loading =false;\n    }); \n  }\n  getads(){\n    this.RodmanCoreService.getAllAdst(this.magazineId).subscribe((data =>{\n      this.getAllAd = data;\n      this.viewAdRender = 1;\n    }))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { throwError, from } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as configVar from '../../rodman-core.service';\nimport { RodmanCoreService } from '../../rodman-core.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListContentService {\n\n  constructor(private HttpClient: HttpClient,private RodmanCoreService:RodmanCoreService ) { }\n\n  getContent(slug,magazineId,limit,page,contentType) {\n     return this.HttpClient.post<any>(configVar.apiURL+'taxonomysController/getContentTypeContent',{pageUrl:slug,magazineId:magazineId,limit:limit,page:page,contentType:contentType}, configVar.httpOptions).pipe(\n       catchError(this.RodmanCoreService.handleError)\n     );\n   }\n\n  getContentTopTaxonomy(slug,magazineId) {\n    return this.HttpClient.post<any>(configVar.apiURL+'taxonomysController/getContentTypeTopTaxonomy',{pageUrl:slug,magazineId:magazineId}, configVar.httpOptions).pipe(\n      catchError(this.RodmanCoreService.handleError)\n    );\n   }\n }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9yb2RtYW4tY29yZS9zcmMvbGliL2NvbnRlbnRzL3N0YXRpYy1jb250ZW50L3N0YXRpYy1jb250ZW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { StaticContentService } from './static-content.service';\nimport { Router, ActivatedRoute ,NavigationEnd } from '@angular/router';\nimport { RodmanCoreService } from '../../rodman-core.service';\n\n\n@Component({\n  selector: 'CoreLib-static-content',\n  templateUrl: './static-content.component.html',\n  styleUrls: ['./static-content.component.css']\n})\nexport class StaticContentComponent implements OnInit {\n  limit=30;\n  page=0;\n  contentType='';\n  magazineId;\n  routeUrl;\n  staticContentData;\n  getAllAd:any=[];\n  viewAdRender:number;\n  loading=true;\n\n  constructor(private StaticContentService:StaticContentService,private Router:Router,public ActivatedRoute:ActivatedRoute,public RodmanCoreService :RodmanCoreService ) {\n    Router.events.subscribe(event => {\n      if (event instanceof NavigationEnd ) {\n        this.routeUrl = event.url;         \n      }\n    });\n\n   }\n\n\n  ngOnInit() {\n    this.ActivatedRoute.data.subscribe(data => {\n      this.magazineId=data.magazineId;\n    });\n    \n    this.RodmanCoreService.getAllAdst(this.magazineId).subscribe((data =>{\n      this.getAllAd = data;\n      this.viewAdRender = 1;\n   }))\n\n    this.getStatic();\n\n  }\n\n  ngOnChanges(){  \n    // this.getStatic();\n  }\n\n  safeHtml(data){\n    return this.RodmanCoreService.safeHtml(data);\n  }\n\n  // safeHtml(data){\n  //   return data.replace(/[^a-zA-Z0-9 ]/g, \"\")\n  // }  \n  \n  getStatic(){\n    this.StaticContentService.getStaticContent(this.routeUrl,this.magazineId,this.limit,this.page,this.contentType).subscribe((data)=>{\n      this.staticContentData = data['data'];\n      this.loading=false;\n    }); \n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { throwError, from } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as configVar from '../../rodman-core.service';\nimport { RodmanCoreService } from '../../rodman-core.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaticContentService {\n\n  constructor(private HttpClient: HttpClient,private RodmanCoreService:RodmanCoreService ) { }\n\n  getStaticContent(slug,magazineId,limit,page,contentType) {\n    // console.log({pageUrl:slug,magazineId:magazineId,limit:limit,page:page,contentType:contentType})\n    let slugs = slug.replace('/','');\n    // console.log(slugs)\n    return this.HttpClient.post<any>(configVar.apiURL+'taxonomysController/getContentTaxonomys',{pageUrl:slugs,magazineId:magazineId,limit:limit,page:page,contentType:contentType}, configVar.httpOptions).pipe(\n      catchError(this.RodmanCoreService.handleError)\n    );\n  }\n}\n","export default \".back-color{\\n    background: gainsboro;\\n    padding: 10px;\\n}\\n.country{\\n    max-height: 300px;\\n    overflow-y: scroll;\\n    overflow-x:hidden ;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3JvZG1hbi1jb3JlL3NyYy9saWIvZGlyZWN0b3J5LXNlY3Rpb24vZGlyZWN0b3J5LWhvbWUtcGFnZS9kaXJlY3RvcnktaG9tZS1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsYUFBYTtBQUNqQjtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixrQkFBa0I7QUFDdEIiLCJmaWxlIjoicHJvamVjdHMvcm9kbWFuLWNvcmUvc3JjL2xpYi9kaXJlY3Rvcnktc2VjdGlvbi9kaXJlY3RvcnktaG9tZS1wYWdlL2RpcmVjdG9yeS1ob21lLXBhZ2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5iYWNrLWNvbG9ye1xuICAgIGJhY2tncm91bmQ6IGdhaW5zYm9ybztcbiAgICBwYWRkaW5nOiAxMHB4O1xufVxuLmNvdW50cnl7XG4gICAgbWF4LWhlaWdodDogMzAwcHg7XG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgIG92ZXJmbG93LXg6aGlkZGVuIDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DirectoryHomePageService } from './directory-home-page.service';\nimport { RodmanCoreService } from '../../rodman-core.service';\nimport { Router, RouterModule,ActivatedRoute,NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'CoreLib-directory-home-page',\n  templateUrl: './directory-home-page.component.html',\n  styleUrls: ['./directory-home-page.component.css']\n})\nexport class DirectoryHomePageComponent implements OnInit {\n  viewAdRender:number;\n  getAllAd:any=[];\n  alphabet=[];\n  magazineId;\n  data;\n  loading=true;\n  current_letter='';\n  currentURL;\n  buyersGuideCategoryData;\n  buyersguideCountryData;\n  \n  titleCheck:any;\n\n  companiesTitleArray={\n      '1':{ '0':'Featured Supplier Showcase Companies'   ,'1':'Supplier Showcase Companies',   '2':'Featured Companies'},\n      '5':{ '0':'Featured Company Capabilities Microsite','1':'Company Capabilities Microsite','2':'Featured Companies'},\n      '6':{ '0':'Featured Company Profiles Microsite'    ,'1':'Company Profiles Microsite',    '2':'Featured Companies'},\n      '7':{ '0':'Featured Microsite Companies'           ,'1':'Microsite Companies',           '2':'Featured Companies'},\n      '8':{ '0':'Featured Company Profiles Microsite'    ,'1':'Company Profiles Microsite',    '2':'Featured Companies'},\n      '9':{ '0':'Featured Corporate Profile Microsite'   ,'1':'Corporate Profile Microsite',   '2':'Featured Companies'},\n      '10':{ '0':'Featured Technical Profile Microsite'  ,'1':'Technical Profile Microsite',   '2':'Featured Companies'},\n      '11':{ '0':'Featured Microsite Companies'          ,'1':'Microsite Companies',           '2':'Featured Companies'},\n      '12':{ '0':'Featured Microsite Companies'          ,'1':'Microsite Companies',           '2':'Featured Companies'},\n      '13':{ '0':'Company Profile MicrositePLUS'         ,'1':'Company Profile Microsite',     '2':'Featured Companies'},\n      '14':{ '0':'Featured Microsite Companies'          ,'1':'Microsite Companies',           '2':'Featured Companies'},\n      '15':{ '0':'Featured Technical Profile Microsite'  ,'1':'Technical Profile Microsite',   '2':'Featured Companies'},\n  };\n\n\n\n\n  featuredmicrositeCompanies = [];\n  micrositeCompanies = [] ;\n  featuredBgCompanies = [];\n\n\n  constructor(public ActivatedRoute:ActivatedRoute, public DirectoryHomePageService:DirectoryHomePageService,public RodmanCoreService:RodmanCoreService,public Router:Router) { \n    Router.events.subscribe(event => {\n      if (event instanceof NavigationEnd ) {\n        this.currentURL = event.url; \n      }\n    });\n  }\n\n  ngOnInit() {\n    this.ActivatedRoute.data.subscribe(data => {\n      this.magazineId=data.magazineId;\n    });\n    this.getPageAd();\n    this.buyersguideCategory();\n    this.buyerGuideCompany();\n    this.buyersguideCountry();\n    \n  }\n  \n  getPageAd(){\n    this.RodmanCoreService.getAllAdst(this.magazineId).subscribe((data =>{\n      this.getAllAd = data;\n      this.viewAdRender = 1;\n    }))\n  }\n\n  buyerGuideCompany(){    \n    this.DirectoryHomePageService.buyerGuideCompany(this.magazineId,this.currentURL).subscribe((data)=>{\n      this.data = data['data'];\n      for(let compnayCheck of this.data){\n        if((compnayCheck.has_microsite_listing == 1 ) && (compnayCheck.has_priority_listing == 1) && (compnayCheck.has_featured_mircosite_listing == 1) ){\n            this.featuredmicrositeCompanies.push(compnayCheck);                   \n        }else if((compnayCheck.has_microsite_listing == 1 ) && (compnayCheck.has_priority_listing == 1) && (compnayCheck.has_featured_mircosite_listing == 0) ){\n            this.micrositeCompanies.push(compnayCheck); \n        }else if((compnayCheck.has_microsite_listing == 0 ) && (compnayCheck.has_priority_listing == 1) && (compnayCheck.has_featured_mircosite_listing == 0) ){\n          this.featuredBgCompanies.push(compnayCheck); \n          // let checkCompanyTitle = compnayCheck.content_type_id;\n          // if(checkCompanyTitle != this.titleCheck ){}\n        }      \n        if(compnayCheck.title.charAt(0).toUpperCase() != this.current_letter){\n          this.current_letter = compnayCheck.title.charAt(0).toUpperCase();\n          this.alphabet.push(compnayCheck.title.charAt(0).toUpperCase());\n        }       \n      }      \n      this.loading=false;\n    }); \n  }\n\n  buyersguideCategory(){\n    this.DirectoryHomePageService.buyersguideCategory(this.magazineId,this.currentURL).subscribe((data)=>{\n      this.buyersGuideCategoryData = data['data'];\n    });\n  }\n\n  buyersguideCountry(){\n    this.DirectoryHomePageService.buyersguideCountry(this.magazineId,this.currentURL).subscribe((data)=>{\n      this.buyersguideCountryData = data['country'];\n      console.log(this.buyersguideCountryData)\n    });\n  }\n\n  matchCharacter(current,pre){\n    if(current.charAt(0).toUpperCase() != pre){\n      this.current_letter = current.charAt(0);\n      return true;\n    }\n    return false;\n  }\n\n  safeHtml(data){\n    return data.replace(/[^a-zA-Z0-9 ]/g, \"\")\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { throwError, from } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as configVar from '../../rodman-core.service';\nimport { RodmanCoreService } from '../../rodman-core.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DirectoryHomePageService {\n\n  constructor(private HttpClient: HttpClient,private RodmanCoreService:RodmanCoreService ) { }\n\n  buyerGuideCompany(magazineId,slug) {\n     return this.HttpClient.post<any>(configVar.apiURL+'taxonomysController/buyersguideSearchDirectory',{magazineId:magazineId,slug:slug}, configVar.httpOptions).pipe(\n       catchError(this.RodmanCoreService.handleError)\n     );\n  }\n  buyersguideCategory(magazineId,slug){\n    return this.HttpClient.post<any>(configVar.apiURL+'taxonomysController/buyersguideCategory',{magazineId:magazineId,slug:slug}, configVar.httpOptions).pipe(\n      catchError(this.RodmanCoreService.handleError)\n    );\n  }\n  buyersguideCountry(magazineId,slug){\n    return this.HttpClient.post<any>(configVar.apiURL+'taxonomysController/buyersguideCountry',{magazineId:magazineId,slug:slug}, configVar.httpOptions).pipe(\n      catchError(this.RodmanCoreService.handleError)\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { throwError, from } from 'rxjs';\nimport { catchError ,map } from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport { DomSanitizer} from '@angular/platform-browser';\nimport { Event,NavigationEnd,Router} from '@angular/router';    \nimport {Ads } from './ads';\n\n'use strict';\n\nexport const apiURL='http://3.85.159.45:8042/';\nexport const httpOptions ={ headers: new HttpHeaders({'Content-Type': 'application/json','Authorization': 'Basic YWRtaW46YWRtaW5AMTIz'}) };  \nexport const  magazineNameDetails =  { \n                              'NUT':{ id:'1'  ,name:'Nutraceuticals world'} , \n                              'CW' :{ id:'5'  ,name:'Coating World'},\n                              'MPO':{ id:'6'  ,name:'Medical Product Outsourcing'},\n                              'CP' :{ id:'7'  ,name:'Contract Pharma'}, \n                              'BP' :{ id:'8'  ,name:'Beauty Packaging'},\n                              'HAP':{ id:'9'  ,name:'Happi'},\n                              'INK':{ id:'10' ,name:'Ink World'},\n                              'LNW':{ id:'11' ,name:'Label & Narrow Web'},\n                              'NON':{ id:'13' ,name:'Nonwovens Industry'},                \n                              'ODT':{ id:'14' ,name:'Orthopedic Design & Technology'}, \n                              'PEN':{ id:'15' ,name:'Printed Electronics Now'},               \n                            };\nexport const  magazineIds =  { \n                                  '1' :{ id:'NUT' ,name:'Nutraceuticals world'} , \n                                  '5' :{ id:'CW'  ,name:'Coating World'},\n                                  '6' :{ id:'MPO' ,name:'Medical Product Outsourcing'},\n                                  '7' :{ id:'CP'  ,name:'Contract Pharma'}, \n                                  '8' :{ id:'BP'  ,name:'Beauty Packaging'},\n                                  '9' :{ id:'HAP' ,name:'Happi'},\n                                  '10':{ id:'INK' ,name:'Ink World'},\n                                  '11':{ id:'LNW' ,name:'Label & Narrow Web'},\n                                  '13':{ id:'NON' ,name:'Nonwovens Industry'},                \n                                  '14':{ id:'ODT' ,name:'Orthopedic Design & Technology'}, \n                                  '15':{ id:'PEN' ,name:'Printed Electronics Now'},               \n                                };\n\nexport const IMAGE_DOMAIN  = \"http://dev.rodpub.com/images/\";\nexport const DEFAULT_IMAGE = \"http://kaverisias.com/wp-content/uploads/2018/01/catalog-default-img.gif\";                    \n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RodmanCoreService {\n  errorData: {};\n  currentURL;\n  getAllAdsData; \n  collectoionAds:any=[]; \n  finalArray :any=[];\n\n  constructor(public HttpClient: HttpClient,public sanitizer: DomSanitizer,public Router:Router){\n    Router.events.subscribe(event => {\n      if (event instanceof NavigationEnd ) {\n        this.currentURL = event.url; \n      }\n    });\n  }\n\n\n\n  displayImageUrl(imageId) {\n    imageId = imageId.toString();\n    let folderName = imageId.substring(0, 3); \n    let imageName  = imageId.substring(3); \n    return (imageId!='0') ? IMAGE_DOMAIN+folderName+\"/\"+imageName+'_main.jpg' : DEFAULT_IMAGE;   \n  }\n\n  displayImageThumbURL(imageId) {\n    imageId = imageId.toString();\n    let folderName = imageId.substring(0, 3); \n    let imageName  = imageId.substring(3); \n    return (imageId!='0') ? IMAGE_DOMAIN+folderName+\"/\"+imageName+'_thumb.jpg' : DEFAULT_IMAGE;   \n  }\n        \n\n  returnUrl(){\n    return this.currentURL;\n  } \n\n  getAllAdst(magazineId){\n    return this.HttpClient.post<any>(apiURL+'adsController/getAds',{magazineId:magazineId,pageUrl:this.currentURL},httpOptions);   \n  }\n\n\n  \n  getAdcode(str){\n    str = str.replace(/\\'/g,'');\n    str = str.replace(/\\\\/g,'');\n    var firstIndex = str.indexOf(\"script\") + 10;\n    var lastIndex = str.indexOf(\"/script>\");\n    str = str.substring(firstIndex,lastIndex);\n    if(str.indexOf('defineSlot') < 0)\n        return false;\n    var slot = str.substring(str.indexOf(\"defineSlot(\")+11,  str.indexOf(\").addService\"));\n    var slotvalue = slot.split(',')[0]\n    var code = {\n        slot: slotvalue,\n        sizes: str.substring( str.lastIndexOf(\"[[\")+1,  str.lastIndexOf(\"]]\")+1 ),\n        key: str.substring( str.lastIndexOf('setTargeting(\"')+14,  str.lastIndexOf('\",') ),\n        value : str.substring( str.lastIndexOf('\",[')+4,  str.lastIndexOf('])') )\n    }\n    return code\n}\n\n  safeHtml(data) {\n    return this.sanitizer.bypassSecurityTrustHtml(data);\n } \n\n\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    this.errorData = {\n      errorTitle: 'Oops! Request for document failed',\n      errorDesc: 'Something bad happened. Please try again later.'\n    };\n    return throwError(this.errorData);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9yb2RtYW4tY29yZS9zcmMvbGliL3NpdGVzL2NvbXBvbmVudHMvbm90LWZvdW5kL25vdC1mb3VuZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'CoreLib-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9yb2RtYW4tY29yZS9zcmMvbGliL3VzZXJzL0NvbXBvbmVudHMvdXNlci1wcm9maWxlL3VzZXItcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, RouterModule ,ActivatedRoute} from '@angular/router';\n\n\n@Component({\n  selector: 'CoreLib-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\nmessage= false;\nmagazineId;\nmymsg;\nconstructor(private ActivatedRoute: ActivatedRoute) { \n\n}\n\nngOnInit() {\n  this.ActivatedRoute.data.subscribe(data => {\n    this.magazineId=data.magazineId;\n    // console.log(this.magazineId)\n});\n\n  if(localStorage.getItem('authDetails'+this.magazineId)){\n    const data = JSON.parse(localStorage.getItem('authDetails'+this.magazineId));\n    this.message =true;\n  }else{\n     \n  }\n}\n\n}\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// import { ViewContentComponent } from './view-content/view-content.component';\nimport { environment } from '../environments/environment';\nimport { UserMailVerifyComponent } from './user/component/user-mail-verify/user-mail-verify.component';\nimport { ContentViewComponent } from './content/content-view/content-view.component';\n\n\n\n\n// Rodman Core Import\nimport { ContentSearchComponent } from '../../../rodman-core/src/lib/contents/content-search/content-search.component';\nimport { NotFoundComponent } from '../../../rodman-core/src/lib/sites/components/not-found/not-found.component';\nimport { UserProfileComponent } from '../../../rodman-core/src/lib/users/Components/user-profile/user-profile.component';\nimport { StaticContentComponent } from \"../../../rodman-core/src/lib/contents/static-content/static-content.component\";\nimport { ContentGlossaryComponent } from \"../../../rodman-core/src/lib/contents/content-glossary/content-glossary.component\";\nimport { ContentIssueComponent } from \"../../../rodman-core/src/lib/contents/content-issue/content-issue.component\";\nimport { ContentRssFeedsComponent } from \"../../../rodman-core/src/lib/contents/content-rss-feeds/content-rss-feeds.component\";\nimport { DirectoryHomePageComponent } from \"../../../rodman-core/src/lib/directory-section/directory-home-page/directory-home-page.component\";\n// import { ContentInfograpicComponent } from '../app//content/content-infograpic/content-infograpic.component';\nimport { ContentInfographicsComponent } from \"../../../rodman-core/src/lib/contents/content-infographics/content-infographics.component\";\nimport{ ContentsWebinarComponent } from '../../../rodman-core/src/lib/contents/contents-webinar/contents-webinar.component'\n\n\n\n// import { UsersVerifyEmailComponent } from '../../../rodman-core/src/lib/users/users-verify-email/users-verify-email.component';\n\n\n\nconst routes: Routes = [\n  {path: \"\", pathMatch: 'full' , loadChildren: () =>import('./pen-home/pen-home.module').then (m=>m.PENHomeModule)},\n\n// Search Content \n  {path:  'contents/list_webinars', component:ContentsWebinarComponent,data: {magazineId: environment.magazineId }},\n  {path:  'contents/list_infographics', component:ContentInfographicsComponent,data: {magazineId: environment.magazineId }},  \n  {path:  'contents/list_industry-events', component:ContentInfographicsComponent,data: {magazineId: environment.magazineId }},\n  {path:  'contents/list_ebook', component:NotFoundComponent},\n\n  {path:  'contents/searchcontent/:any/:slug', component:ContentSearchComponent,data: {magazineId: environment.magazineId }},\n  {path:  'contents/searchcontent/:any', component:ContentSearchComponent,data: {magazineId: environment.magazineId }},\n  {path:  'contents/searchcontent', component:ContentSearchComponent,data: {magazineId: environment.magazineId }},\n\n//View Page Content  \n  {path:  'contents/:any/:any/:any', component:ContentViewComponent,data: {magazineId: environment.magazineId }},\n  {path:  'issues/:any/:any/:any', component:ContentViewComponent,data: {magazineId: environment.magazineId }}, \n\n\n//Taxonomy\n  {path:  'formulary/:any', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  {path:  'news/:any', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  \n  {path:  'printed-electronics', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  {path:  'printed-electronics/:any', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n\n  {path:  'raw-materials', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  {path:  'raw-materials/:any', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n\n  {path:  'equipment', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  {path:  'equipment-and-services/:any', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  {path:  'equipment/:any', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n\n  {path:  'services', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  {path:  'services/:any', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n\n  {path:  'columns/:any', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  {path:  'knowledge-base/:any', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  {path:  'salary-survey/:any', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  {path:  'breaking-news/:any', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  {path:  'live-from-shows', loadChildren: () =>import('./taxonomy/taxonomy.module').then (m=>m.TaxonomyModule)},\n  \n\n//Contents\n\n  {path:  'glossary', component:ContentGlossaryComponent,data: {magazineId: environment.magazineId }},\n  {path:  'contents/:any', loadChildren: () =>import('./content/content.module').then (m=>m.ContentModule)}, \n  \n  {path:'resources',loadChildren: () =>import('./content/content.module').then (m=>m.ContentModule)}, \n  {path: 'profile',component : UserProfileComponent,data: {magazineId: environment.magazineId }},\n  {path: 'user/verifyUser/:token/:email',component:UserMailVerifyComponent},\n\n\n\n//Undefined Or Want Diffrent Api Or Pages \n  // BuyerGuide Case \n    // {path:  'buyersguide/profile/:company/:slug',component: BuyerGuideCompanyContentViewComponent,data: {magazineId: environment.magazineId }},\n    {path:  'buyersguide',component : DirectoryHomePageComponent,data: {magazineId: environment.magazineId }},\n    {path:  'buyersguide/all_companies',component : DirectoryHomePageComponent,data: {magazineId: environment.magazineId }},\n\n\n// OtherCase Static Content\n  {path: 'subscribe-now', component : StaticContentComponent,data: {magazineId: environment.magazineId }},\n  {path: 'advertise-with-us',component : StaticContentComponent,data: {magazineId: environment.magazineId }},\n  {path: 'enewsletter-archive',component : StaticContentComponent,data: {magazineId: environment.magazineId }},\n  {path: 'staff',component : StaticContentComponent,data: {magazineId: environment.magazineId }},\n  {path: 'editorial-guidelines',component : StaticContentComponent,data: {magazineId: environment.magazineId }},\n  {path: 'terms-and-conditions',component : StaticContentComponent,data: {magazineId: environment.magazineId }},\n  {path: 'privacy-policy',component : StaticContentComponent,data: {magazineId: environment.magazineId }},\n    // static Footer Link\n    {path: 'about-us', component : StaticContentComponent,data: {magazineId: environment.magazineId }},\n    {path: 'contact-us', component : StaticContentComponent,data: {magazineId: environment.magazineId }},\n\n//Rss\n  {path: 'rssfeeds', component : ContentRssFeedsComponent,data: {magazineId: environment.magazineId }},\n\n  // {path: 'echo Magazine::latestIssueURL()',      redirectTo: 'issue',      pathMatch: 'full'    },\n  // {path:  'issues',component : ContentIssueComponent,data: {magazineId: environment.magazineId }},\n  {path:  'issues/:slug',component : ContentIssueComponent,data: {magazineId: environment.magazineId }},\n  {path:  \"**\", component : NotFoundComponent},\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9QRU4vc3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyJ9 */\"","import { Component ,OnInit } from '@angular/core';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { Router, NavigationEnd,ActivatedRoute } from '@angular/router';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'pen-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'PEN';\n  magazineId ;\n  magazineName;\n  currentURL;\n  \n  constructor (public spinnerService: Ng4LoadingSpinnerService,public Router : Router ,public ActivatedRoute:ActivatedRoute){\n    Router.events.subscribe(event => {\n      if (event instanceof NavigationEnd ) {\n        this.currentURL = event.url; \n      }\n    });\n\n    Router.events.subscribe((ev) => {\n        this.spinner();\n    });\n    this.magazineId= environment.magazineId;\n    this.magazineName = environment.magazineName;\n  }\n\n  ngOnInit() {\n    this.ActivatedRoute.url.subscribe(url =>{ \n      this.currentURL = url[0].path;\n\n    });\n  }\n\n  \n  ngOnChanges (){\n    \n  }\n \n  spinner(){\n    \n    this.spinnerService.show();\n    setTimeout(()=>this.spinnerService.hide(),3000)\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\n\n\n\n// Rodman Core Import\n  import {HomeModule,SitesModule,ContentsModule,UsersModule,TaxonomiesModule,AdsModule,DirectorySectionModule} from 'rodman-core';\n  // import { BuyerGuideModule } from \"rodman-core\";\n\n  import { ContentSearchComponent } from '../../../rodman-core/src/lib/contents/content-search/content-search.component';\n  import { NotFoundComponent } from '../../../rodman-core/src/lib/sites/components/not-found/not-found.component';\n  import { UserProfileComponent } from '../../../rodman-core/src/lib/users/Components/user-profile/user-profile.component';\n  import { StaticContentComponent } from \"../../../rodman-core/src/lib/contents/static-content/static-content.component\";\n  import { ContentGlossaryComponent } from \"../../../rodman-core/src/lib/contents/content-glossary/content-glossary.component\";\n  import { ContentIssueComponent } from \"../../../rodman-core/src/lib/contents/content-issue/content-issue.component\";\n  import { ContentRssFeedsComponent } from \"../../../rodman-core/src/lib/contents/content-rss-feeds/content-rss-feeds.component\";\n  import { DirectoryHomePageComponent } from \"../../../rodman-core/src/lib/directory-section/directory-home-page/directory-home-page.component\";\n  import { ContentsWebinarComponent } from '../../../rodman-core/src/lib/contents/contents-webinar/contents-webinar.component'\n\n\n\n\n  \n  // import { ViewContentComponent } from \"../../../rodman-core/src/lib/content/view-content/view-content.component\";\n  // import { UsersVerifyEmailComponent } from '../../../rodman-core/src/lib/users/users-verify-email/users-verify-email.component';\n\n\n// import { ViewContentComponent } from './view-content/view-content.component';\nimport { UserMailVerifyComponent } from './user/component/user-mail-verify/user-mail-verify.component';\nimport { ContentViewComponent } from './content/content-view/content-view.component';\n// import { ContentInfograpicComponent } from '../app//content/content-infograpic/content-infograpic.component';\nimport { ContentInfographicsComponent } from \"../../../rodman-core/src/lib/contents/content-infographics/content-infographics.component\";\n\n\n// import { UserProfileComponent } from './user-profile/user-profile.component';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotFoundComponent,    \n    ContentSearchComponent,          \n    UserProfileComponent,\n    StaticContentComponent,\n    UserMailVerifyComponent,\n    ContentViewComponent,\n    ContentGlossaryComponent,\n    ContentIssueComponent,\n    ContentRssFeedsComponent,\n    DirectoryHomePageComponent,\n    ContentInfographicsComponent,\n    ContentsWebinarComponent\n    // UsersVerifyEmailComponent,\n    // BuyerGuideCompanyContentViewComponent\n  ],\n  imports: [\n    Ng4LoadingSpinnerModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularFontAwesomeModule,\n    HomeModule,\n    SitesModule,\n    DirectorySectionModule,\n    // ContentModule,\n    ContentsModule,\n    \n    UsersModule,\n    TaxonomiesModule,\n    AdsModule,\n    // BuyerGuideModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9QRU4vc3JjL2FwcC9jb250ZW50L2NvbnRlbnQtdmlldy9jb250ZW50LXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'pen-content-view',\n  templateUrl: './content-view.component.html',\n  styleUrls: ['./content-view.component.css']\n})\nexport class ContentViewComponent implements OnInit {\n\n  contentPageUrl : any ;\n  public magazineId = environment.magazineId;\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {\n    this.magazineId = environment.magazineId ;\n       router.events.subscribe(event => {\n        if (event instanceof NavigationEnd ) {\n          this.contentPageUrl = event.url;         \n        }\n      });\n  }\n\n\n  ngOnInit() {\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9QRU4vc3JjL2FwcC91c2VyL2NvbXBvbmVudC91c2VyLW1haWwtdmVyaWZ5L3VzZXItbWFpbC12ZXJpZnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, RouterModule ,ActivatedRoute} from '@angular/router';\nimport { environment } from '../../../../environments/environment'\n\n\n\n@Component({\n  selector: 'pen-user-mail-verify',\n  templateUrl: './user-mail-verify.component.html',\n  styleUrls: ['./user-mail-verify.component.css']\n})\nexport class UserMailVerifyComponent implements OnInit {\n  token;\n  email;\n  magazineId;\n  constructor( private ActivatedRoute: ActivatedRoute) {\n      this.ActivatedRoute.params.subscribe(params => {\n          this.token = params['token']; \n          this.email = params['email']; \n      });\n      this.magazineId =  environment.magazineId;  \n   }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL :'http://3.85.159.45:8042/' ,\n  magazineId:'15',\n  magazineName:'PEN',\n  homeBoxId:\"24994,5\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}